public final class com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod extends java.lang.Object implements com.opengamma.analytics.financial.forex.method.ForexPricingMethod
{
    private static final com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod INSTANCE;
    private static final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION;

    public static com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        com.opengamma.analytics.math.function.Function1D r4;
        com.opengamma.util.money.CurrencyAmount r5;
        com.opengamma.util.money.Currency $r8, $r9, $r21, $r22, $r23, $r24, $r32;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r14, $r15, $r19, $r29, $r31;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11, $r16, $r30;
        java.lang.String $r12, $r17;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13, $r18;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r20;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r25;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r26;
        java.lang.Object $r27;
        java.lang.Double $r28;
        com.opengamma.util.money.CurrencyAmount[] $r33;
        com.opengamma.util.money.MultipleCurrencyAmount $r34;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, $r9);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d6 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d6);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r17);

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d7 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d7);

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r21, $r22);

        $d8 = d2 * d1;

        d3 = $d8 / d0;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r23, $r24, $d9, $d10, d3);

        $r25 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r25.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d3, d0, d4);

        $r26 = <com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION>;

        r4 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>(r1);

        $r27 = virtualinvoke r4.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r25);

        $r28 = (java.lang.Double) $r27;

        $d11 = virtualinvoke $r28.<java.lang.Double: double doubleValue()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d12 = virtualinvoke $r30.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d13 = staticinvoke <java.lang.Math: double abs(double)>($d12);

        $d14 = $d11 * $d13;

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d15 = 1.0;

        goto label2;

     label1:
        $d15 = -1.0;

     label2:
        d5 = $d14 * $d15;

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r32 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        r5 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r32, d5);

        $r33 = newarray (com.opengamma.util.money.CurrencyAmount)[1];

        $r33[0] = r5;

        $r34 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.CurrencyAmount[])>($r33);

        return $r34;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r4;
        com.opengamma.util.money.MultipleCurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Vanilla Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public double impliedVolatility(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9;
        boolean $z0, $z1;
        com.opengamma.util.money.Currency $r6, $r7, $r19, $r20, $r21, $r22;
        com.opengamma.analytics.financial.forex.derivative.Forex $r8, $r12, $r13, $r17;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r9, $r14;
        java.lang.String $r10, $r15;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r11, $r16;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r18;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r6, $r7);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r10 = virtualinvoke $r9.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r11 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r10);

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d5 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r11.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d5);

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r15);

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d6 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d6);

        $r18 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r19, $r20);

        $d7 = d2 * d1;

        d3 = $d7 / d0;

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r21, $r22, $d8, $d9, d3);

        return d4;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30;
        double[] r4;
        com.opengamma.util.money.CurrencyAmount[] r5;
        com.opengamma.util.money.Currency $r8, $r9, $r21, $r22, $r23, $r24, $r30, $r35;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.Forex $r10, $r14, $r15, $r19, $r27, $r29, $r31, $r34, $r36;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r11, $r16, $r28, $r32, $r37;
        java.lang.String $r12, $r17;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13, $r18;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r20;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r25;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r26;
        com.opengamma.util.money.CurrencyAmount $r33, $r38;
        com.opengamma.util.money.MultipleCurrencyAmount $r39;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, $r9);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d8 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d8);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r18 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r17);

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d9 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r18.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d9);

        $r20 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r21, $r22);

        $d10 = d2 * d1;

        d3 = $d10 / d0;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r23, $r24, $d11, $d12, d3);

        $r25 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r25.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d3, d0, d4);

        $r26 = <com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION>;

        r4 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>(r1, $r25);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d30 = 1.0;

        goto label2;

     label1:
        $d30 = -1.0;

     label2:
        $d13 = r4[0];

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r28 = virtualinvoke $r27.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d14 = virtualinvoke $r28.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d15 = staticinvoke <java.lang.Math: double abs(double)>($d14);

        $d16 = $d13 * $d15;

        d6 = $d16 * $d30;

        $d17 = r4[1];

        $d18 = $d17 * d1;

        d7 = $d18 / d0;

        r5 = newarray (com.opengamma.util.money.CurrencyAmount)[2];

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r32 = virtualinvoke $r31.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d19 = virtualinvoke $r32.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d20 = staticinvoke <java.lang.Math: double abs(double)>($d19);

        $d21 = d7 * $d20;

        $d22 = $d21 * $d30;

        $r33 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r30, $d22);

        r5[0] = $r33;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $d23 = neg d7;

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r37 = virtualinvoke $r36.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d24 = virtualinvoke $r37.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d25 = staticinvoke <java.lang.Math: double abs(double)>($d24);

        $d26 = $d23 * $d25;

        $d27 = $d26 * d2;

        $d28 = $d27 * $d30;

        $d29 = $d28 + d6;

        $r38 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r35, $d29);

        r5[1] = $r38;

        $r39 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.CurrencyAmount[])>(r5);

        return $r39;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r4;
        com.opengamma.util.money.MultipleCurrencyAmount $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Vanilla Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public double deltaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        boolean z0, $z1, $z2, $z3;
        double d0, d1, d2, d3, d4, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        com.opengamma.util.money.Currency $r5, $r6, $r18, $r19, $r20, $r21;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r11, $r12, $r16;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r8, $r13;
        java.lang.String $r9, $r14;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r15;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r17;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r5, $r6);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r9);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d8 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d8);

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r15 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r14);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d9 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d9);

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r18, $r19);

        $d10 = d2 * d1;

        d3 = $d10 / d0;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r20, $r21, $d11, $d12, d3);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z2 == 0 goto label1;

        $d19 = 1.0;

        goto label2;

     label1:
        $d19 = -1.0;

     label2:
        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $d15 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d3, $d13, $d14, d4, $z3);

        $d16 = $d15 * d1;

        d6 = $d16 * $d19;

        if z0 == 0 goto label3;

        return d6;

     label3:
        $d17 = neg d6;

        $d18 = $d17 * d2;

        d7 = $d18 * d2;

        return d7;
    }

    public double deltaRelativeSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        boolean z0, $z1, $z2, $z3;
        double d0, d1, d2, d3, d4, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        com.opengamma.util.money.Currency $r5, $r6, $r18, $r19, $r20, $r21;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r11, $r12, $r16;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r8, $r13;
        java.lang.String $r9, $r14;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r15;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r17;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r5, $r6);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r9);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d8 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d8);

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r15 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r14);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d9 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d9);

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r18, $r19);

        $d10 = d2 * d1;

        d3 = $d10 / d0;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r20, $r21, $d11, $d12, d3);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z2 == 0 goto label1;

        $d19 = 1.0;

        goto label2;

     label1:
        $d19 = -1.0;

     label2:
        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $d15 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d3, $d13, $d14, d4, $z3);

        $d16 = $d15 * d1;

        d6 = $d16 * $d19;

        if z0 == 0 goto label3;

        $d18 = d6 * d2;

        return $d18;

     label3:
        $d17 = neg d6;

        d7 = $d17 * d2;

        return d7;
    }

    public double gammaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        boolean z0, $z1, $z2, $z3;
        double d0, d1, d2, d3, d4, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        com.opengamma.util.money.Currency $r5, $r6, $r18, $r19, $r20, $r21;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r11, $r12, $r16;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r8, $r13;
        java.lang.String $r9, $r14;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r15;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r17;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r5, $r6);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r9);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d9 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d9);

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r15 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r14);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d10 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d10);

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r18, $r19);

        $d11 = d2 * d1;

        d3 = $d11 / d0;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r20, $r21, $d12, $d13, d3);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z2 == 0 goto label1;

        $d29 = 1.0;

        goto label2;

     label1:
        $d29 = -1.0;

     label2:
        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d16 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d3, $d14, $d15, d4);

        $d17 = d1 * d1;

        $d18 = $d16 * $d17;

        $d19 = $d18 / d0;

        d6 = $d19 * $d29;

        if z0 == 0 goto label3;

        return d6;

     label3:
        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $d22 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d3, $d20, $d21, d4, $z3);

        $d23 = $d22 * d1;

        d7 = $d23 * $d29;

        $d25 = d6 * d2;

        $d24 = 2.0 * d7;

        $d26 = $d25 + $d24;

        $d27 = $d26 * d2;

        $d28 = $d27 * d2;

        d8 = $d28 * d2;

        return d8;
    }

    public double gammaRelativeSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        boolean z0, $z1, $z2, $z3;
        double d0, d1, d2, d3, d4, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        com.opengamma.util.money.Currency $r5, $r6, $r18, $r19, $r20, $r21;
        com.opengamma.analytics.financial.forex.derivative.Forex $r7, $r11, $r12, $r16;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r8, $r13;
        java.lang.String $r9, $r14;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r15;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r17;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z1 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r5, $r6);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Option currencies not compatible with smile data");

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r9);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d9 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d9);

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r15 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r14);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d10 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d10);

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r18, $r19);

        $d11 = d2 * d1;

        d3 = $d11 / d0;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r20, $r21, $d12, $d13, d3);

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z2 == 0 goto label1;

        $d29 = 1.0;

        goto label2;

     label1:
        $d29 = -1.0;

     label2:
        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d16 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d3, $d14, $d15, d4);

        $d17 = d1 * d1;

        $d18 = $d16 * $d17;

        $d19 = $d18 / d0;

        d6 = $d19 * $d29;

        if z0 == 0 goto label3;

        $d28 = d6 * d2;

        return $d28;

     label3:
        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $z3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $d22 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d3, $d20, $d21, d4, $z3);

        $d23 = $d22 * d1;

        d7 = $d23 * $d29;

        $d25 = d6 * d2;

        $d24 = 2.0 * d7;

        $d26 = $d25 + $d24;

        $d27 = $d26 * d2;

        d8 = $d27 * d2;

        return d8;
    }

    public com.opengamma.util.money.CurrencyAmount delta(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r7;
        com.opengamma.util.money.Currency $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r8;
        com.opengamma.util.money.CurrencyAmount $r9;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: double deltaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,boolean)>(r1, r3, z0);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d1 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = d0 * $d2;

        $r9 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r6, $d3);

        return $r9;
    }

    public com.opengamma.util.money.CurrencyAmount gamma(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r7;
        com.opengamma.util.money.Currency $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r8;
        com.opengamma.util.money.CurrencyAmount $r9;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: double gammaRelative(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,boolean)>(r1, r3, z0);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d1 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = d0 * $d2;

        $r9 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r6, $d3);

        return $r9;
    }

    public com.opengamma.util.money.CurrencyAmount gammaSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, boolean)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r7;
        com.opengamma.util.money.Currency $r6;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r8;
        com.opengamma.util.money.CurrencyAmount $r9;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        z0 := @parameter2: boolean;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        d0 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: double gammaRelativeSpot(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,boolean)>(r1, r3, z0);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d1 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d3 = d0 * $d2;

        $r9 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r6, $d3);

        return $r9;
    }

    public com.opengamma.util.money.CurrencyAmount theta(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14, $r20, $r22;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11, $r21;
        java.lang.String $r7, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.util.money.Currency $r16, $r17, $r18, $r19, $r23;
        com.opengamma.util.money.CurrencyAmount $r24;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d7 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d7);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d8 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d8);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d9 = d2 * d1;

        d3 = $d9 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r18, $r19, $d10, $d11, d3);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d18 = 1.0;

        goto label2;

     label1:
        $d18 = -1.0;

     label2:
        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d14 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double driftlessTheta(double,double,double,double)>(d3, $d12, $d13, d4);

        $d15 = $d14 * $d18;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d16 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d17 = staticinvoke <java.lang.Math: double abs(double)>($d16);

        d6 = $d15 * $d17;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r24 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r23, d6);

        return $r24;
    }

    public com.opengamma.util.money.CurrencyAmount forwardTheta(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        boolean z0, $z1, $z2;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14, $r18, $r22, $r24, $r28, $r32, $r34;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11, $r19, $r25, $r33;
        java.lang.String $r7, $r12, $r20, $r26;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13, $r21, $r27;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.util.money.Currency $r16, $r17, $r30, $r31, $r35;
        java.lang.Double $r23, $r29;
        com.opengamma.util.money.CurrencyAmount $r36;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d10 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d10);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d11 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d11);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d12 = d2 * d1;

        d3 = $d12 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r21 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r20);

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d13 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d13);

        d4 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r23);

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r27 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r26);

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d14 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        d5 = virtualinvoke $r27.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r29);

        d6 = d4 - d5;

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d7 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r30, $r31, $d15, $d16, d3);

        z0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $z2 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z2 == 0 goto label1;

        $d23 = 1.0;

        goto label2;

     label1:
        $d23 = -1.0;

     label2:
        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d19 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double theta(double,double,double,double,double,double,boolean)>(d2, $d17, $d18, d7, d4, d6, z0);

        $d20 = $d19 * $d23;

        $r32 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r33 = virtualinvoke $r32.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d21 = virtualinvoke $r33.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d22 = staticinvoke <java.lang.Math: double abs(double)>($d21);

        d9 = $d20 * $d22;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r36 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r35, d9);

        return $r36;
    }

    public double thetaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        boolean z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14, $r18, $r22, $r24, $r28;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11, $r19, $r25;
        java.lang.String $r7, $r12, $r20, $r26;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13, $r21, $r27;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.util.money.Currency $r16, $r17, $r30, $r31;
        java.lang.Double $r23, $r29;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d8 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d8);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d9 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d9);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d10 = d2 * d1;

        d3 = $d10 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r19 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r21 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r20);

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d11 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        d4 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r23);

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r25 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r26 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r27 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r26);

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d12 = virtualinvoke $r28.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d12);

        d5 = virtualinvoke $r27.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r29);

        d6 = d4 - d5;

        $r30 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d7 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r30, $r31, $d13, $d14, d3);

        z0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d17 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double theta(double,double,double,double,double,double,boolean)>(d2, $d15, $d16, d7, d4, d6, z0);

        return $d17;
    }

    public double forwardDriftlessThetaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11;
        java.lang.String $r7, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.util.money.Currency $r16, $r17, $r18, $r19;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d5 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d5);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d6 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d6);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d7 = d2 * d1;

        d3 = $d7 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r18, $r19, $d8, $d9, d3);

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double driftlessTheta(double,double,double,double)>(d3, $d10, $d11, d4);

        return $d12;
    }

    public double forwardVegaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11;
        java.lang.String $r7, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.util.money.Currency $r16, $r17, $r18, $r19;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d5 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d5);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d6 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d6);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d7 = d2 * d1;

        d3 = $d7 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r18, $r19, $d8, $d9, d3);

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vega(double,double,double,double)>(d3, $d10, $d11, d4);

        return $d12;
    }

    public double spotDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, $d1, $d2, $d3;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6;
        java.lang.String $r7;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d1);

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: double forwardDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d3 = $d2 * d0;

        return $d3;
    }

    public double forwardDeltaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11;
        java.lang.String $r7, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.util.money.Currency $r16, $r17, $r18, $r19;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d5 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d5);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d6 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d6);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d7 = d2 * d1;

        d3 = $d7 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r18, $r19, $d8, $d9, d3);

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isCall()>();

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>(d3, $d10, $d11, d4, $z1);

        return $d12;
    }

    public double spotGammaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11;
        java.lang.String $r7, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d2 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d2);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d3 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: double forwardGammaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        $d5 = d1 * d1;

        $d6 = $d4 * $d5;

        $d7 = $d6 / d0;

        return $d7;
    }

    public double forwardGammaTheoretical(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11;
        java.lang.String $r7, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.util.money.Currency $r16, $r17, $r18, $r19;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d5 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d5);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d6 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d6);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d7 = d2 * d1;

        d3 = $d7 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r18, $r19, $d8, $d9, d3);

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d12 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double gamma(double,double,double,double)>(d3, $d10, $d11, d4);

        return $d12;
    }

    public com.opengamma.util.money.CurrencyAmount vanna(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14, $r20, $r22;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11, $r21;
        java.lang.String $r7, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.util.money.Currency $r16, $r17, $r18, $r19, $r23;
        com.opengamma.util.money.CurrencyAmount $r24;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d7 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d7);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d8 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d8);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d9 = d2 * d1;

        d3 = $d9 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r18, $r19, $d10, $d11, d3);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d19 = 1.0;

        goto label2;

     label1:
        $d19 = -1.0;

     label2:
        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d14 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vanna(double,double,double,double)>(d3, $d12, $d13, d4);

        $d15 = d1 * $d14;

        $d16 = $d15 * $d19;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d17 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d18 = staticinvoke <java.lang.Math: double abs(double)>($d17);

        d6 = $d16 * $d18;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r24 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r23, d6);

        return $r24;
    }

    public com.opengamma.util.money.CurrencyAmount vomma(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r3;
        double d0, d1, d2, d3, d4, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.Forex $r5, $r9, $r10, $r14, $r20, $r22;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r11, $r21;
        java.lang.String $r7, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.util.money.Currency $r16, $r17, $r18, $r19, $r23;
        com.opengamma.util.money.CurrencyAmount $r24;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Curves");

        $z0 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Yield curve bundle should contain smile data");

        r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d7 = virtualinvoke $r9.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d7);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r13 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r12);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d8 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d8);

        $r15 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d2 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $d9 = d2 * d1;

        d3 = $d9 / d0;

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d4 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r3, $r18, $r19, $d10, $d11, d3);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d19 = 1.0;

        goto label2;

     label1:
        $d19 = -1.0;

     label2:
        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d14 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double vomma(double,double,double,double)>(d3, $d12, $d13, d4);

        $d15 = d0 * $d14;

        $d16 = $d15 * $d19;

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d17 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d18 = staticinvoke <java.lang.Math: double abs(double)>($d17);

        d6 = $d16 * $d18;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r24 = staticinvoke <com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.CurrencyAmount of(com.opengamma.util.money.Currency,double)>($r23, d6);

        return $r24;
    }

    public com.opengamma.util.money.CurrencyAmount volga(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.util.money.CurrencyAmount $r3;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.util.money.CurrencyAmount vomma(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r1, r2);

        return $r3;
    }

    public double forwardForexRate(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod r3;
        com.opengamma.analytics.financial.forex.derivative.Forex $r4;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 = staticinvoke <com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod getInstance()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d0 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.method.ForexDiscountingMethod: double forwardForexRate(com.opengamma.analytics.financial.forex.derivative.Forex,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r4, r2);

        return $d0;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, d5, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34;
        java.lang.String r3, r4;
        double[] r6;
        com.opengamma.util.money.Currency $r13, $r14, $r16, $r17, $r25, $r26, $r42;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r15;
        com.opengamma.analytics.financial.forex.derivative.Forex $r18, $r19, $r21, $r29, $r41;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r20, $r22, $r30;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r23, $r24;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r27;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r28;
        java.util.ArrayList $r31, $r36;
        com.opengamma.util.tuple.DoublesPair $r32, $r37;
        java.util.HashMap $r33, $r38;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity $r35, $r40, r45;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r43;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r13, $r14);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        $r15 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d0 = virtualinvoke $r15.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r16, $r17);

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        d1 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        r3 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r22 = virtualinvoke $r21.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        r4 = virtualinvoke $r22.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r23 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r3);

        d2 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $r24 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r4);

        d3 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d13 = d0 * d3;

        d4 = $d13 / d2;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d5 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r25, $r26, $d14, $d15, d4);

        $r27 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r27.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d4, 1.0, d5);

        $r28 = <com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION>;

        r6 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>(r1, $r27);

        $d16 = r6[1];

        $d17 = $d16 * d2;

        d7 = $d17 * 1.0;

        $d18 = d0 / d2;

        d8 = $d18 * d7;

        $d20 = neg d0;

        $d19 = d2 * d2;

        $d21 = $d20 / $d19;

        $d22 = $d21 * d3;

        $d25 = $d22 * d7;

        $d23 = r6[0];

        $d24 = $d23 * 1.0;

        d9 = $d25 + $d24;

        $d26 = neg d1;

        $d27 = $d26 * d3;

        d10 = $d27 * d8;

        $d28 = neg d1;

        $d29 = $d28 * d2;

        d11 = $d29 * d9;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d30 = virtualinvoke $r30.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d31 = staticinvoke <java.lang.Math: double abs(double)>($d30);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d34 = 1.0;

        goto label2;

     label1:
        $d34 = -1.0;

     label2:
        d12 = $d31 * $d34;

        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        $d32 = d10 * d12;

        $r32 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d1, $d32);

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r32);

        $r33 = new java.util.HashMap;

        specialinvoke $r33.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r31);

        $r35 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r35.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r33);

        $r36 = new java.util.ArrayList;

        specialinvoke $r36.<java.util.ArrayList: void <init>()>();

        $d33 = d11 * d12;

        $r37 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d1, $d33);

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r37);

        $r38 = new java.util.HashMap;

        specialinvoke $r38.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r36);

        $r40 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r40.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r38);

        r45 = virtualinvoke $r35.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity plus(com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r40);

        $r41 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r42 = virtualinvoke $r41.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r43 = staticinvoke <com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r42, r45);

        return $r43;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r4;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Vanilla Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        double[] r4;
        com.opengamma.util.tuple.DoublesPair r5;
        com.opengamma.analytics.util.amount.SurfaceValue r6;
        com.opengamma.util.money.Currency $r10, $r11, $r18, $r19, $r25, $r26, $r31, $r37, $r39;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.forex.derivative.Forex $r12, $r16, $r20, $r24, $r29, $r36, $r38;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r13, $r21, $r30;
        java.lang.String $r14, $r22;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r15, $r23;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r17;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r27;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r28;
        com.opengamma.util.tuple.Pair $r32;
        java.lang.Object $r33;
        java.lang.Double $r34;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity $r35;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r10, $r11);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r14 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r15 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r14);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d5 = virtualinvoke $r16.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d5);

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d1 = virtualinvoke $r17.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r18, $r19);

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r21 = virtualinvoke $r20.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r22 = virtualinvoke $r21.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r23 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r22);

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d6 = virtualinvoke $r24.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $d7 = virtualinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d6);

        $d8 = d1 * $d7;

        d2 = $d8 / d0;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        d3 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: double getVolatility(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r25, $r26, $d9, $d10, d2);

        $r27 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        specialinvoke $r27.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d2, d0, d3);

        $r28 = <com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION>;

        r4 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>(r1, $r27);

        $d11 = r4[2];

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $d12 = virtualinvoke $r30.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d13 = staticinvoke <java.lang.Math: double abs(double)>($d12);

        $d14 = $d11 * $d13;

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: boolean isLong()>();

        if $z1 == 0 goto label1;

        $d17 = 1.0;

        goto label2;

     label1:
        $d17 = -1.0;

     label2:
        d4 = $d14 * $d17;

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r31 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r32 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.util.tuple.Pair getCurrencyPair()>();

        $r33 = virtualinvoke $r32.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        if $r31 != $r33 goto label3;

        $d18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        goto label4;

     label3:
        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d18 = 1.0 / $d16;

     label4:
        r5 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d15, $d18);

        $r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d4);

        r6 = staticinvoke <com.opengamma.analytics.util.amount.SurfaceValue: com.opengamma.analytics.util.amount.SurfaceValue 'from'(com.opengamma.util.tuple.DoublesPair,java.lang.Double)>(r5, $r34);

        $r35 = new com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity;

        $r36 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r37 = virtualinvoke $r36.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r38 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r39 = virtualinvoke $r38.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        specialinvoke $r35.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: void <init>(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,com.opengamma.analytics.util.amount.SurfaceValue)>($r37, $r39, r6);

        return $r35;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0, $z1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle $r3;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla $r4;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity $r5;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Vanilla Forex option");

        $z1 = r2 instanceof com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "Smile delta data bundle required");

        $r4 = (com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla) r1;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>($r4, $r3);

        return $r5;
    }

    public com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle presentValueBlackVolatilityNodeSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla, com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla r1;
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle r2;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity r3;
        com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation r4;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities r5;
        double[][] r6, r8;
        com.opengamma.util.tuple.DoublesPair r7;
        com.opengamma.util.money.Currency $r11, $r12, $r20, $r21, $r27, $r28, $r29, $r34, $r36;
        boolean $z0;
        com.opengamma.analytics.financial.model.volatility.VolatilityModel $r13;
        com.opengamma.analytics.financial.forex.derivative.Forex $r14, $r18, $r22, $r26, $r33, $r35;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r15, $r23;
        java.lang.String $r16, $r24;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r17, $r25;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r19;
        com.opengamma.util.tuple.Pair $r30;
        java.lang.Object $r31, $r46;
        int $i0, $i1, $i2, i3, $i4, i5;
        com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle $r32;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r37, $r39;
        double[] $r38, $r40, $r42, $r43;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r41;
        com.opengamma.analytics.util.amount.SurfaceValue $r44;
        java.util.HashMap $r45;
        java.lang.Double $r47;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Forex option");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Smile");

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $z0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r11, $r12);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Option currencies not compatible with smile data");

        r3 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity presentValueBlackVolatilitySensitivity(com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla,com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle)>(r1, r2);

        $r13 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.volatility.VolatilityModel getVolatilityModel()>();

        r4 = (com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation) $r13;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r17 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r16);

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d3 = virtualinvoke $r18.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        d0 = virtualinvoke $r17.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $r19 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        d1 = virtualinvoke $r19.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r20, $r21);

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r23 = virtualinvoke $r22.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r25 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r24);

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $d4 = virtualinvoke $r26.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $d5 = virtualinvoke $r25.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d4);

        $d6 = d1 * $d5;

        d2 = $d6 / d0;

        $r27 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r28 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency2()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        r5 = staticinvoke <com.opengamma.analytics.financial.forex.method.FXVolatilityUtils: com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities getVolatilityAndSensitivities(com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle,com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,double,double,double)>(r2, $r27, $r28, $d7, $d8, d2);

        r6 = virtualinvoke r5.<com.opengamma.analytics.financial.model.volatility.VolatilityAndBucketedSensitivities: double[][] getBucketedSensitivities()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getTimeToExpiry()>();

        $r29 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.util.money.Currency getCurrency1()>();

        $r30 = virtualinvoke r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaTermStructureDataBundle: com.opengamma.util.tuple.Pair getCurrencyPair()>();

        $r31 = virtualinvoke $r30.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        if $r29 != $r31 goto label1;

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        goto label2;

     label1:
        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: double getStrike()>();

        $d14 = 1.0 / $d10;

     label2:
        r7 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d9, $d14);

        $i0 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        $i1 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        r8 = newmultiarray (double)[$i0][$i1];

        i3 = 0;

     label3:
        $i4 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberExpiration()>();

        if i3 >= $i4 goto label6;

        i5 = 0;

     label4:
        $i2 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: int getNumberStrike()>();

        if i5 >= $i2 goto label5;

        $r43 = r8[i3];

        $r42 = r6[i3];

        $d11 = $r42[i5];

        $r44 = virtualinvoke r3.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilitySensitivity: com.opengamma.analytics.util.amount.SurfaceValue getVega()>();

        $r45 = virtualinvoke $r44.<com.opengamma.analytics.util.amount.SurfaceValue: java.util.HashMap getMap()>();

        $r46 = virtualinvoke $r45.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        $r47 = (java.lang.Double) $r46;

        $d12 = virtualinvoke $r47.<java.lang.Double: double doubleValue()>();

        $d13 = $d11 * $d12;

        $r43[i5] = $d13;

        i5 = i5 + 1;

        goto label4;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        $r32 = new com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle;

        $r33 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r34 = virtualinvoke $r33.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r35 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexOptionVanilla: com.opengamma.analytics.financial.forex.derivative.Forex getUnderlyingForex()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r37 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r38 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getTimeToExpiration()>();

        specialinvoke $r37.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r38);

        $r39 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r40 = virtualinvoke r4.<com.opengamma.analytics.financial.model.volatility.surface.SmileDeltaTermStructureParametersStrikeInterpolation: double[] getDeltaFull()>();

        specialinvoke $r39.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r40);

        $r41 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r41.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r8);

        specialinvoke $r32.<com.opengamma.analytics.financial.forex.method.PresentValueForexBlackVolatilityNodeSensitivityDataBundle: void <init>(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix2D)>($r34, $r36, $r37, $r39, $r41);

        return $r32;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod $r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r1;

        $r0 = new com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod INSTANCE> = $r0;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        <com.opengamma.analytics.financial.forex.method.ForexOptionVanillaBlackSmileMethod: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction BLACK_FUNCTION> = $r1;

        return;
    }
}
