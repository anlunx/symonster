public class com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator extends java.lang.Object
{
    com.opengamma.analytics.math.matrix.MatrixAlgebra MA;
    private final com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer;
    private final com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _builder;

    public void <init>()
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator r0;
        com.opengamma.analytics.math.matrix.OGMatrixAlgebra $r1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder $r3;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.opengamma.analytics.math.matrix.OGMatrixAlgebra;

        specialinvoke $r1.<com.opengamma.analytics.math.matrix.OGMatrixAlgebra: void <init>()>();

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MA> = $r1;

        $r2 = new com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer;

        specialinvoke $r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: void <init>()>();

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer> = $r2;

        $r3 = new com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder;

        specialinvoke $r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: void <init>()>();

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _builder> = $r3;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae r1;
        com.opengamma.analytics.math.matrix.OGMatrixAlgebra $r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder $r5;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.opengamma.analytics.math.matrix.OGMatrixAlgebra;

        specialinvoke $r2.<com.opengamma.analytics.math.matrix.OGMatrixAlgebra: void <init>()>();

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MA> = $r2;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "formula");

        $r4 = new com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer;

        specialinvoke $r4.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)>(r1);

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer> = $r4;

        $r5 = new com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder;

        specialinvoke $r5.<com.opengamma.analytics.financial.credit.isdastandardmodel.FastCreditCurveBuilder: void <init>(com.opengamma.analytics.financial.credit.isdastandardmodel.AccrualOnDefaultFormulae)>(r1);

        r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _builder> = $r5;

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getCurveSensitivities(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0, $d1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r2;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r3;
        int i0, i1;
        double[] r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r8;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r9;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        r3 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "creditCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "yieldCurve");

        i0 = virtualinvoke r2.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: int getNumberOfKnots()>();

        r4 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r9 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        $d1 = virtualinvoke $r9.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pvCreditSensitivity(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,int)>(r1, r3, r2, d0, i1);

        r4[i1] = $d1;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r8.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r4);

        return $r8;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D getCurveSensitivities(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r1;
        double[] r2, $r13;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r4;
        int i0, i1, $i2, i3, i4;
        double[][] r5;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r10;
        double $d0, $d1;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic $r11;
        com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer $r12;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r2 := @parameter1: double[];

        r3 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        r4 := @parameter3: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] noNulls(java.lang.Object[],java.lang.String)>(r1, "cds");

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r2, "coupons");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "creditCurve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "yieldCurve");

        i0 = lengthof r1;

        $i2 = lengthof r2;

        if i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "number of coupons not equal number of CDS");

        i1 = virtualinvoke r3.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve: int getNumberOfKnots()>();

        r5 = newmultiarray (double)[i1][i0];

        i3 = 0;

     label3:
        if i3 >= i0 goto label6;

        i4 = 0;

     label4:
        if i4 >= i1 goto label5;

        $r13 = r5[i4];

        $r12 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer _pricer>;

        $r11 = r1[i3];

        $d0 = r2[i3];

        $d1 = virtualinvoke $r12.<com.opengamma.analytics.financial.credit.isdastandardmodel.AnalyticCDSPricer: double pvCreditSensitivity(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,double,int)>($r11, r4, r3, $d0, i4);

        $r13[i3] = $d1;

        i4 = i4 + 1;

        goto label4;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        $r10 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r10.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r5);

        return $r10;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getHedgeRatios(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r2;
        double[] r3, r4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r5;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r6;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder $r7;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r8;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r3 := @parameter3: double[];

        r4 := @parameter4: double[];

        r5 := @parameter5: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        $r7 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder _builder>;

        r6 = virtualinvoke $r7.<com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurveBuilder: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve calibrateCreditCurve(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve,double[])>(r2, r3, r5, r4);

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D getHedgeRatios(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r1, d0, r2, r3, r6, r5);

        return $r8;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getHedgeRatios(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic, double, com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[], double[], com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve, com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator r0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic r1;
        double d0;
        com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[] r2;
        double[] r3;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve r4;
        com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve r5;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r6, $r8;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r7;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[];

        r3 := @parameter3: double[];

        r4 := @parameter4: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve;

        r5 := @parameter5: com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve;

        r6 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D getCurveSensitivities(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic,double,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r1, d0, r4, r5);

        r7 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix2D getCurveSensitivities(com.opengamma.analytics.financial.credit.isdastandardmodel.CDSAnalytic[],double[],com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantCreditCurve,com.opengamma.analytics.financial.credit.isdastandardmodel.ISDACompliantYieldCurve)>(r2, r3, r4, r5);

        $r8 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D getHedgeRatios(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.matrix.DoubleMatrix2D)>(r6, r7);

        return $r8;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getHedgeRatios(com.opengamma.analytics.math.matrix.DoubleMatrix1D, com.opengamma.analytics.math.matrix.DoubleMatrix2D)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, r3, $r13, $r23;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r2, r26, r27;
        int i0, i1, $i2;
        com.opengamma.analytics.math.linearalgebra.LUDecompositionResult r5, r25;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r7, $r8, $r10;
        com.opengamma.analytics.math.matrix.Matrix $r9, $r11;
        com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons $r12, $r22;
        java.lang.IllegalArgumentException $r14;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19, $r20;
        java.lang.String $r21;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r2 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "hedgeCDSSensitivities");

        i0 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        i1 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        $i2 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        if i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Number of matrix rows does not match vector length");

        if i1 != i0 goto label3;

        $r22 = new com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons;

        specialinvoke $r22.<com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons: void <init>()>();

        r25 = virtualinvoke $r22.<com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons: com.opengamma.analytics.math.linearalgebra.LUDecompositionResult evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>(r2);

        $r23 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D getHedgeRatios(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.linearalgebra.LUDecompositionResult)>(r1, r25);

        return $r23;

     label3:
        if i0 >= i1 goto label4;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Under-specified. No unique solution exists. There are ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" curve knots but ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hedging instruments.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r14;

     label4:
        $r7 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        r26 = virtualinvoke $r7.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.Matrix)>(r2);

        $r8 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r26, r2);

        r27 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r9;

        $r10 = r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.MatrixAlgebra MA>;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r26, r1);

        r3 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r11;

        $r12 = new com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons;

        specialinvoke $r12.<com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons: void <init>()>();

        r5 = virtualinvoke $r12.<com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons: com.opengamma.analytics.math.linearalgebra.LUDecompositionResult evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>(r27);

        $r13 = virtualinvoke r0.<com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D getHedgeRatios(com.opengamma.analytics.math.matrix.DoubleMatrix1D,com.opengamma.analytics.math.linearalgebra.LUDecompositionResult)>(r3, r5);

        return $r13;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getHedgeRatios(com.opengamma.analytics.math.matrix.DoubleMatrix1D, com.opengamma.analytics.math.linearalgebra.LUDecompositionResult)
    {
        com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1, r3;
        com.opengamma.analytics.math.linearalgebra.LUDecompositionResult r2;

        r0 := @this: com.opengamma.analytics.financial.credit.isdastandardmodel.HedgeRatioCalculator;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        r2 := @parameter1: com.opengamma.analytics.math.linearalgebra.LUDecompositionResult;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "cdsSensitivities");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, " luRes");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.math.linearalgebra.LUDecompositionResult: com.opengamma.analytics.math.matrix.DoubleMatrix1D solve(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>(r1);

        return r3;
    }
}
