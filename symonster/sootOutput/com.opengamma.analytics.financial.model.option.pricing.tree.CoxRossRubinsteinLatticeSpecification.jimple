public class com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification extends com.opengamma.analytics.financial.model.option.pricing.tree.LatticeSpecification
{

    public void <init>()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification r0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.LatticeSpecification: void <init>()>();

        return;
    }

    public double[] getParameters(double, double, double, double, double, int, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        int i0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        i0 := @parameter5: int;

        d5 := @parameter6: double;

        $d9 = staticinvoke <java.lang.Math: double sqrt(double)>(d5);

        $d10 = d3 * $d9;

        d6 = staticinvoke <java.lang.Math: double exp(double)>($d10);

        d7 = 1.0 / d6;

        $d11 = d4 * d5;

        $d12 = staticinvoke <java.lang.Math: double exp(double)>($d11);

        $d14 = $d12 - d7;

        $d13 = d6 - d7;

        d8 = $d14 / $d13;

        $r1 = newarray (double)[4];

        $r1[0] = d6;

        $r1[1] = d7;

        $r1[2] = d8;

        $d15 = 1.0 - d8;

        $r1[3] = $d15;

        return $r1;
    }

    public double getTheta(double, double, double, double, double, double[])
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9;
        double[] r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        r1 := @parameter5: double[];

        $d6 = r1[3];

        $d5 = r1[0];

        $d7 = $d6 - $d5;

        $d8 = 0.5 * $d7;

        $d9 = $d8 / d4;

        return $d9;
    }

    public double[] getParametersTrinomial(double, double, double, double, double, int, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d9, d10, d11, d13, d14, d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28;
        int i0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        i0 := @parameter5: int;

        d5 := @parameter6: double;

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>(1.5);

        d7 = staticinvoke <java.lang.Math: double sqrt(double)>(d5);

        $d17 = 0.5 * d3;

        $d18 = $d17 * d3;

        d9 = d4 - $d18;

        $d19 = d6 * d3;

        d10 = $d19 * d7;

        d11 = staticinvoke <java.lang.Math: double exp(double)>(d10);

        $d20 = neg d10;

        d13 = staticinvoke <java.lang.Math: double exp(double)>($d20);

        $d21 = 0.5 * d9;

        $d22 = $d21 * d7;

        $d23 = $d22 / d6;

        $d24 = $d23 / d3;

        d14 = 0.3333333333333333 + $d24;

        $d25 = 0.5 * d9;

        $d26 = $d25 * d7;

        $d27 = $d26 / d6;

        $d28 = $d27 / d3;

        d16 = 0.3333333333333333 - $d28;

        $r1 = newarray (double)[6];

        $r1[0] = d11;

        $r1[1] = 1.0;

        $r1[2] = d13;

        $r1[3] = d14;

        $r1[4] = 0.33333333333333337;

        $r1[5] = d16;

        return $r1;
    }

    public double[] getParametersTrinomial(double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification r0;
        double d0, d1, d2, d3, d4, d6, d7, d8, d10, d11, d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.CoxRossRubinsteinLatticeSpecification;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 = staticinvoke <java.lang.Math: double sqrt(double)>(1.0);

        d4 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        $d14 = 0.5 * d0;

        $d15 = $d14 * d0;

        d6 = d1 - $d15;

        $d16 = d3 * d0;

        d7 = $d16 * d4;

        d8 = staticinvoke <java.lang.Math: double exp(double)>(d7);

        $d17 = neg d7;

        d10 = staticinvoke <java.lang.Math: double exp(double)>($d17);

        $d18 = 0.5 * d6;

        $d19 = $d18 * d4;

        $d20 = $d19 / d3;

        $d21 = $d20 / d0;

        d11 = 0.5 + $d21;

        $d22 = 0.5 * d6;

        $d23 = $d22 * d4;

        $d24 = $d23 / d3;

        $d25 = $d24 / d0;

        d13 = 0.5 - $d25;

        $r1 = newarray (double)[6];

        $r1[0] = d8;

        $r1[1] = 1.0;

        $r1[2] = d10;

        $r1[3] = d11;

        $r1[4] = 0.0;

        $r1[5] = d13;

        return $r1;
    }
}
