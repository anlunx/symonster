class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$kL;
    final double val$kH;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r1;
        double d0, d1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2: double val$kL> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2: double val$kH> = d1;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Boolean evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2 r0;
        java.lang.Double r1;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;
        boolean $z0;
        java.lang.Boolean $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2: double val$kL>;

        $b0 = $d0 cmpl $d1;

        if $b0 < 0 goto label1;

        $d2 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2: double val$kH>;

        $b1 = $d2 cmpg $d3;

        if $b1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2 r0;
        java.lang.Object r1;
        java.lang.Double $r2;
        java.lang.Boolean $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$2: java.lang.Boolean evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
