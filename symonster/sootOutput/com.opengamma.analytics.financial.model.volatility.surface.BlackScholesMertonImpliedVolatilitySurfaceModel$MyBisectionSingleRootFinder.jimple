class com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder extends java.lang.Object implements com.opengamma.analytics.math.rootfinding.SingleRootFinder
{
    private final com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle _data;
    private final double _price;
    private final com.opengamma.util.tuple.DoublesPair _origin;
    private static final double ACCURACY;
    private static final int MAX_ATTEMPTS;

    public void <init>(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder r0;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        double d0;
        com.opengamma.util.tuple.DoublesPair $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(0.0, 0.0);

        r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: com.opengamma.util.tuple.DoublesPair _origin> = $r2;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle _data> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: double _price> = d0;

        return;
    }

    public transient com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle getRoot(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle[] r2;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r3, r4, r6, $r19, $r24, $r26;
        java.lang.Double r5, $r8, $r10, $r13, $r16, $r22, r27, r28;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, d20;
        java.lang.Object $r7, $r9, $r21;
        byte $b0, $b1, $b2, $b3, $b4;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface $r11, $r14, $r18, $r23;
        com.opengamma.util.tuple.DoublesPair $r12, $r15;
        com.opengamma.analytics.financial.model.option.pricing.OptionPricingException $r17;
        com.opengamma.analytics.math.surface.ConstantDoublesSurface $r20, $r25;
        int i5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle[];

        r3 = r2[0];

        r4 = r2[1];

        $r7 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r3);

        $r8 = (java.lang.Double) $r7;

        $d3 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: double _price>;

        $d5 = $d3 - $d4;

        r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $d6 = virtualinvoke r5.<java.lang.Double: double doubleValue()>();

        $d7 = staticinvoke <java.lang.Math: double abs(double)>($d6);

        $b0 = $d7 cmpg 1.0E-12;

        if $b0 >= 0 goto label1;

        return r3;

     label1:
        $r9 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r4);

        $r10 = (java.lang.Double) $r9;

        $d8 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $d9 = r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: double _price>;

        $d10 = $d8 - $d9;

        r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        $d11 = virtualinvoke r27.<java.lang.Double: double doubleValue()>();

        $d12 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        $b1 = $d12 cmpg 1.0E-12;

        if $b1 >= 0 goto label2;

        return r4;

     label2:
        $r11 = virtualinvoke r4.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getVolatilitySurface()>();

        $r12 = r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: com.opengamma.util.tuple.DoublesPair _origin>;

        $r13 = virtualinvoke $r11.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: java.lang.Double getVolatility(com.opengamma.util.tuple.DoublesPair)>($r12);

        d0 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $r14 = virtualinvoke r3.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getVolatilitySurface()>();

        $r15 = r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: com.opengamma.util.tuple.DoublesPair _origin>;

        $r16 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: java.lang.Double getVolatility(com.opengamma.util.tuple.DoublesPair)>($r15);

        d1 = virtualinvoke $r16.<java.lang.Double: double doubleValue()>();

        $d13 = virtualinvoke r5.<java.lang.Double: double doubleValue()>();

        $b2 = $d13 cmpg 0.0;

        if $b2 >= 0 goto label3;

        d19 = d0 - d1;

        d20 = d1;

        goto label4;

     label3:
        d19 = d1 - d0;

        d20 = d0;

     label4:
        i5 = 0;

     label5:
        if i5 >= 10000 goto label8;

        d19 = d19 * 0.5;

        d2 = d20 + d19;

        $r19 = r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle _data>;

        $r18 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r20 = staticinvoke <com.opengamma.analytics.math.surface.ConstantDoublesSurface: com.opengamma.analytics.math.surface.ConstantDoublesSurface 'from'(double)>(d2);

        specialinvoke $r18.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r20);

        r6 = virtualinvoke $r19.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle withVolatilitySurface(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface)>($r18);

        $r21 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r6);

        $r22 = (java.lang.Double) $r21;

        $d14 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        $d15 = r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: double _price>;

        $d16 = $d14 - $d15;

        r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d16);

        $d17 = virtualinvoke r28.<java.lang.Double: double doubleValue()>();

        $b3 = $d17 cmpg 0.0;

        if $b3 > 0 goto label6;

        d20 = d2;

     label6:
        $d18 = staticinvoke <java.lang.Math: double abs(double)>(d19);

        $b4 = $d18 cmpg 1.0E-12;

        if $b4 >= 0 goto label7;

        $r24 = r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle _data>;

        $r23 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r25 = staticinvoke <com.opengamma.analytics.math.surface.ConstantDoublesSurface: com.opengamma.analytics.math.surface.ConstantDoublesSurface 'from'(double)>(d2);

        specialinvoke $r23.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r25);

        $r26 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle withVolatilitySurface(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface)>($r23);

        return $r26;

     label7:
        i5 = i5 + 1;

        goto label5;

     label8:
        $r17 = new com.opengamma.analytics.financial.model.option.pricing.OptionPricingException;

        specialinvoke $r17.<com.opengamma.analytics.financial.model.option.pricing.OptionPricingException: void <init>(java.lang.String)>("Could not find volatility in 10000 attempts");

        throw $r17;
    }

    public volatile java.lang.Object getRoot(com.opengamma.analytics.math.function.Function1D, java.lang.Object[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Object[] r2;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle[] $r3;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Object[];

        $r3 = (com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle[]) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle getRoot(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle[])>(r1, $r3);

        return $r4;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: int MAX_ATTEMPTS> = 10000;

        <com.opengamma.analytics.financial.model.volatility.surface.BlackScholesMertonImpliedVolatilitySurfaceModel$MyBisectionSingleRootFinder: double ACCURACY> = 1.0E-12;

        return;
    }
}
