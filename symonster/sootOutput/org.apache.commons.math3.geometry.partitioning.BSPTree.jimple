public class org.apache.commons.math3.geometry.partitioning.BSPTree extends java.lang.Object
{
    private org.apache.commons.math3.geometry.partitioning.SubHyperplane cut;
    private org.apache.commons.math3.geometry.partitioning.BSPTree plus;
    private org.apache.commons.math3.geometry.partitioning.BSPTree minus;
    private org.apache.commons.math3.geometry.partitioning.BSPTree parent;
    private java.lang.Object attribute;

    public void <init>()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute> = null;

        return;
    }

    public void <init>(java.lang.Object)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute> = r1;

        return;
    }

    public void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane, org.apache.commons.math3.geometry.partitioning.BSPTree, org.apache.commons.math3.geometry.partitioning.BSPTree, java.lang.Object)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, r2, r3;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane r1;
        java.lang.Object r4;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.SubHyperplane;

        r2 := @parameter1: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r3 := @parameter2: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r4 := @parameter3: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = r1;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = r2;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = r3;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute> = r4;

        r2.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r0;

        r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r0;

        return;
    }

    public boolean insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r5, $r6, $r7, $r8, $r9, $r10;
        org.apache.commons.math3.geometry.partitioning.Hyperplane r1;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.Hyperplane;

        $r3 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r3 == null goto label1;

        $r9 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r9.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = null;

        $r10 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r10.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = null;

     label1:
        $r4 = interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.Hyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane wholeHyperplane()>();

        r2 = specialinvoke r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane)>($r4);

        if r2 == null goto label2;

        $z0 = interfaceinvoke r2.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = null;

        return 0;

     label3:
        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = r2;

        $r5 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        specialinvoke $r5.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = $r5;

        $r6 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r6.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r0;

        $r7 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        specialinvoke $r7.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r8.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r0;

        return 1;
    }

    public org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r2, $r5, $r6, $r7, $r8, $r10;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r1, $r3, $r4;
        java.lang.Object $r9, $r11;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r1 != null goto label1;

        $r10 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r11 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        specialinvoke $r10.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(java.lang.Object)>($r11);

        return $r10;

     label1:
        $r2 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r3 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf()>();

        $r5 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r7 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r8 = virtualinvoke $r7.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r9 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        specialinvoke $r2.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>($r4, $r6, $r8, $r9);

        return $r2;
    }

    public org.apache.commons.math3.geometry.partitioning.SubHyperplane getCut()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        return $r1;
    }

    public org.apache.commons.math3.geometry.partitioning.BSPTree getPlus()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        return $r1;
    }

    public org.apache.commons.math3.geometry.partitioning.BSPTree getMinus()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        return $r1;
    }

    public org.apache.commons.math3.geometry.partitioning.BSPTree getParent()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        return $r1;
    }

    public void setAttribute(java.lang.Object)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute> = r1;

        return;
    }

    public java.lang.Object getAttribute()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        return $r1;
    }

    public void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor r1;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r2;
        int[] $r3;
        org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order $r4;
        int $i0, $i1;
        org.apache.commons.math3.exception.MathInternalError $r17;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor;

        $r2 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r2 != null goto label1;

        interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor: void visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        goto label9;

     label1:
        $r3 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$BSPTreeVisitor$Order>;

        $r4 = interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor: org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        $i0 = virtualinvoke $r4.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label8;
        };

     label2:
        $r5 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        virtualinvoke $r5.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        $r6 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        virtualinvoke $r6.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor: void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        goto label9;

     label3:
        $r15 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        virtualinvoke $r15.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor: void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        $r16 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        virtualinvoke $r16.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        goto label9;

     label4:
        $r13 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        virtualinvoke $r13.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        $r14 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        virtualinvoke $r14.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor: void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        goto label9;

     label5:
        $r11 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        virtualinvoke $r11.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor: void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        $r12 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        virtualinvoke $r12.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        goto label9;

     label6:
        interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor: void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        $r9 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        virtualinvoke $r9.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        $r10 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        virtualinvoke $r10.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        goto label9;

     label7:
        interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor: void visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        $r7 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        virtualinvoke $r7.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        $r8 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        virtualinvoke $r8.<org.apache.commons.math3.geometry.partitioning.BSPTree: void visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)>(r1);

        goto label9;

     label8:
        $r17 = new org.apache.commons.math3.exception.MathInternalError;

        specialinvoke $r17.<org.apache.commons.math3.exception.MathInternalError: void <init>()>();

        throw $r17;

     label9:
        return;
    }

    private org.apache.commons.math3.geometry.partitioning.SubHyperplane fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r2, $r3, $r4, $r5, $r9, r14;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane r1, $r6, $r10, r13;
        org.apache.commons.math3.geometry.partitioning.Hyperplane $r7, $r11;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane $r8, $r12;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.SubHyperplane;

        r13 = r1;

        r14 = r0;

     label1:
        $r2 = r14.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        if $r2 == null goto label4;

        if r13 == null goto label4;

        $r3 = r14.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        $r4 = $r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        if r14 != $r4 goto label2;

        $r9 = r14.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        $r10 = $r9.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r11 = interfaceinvoke $r10.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        $r12 = interfaceinvoke r13.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)>($r11);

        r13 = virtualinvoke $r12.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlus()>();

        goto label3;

     label2:
        $r5 = r14.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        $r6 = $r5.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        $r8 = interfaceinvoke r13.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)>($r7);

        r13 = virtualinvoke $r8.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getMinus()>();

     label3:
        r14 = r14.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        goto label1;

     label4:
        return r13;
    }

    public org.apache.commons.math3.geometry.partitioning.BSPTree getCell(org.apache.commons.math3.geometry.Vector)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r2;
        org.apache.commons.math3.geometry.Vector r1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.Vector;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree getCell(org.apache.commons.math3.geometry.Point,double)>(r1, 1.0E-10);

        return $r2;
    }

    public org.apache.commons.math3.geometry.partitioning.BSPTree getCell(org.apache.commons.math3.geometry.Point, double)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r5, $r6, $r7, $r8;
        org.apache.commons.math3.geometry.Point r1;
        double d0, d1, $d2;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r2, $r3;
        org.apache.commons.math3.geometry.partitioning.Hyperplane $r4;
        byte $b0, $b1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.Point;

        d0 := @parameter1: double;

        $r2 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r2 != null goto label1;

        return r0;

     label1:
        $r3 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        d1 = interfaceinvoke $r4.<org.apache.commons.math3.geometry.partitioning.Hyperplane: double getOffset(org.apache.commons.math3.geometry.Point)>(r1);

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d1);

        $b0 = $d2 cmpg d0;

        if $b0 >= 0 goto label2;

        return r0;

     label2:
        $b1 = d1 cmpg 0.0;

        if $b1 > 0 goto label3;

        $r7 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r8 = virtualinvoke $r7.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree getCell(org.apache.commons.math3.geometry.Point,double)>(r1, d0);

        return $r8;

     label3:
        $r5 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r6 = virtualinvoke $r5.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree getCell(org.apache.commons.math3.geometry.Point,double)>(r1, d0);

        return $r6;
    }

    public java.util.List getCloseCuts(org.apache.commons.math3.geometry.Point, double)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0;
        org.apache.commons.math3.geometry.Point r1;
        double d0;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.Point;

        d0 := @parameter1: double;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: void recurseCloseCuts(org.apache.commons.math3.geometry.Point,double,java.util.List)>(r1, d0, $r3);

        return $r3;
    }

    private void recurseCloseCuts(org.apache.commons.math3.geometry.Point, double, java.util.List)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r6, $r7, $r8, $r9;
        org.apache.commons.math3.geometry.Point r1;
        double d0, d1, $d2;
        java.util.List r2;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r3, $r4;
        org.apache.commons.math3.geometry.partitioning.Hyperplane $r5;
        byte $b0, $b1;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.Point;

        d0 := @parameter1: double;

        r2 := @parameter2: java.util.List;

        $r3 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r5 = interfaceinvoke $r4.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        d1 = interfaceinvoke $r5.<org.apache.commons.math3.geometry.partitioning.Hyperplane: double getOffset(org.apache.commons.math3.geometry.Point)>(r1);

        $d2 = neg d0;

        $b0 = d1 cmpg $d2;

        if $b0 >= 0 goto label1;

        $r9 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r9.<org.apache.commons.math3.geometry.partitioning.BSPTree: void recurseCloseCuts(org.apache.commons.math3.geometry.Point,double,java.util.List)>(r1, d0, r2);

        goto label3;

     label1:
        $b1 = d1 cmpl d0;

        if $b1 <= 0 goto label2;

        $r8 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r8.<org.apache.commons.math3.geometry.partitioning.BSPTree: void recurseCloseCuts(org.apache.commons.math3.geometry.Point,double,java.util.List)>(r1, d0, r2);

        goto label3;

     label2:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r6 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r6.<org.apache.commons.math3.geometry.partitioning.BSPTree: void recurseCloseCuts(org.apache.commons.math3.geometry.Point,double,java.util.List)>(r1, d0, r2);

        $r7 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r7.<org.apache.commons.math3.geometry.partitioning.BSPTree: void recurseCloseCuts(org.apache.commons.math3.geometry.Point,double,java.util.List)>(r1, d0, r2);

     label3:
        return;
    }

    private void condense()
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r2, $r4, $r6, $r8, $r10, $r11, $r14, $r16, $r17, $r19;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r1, $r3, $r5;
        java.lang.Object $r7, $r9, $r12, $r13, $r15, $r20, $r21;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r1 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r1 == null goto label5;

        $r2 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r3 = $r2.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r3 != null goto label5;

        $r4 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r5 = $r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r5 != null goto label5;

        $r6 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r7 = $r6.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        if $r7 != null goto label1;

        $r19 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r20 = $r19.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        if $r20 == null goto label2;

     label1:
        $r8 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r9 = $r8.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        if $r9 == null goto label5;

        $r10 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r13 = $r10.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        $r11 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r12 = $r11.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        $z0 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label5;

     label2:
        $r14 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r15 = $r14.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        if $r15 != null goto label3;

        $r17 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r21 = $r17.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        goto label4;

     label3:
        $r16 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r21 = $r16.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

     label4:
        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute> = $r21;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = null;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = null;

     label5:
        return;
    }

    public org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree, org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, r1, $r3;
        org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger r2;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r2 := @parameter1: org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger;

        $r3 = specialinvoke r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)>(r1, r2, null, 0);

        return $r3;
    }

    private org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree, org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger, org.apache.commons.math3.geometry.partitioning.BSPTree, boolean)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, r1, r3, r4, $r14, $r15, $r16, $r17, $r18, $r19;
        org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger r2;
        boolean z0;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r5, $r6, $r7, $r10, $r12, $r13, $r20;
        org.apache.commons.math3.geometry.partitioning.Hyperplane $r11;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r2 := @parameter1: org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger;

        r3 := @parameter2: org.apache.commons.math3.geometry.partitioning.BSPTree;

        z0 := @parameter3: boolean;

        $r5 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r5 != null goto label1;

        $r15 = interfaceinvoke r2.<org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger: org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)>(r0, r1, r3, z0, 1);

        return $r15;

     label1:
        $r6 = r1.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r6 != null goto label2;

        $r14 = interfaceinvoke r2.<org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger: org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)>(r1, r0, r3, z0, 0);

        return $r14;

     label2:
        $r7 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        r4 = virtualinvoke r1.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)>($r7);

        if r3 == null goto label4;

        r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r3;

        if z0 == 0 goto label3;

        r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = r4;

        goto label4;

     label3:
        r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = r4;

     label4:
        $r16 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r17 = r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r16.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)>($r17, r2, r4, 1);

        $r18 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r19 = r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r18.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)>($r19, r2, r4, 0);

        specialinvoke r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: void condense()>();

        $r20 = r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r20 == null goto label5;

        $r10 = r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r11 = interfaceinvoke $r10.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        $r12 = interfaceinvoke $r11.<org.apache.commons.math3.geometry.partitioning.Hyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane wholeHyperplane()>();

        $r13 = specialinvoke r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane)>($r12);

        r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r13;

     label5:
        return r4;
    }

    public org.apache.commons.math3.geometry.partitioning.BSPTree split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, r6, $r11, $r15, $r18, $r19, $r20, $r22, $r23, $r24, $r27, $r28, $r29, $r31, $r32, $r34, $r35, $r37, $r38, $r40, $r41, $r43, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r62, $r65, $r66, $r68, $r69, $r70, $r71, $r74, $r75, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r85, $r86, $r87, $r88, $r90, $r91, $r92, r94, r95, $r97;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane r1, $r7, $r8, $r12, $r16, $r17, $r25, $r26, $r33, $r36, $r39, $r42, $r44, $r59, $r63, $r64, $r72, $r73;
        org.apache.commons.math3.geometry.partitioning.Hyperplane r2, r3;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane r4, r96;
        int[] $r9;
        org.apache.commons.math3.geometry.partitioning.Side $r10, $r13, $r14, $r60, $r61;
        int $i0, $i1;
        java.lang.Object $r21, $r30, $r67, $r76, $r84, $r89, $r93;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.SubHyperplane;

        $r7 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r7 != null goto label01;

        $r90 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r91 = virtualinvoke r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r92 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r93 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        specialinvoke $r92.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(java.lang.Object)>($r93);

        specialinvoke $r90.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>(r1, $r91, $r92, null);

        return $r90;

     label01:
        $r8 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        r2 = interfaceinvoke $r8.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        r3 = interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        $r9 = <org.apache.commons.math3.geometry.partitioning.BSPTree$2: int[] $SwitchMap$org$apache$commons$math3$geometry$partitioning$Side>;

        $r10 = interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r2);

        $i0 = virtualinvoke $r10.<org.apache.commons.math3.geometry.partitioning.Side: int ordinal()>();

        $i1 = $r9[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label08;
            default: goto label09;
        };

     label02:
        $r11 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        r94 = virtualinvoke $r11.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)>(r1);

        $r12 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r13 = interfaceinvoke $r12.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r3);

        $r14 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side PLUS>;

        if $r13 != $r14 goto label03;

        $r24 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r25 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r26 = interfaceinvoke $r25.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf()>();

        $r28 = r94.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r27 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r29 = virtualinvoke $r27.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r30 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        specialinvoke $r24.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>($r26, $r28, $r29, $r30);

        r94.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = $r24;

        $r31 = r94.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r31.<org.apache.commons.math3.geometry.partitioning.BSPTree: void condense()>();

        $r32 = r94.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r32.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r94;

        goto label04;

     label03:
        $r15 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r16 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r17 = interfaceinvoke $r16.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf()>();

        $r19 = r94.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r18 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r20 = virtualinvoke $r18.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r21 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        specialinvoke $r15.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>($r17, $r19, $r20, $r21);

        r94.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = $r15;

        $r22 = r94.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r22.<org.apache.commons.math3.geometry.partitioning.BSPTree: void condense()>();

        $r23 = r94.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r23.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r94;

     label04:
        return r94;

     label05:
        $r58 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        r95 = virtualinvoke $r58.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)>(r1);

        $r59 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r60 = interfaceinvoke $r59.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Side side(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r3);

        $r61 = <org.apache.commons.math3.geometry.partitioning.Side: org.apache.commons.math3.geometry.partitioning.Side PLUS>;

        if $r60 != $r61 goto label06;

        $r71 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r72 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r73 = interfaceinvoke $r72.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf()>();

        $r74 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r75 = virtualinvoke $r74.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r77 = r95.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r76 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        specialinvoke $r71.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>($r73, $r75, $r77, $r76);

        r95.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = $r71;

        $r78 = r95.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r78.<org.apache.commons.math3.geometry.partitioning.BSPTree: void condense()>();

        $r79 = r95.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r79.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r95;

        goto label07;

     label06:
        $r62 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r63 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r64 = interfaceinvoke $r63.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf()>();

        $r65 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r66 = virtualinvoke $r65.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r68 = r95.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r67 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        specialinvoke $r62.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>($r64, $r66, $r68, $r67);

        r95.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = $r62;

        $r69 = r95.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r69.<org.apache.commons.math3.geometry.partitioning.BSPTree: void condense()>();

        $r70 = r95.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r70.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r95;

     label07:
        return r95;

     label08:
        $r33 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        r96 = interfaceinvoke $r33.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r3);

        r4 = interfaceinvoke r1.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r2);

        $r34 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r35 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r36 = virtualinvoke r4.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlus()>();

        $r37 = virtualinvoke $r35.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)>($r36);

        $r38 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r39 = virtualinvoke r4.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getMinus()>();

        $r40 = virtualinvoke $r38.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)>($r39);

        specialinvoke $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>(r1, $r37, $r40, null);

        $r41 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r42 = virtualinvoke r96.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlus()>();

        $r41.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r42;

        $r43 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r44 = virtualinvoke r96.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getMinus()>();

        $r43.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r44;

        $r45 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        r6 = $r45.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r48 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r46 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r47 = $r46.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r48.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = $r47;

        $r49 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r51 = $r49.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r50 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r51.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = $r50;

        $r52 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r52.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = r6;

        $r53 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r55 = $r53.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r54 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r55.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = $r54;

        $r56 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r56.<org.apache.commons.math3.geometry.partitioning.BSPTree: void condense()>();

        $r57 = $r34.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r57.<org.apache.commons.math3.geometry.partitioning.BSPTree: void condense()>();

        return $r34;

     label09:
        $z0 = interfaceinvoke r2.<org.apache.commons.math3.geometry.partitioning.Hyperplane: boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r3);

        if $z0 == 0 goto label10;

        $r97 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r85 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r86 = virtualinvoke $r85.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r87 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r88 = virtualinvoke $r87.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r89 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        specialinvoke $r97.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>(r1, $r86, $r88, $r89);

        goto label11;

     label10:
        $r97 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        $r80 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        $r81 = virtualinvoke $r80.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r82 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        $r83 = virtualinvoke $r82.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree copySelf()>();

        $r84 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        specialinvoke $r97.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>(r1, $r81, $r83, $r84);

     label11:
        return $r97;
    }

    public void insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree, boolean)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, r1;
        boolean z0;
        org.apache.commons.math3.geometry.partitioning.BSPTree$1 $r2;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.BSPTree;

        z0 := @parameter1: boolean;

        $r2 = new org.apache.commons.math3.geometry.partitioning.BSPTree$1;

        specialinvoke $r2.<org.apache.commons.math3.geometry.partitioning.BSPTree$1: void <init>(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        virtualinvoke r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: void insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)>(r1, z0, $r2);

        return;
    }

    public void insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree, boolean, org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, r1, r4, $r5, $r6, $r8, $r9, $r13, $r14, $r17, $r18, $r24, $r25, r27;
        boolean z0;
        org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler r2;
        org.apache.commons.math3.geometry.partitioning.Hyperplane r3;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r7, $r10, $r12, $r15, $r16, $r20, $r21, $r23, $r26;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane $r11, $r22;
        java.lang.Object $r19;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.BSPTree;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent> = r1;

        if r1 == null goto label2;

        if z0 == 0 goto label1;

        r1.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = r0;

        goto label2;

     label1:
        r1.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = r0;

     label2:
        $r26 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r26 == null goto label8;

        r27 = r0;

     label3:
        $r5 = r27.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        if $r5 == null goto label7;

        $r6 = r27.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        $r7 = $r6.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        r3 = interfaceinvoke $r7.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.Hyperplane getHyperplane()>();

        $r8 = r27.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        $r9 = $r8.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        if r27 != $r9 goto label4;

        $r21 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r22 = interfaceinvoke $r21.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r3);

        $r23 = virtualinvoke $r22.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlus()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r23;

        $r24 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r24.<org.apache.commons.math3.geometry.partitioning.BSPTree: void chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)>(r3, r2);

        $r25 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r25.<org.apache.commons.math3.geometry.partitioning.BSPTree: void chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)>(r3, r2);

        goto label5;

     label4:
        $r10 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r11 = interfaceinvoke $r10.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r3);

        $r12 = virtualinvoke $r11.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getMinus()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r12;

        $r13 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r13.<org.apache.commons.math3.geometry.partitioning.BSPTree: void chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)>(r3, r2);

        $r14 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r14.<org.apache.commons.math3.geometry.partitioning.BSPTree: void chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)>(r3, r2);

     label5:
        $r15 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r15 != null goto label6;

        r4 = interfaceinvoke r2.<org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler: org.apache.commons.math3.geometry.partitioning.BSPTree fixNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        $r16 = r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r16;

        $r17 = r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = $r17;

        $r18 = r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = $r18;

        $r19 = r4.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute> = $r19;

        $r20 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r20 != null goto label6;

        goto label7;

     label6:
        r27 = r27.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        goto label3;

     label7:
        specialinvoke r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: void condense()>();

     label8:
        return;
    }

    public org.apache.commons.math3.geometry.partitioning.BSPTree pruneAroundConvexCell(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, r15, r16;
        java.lang.Object r1, r2, r3;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane r4, $r9;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        specialinvoke $r6.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(java.lang.Object)>(r1);

        r15 = $r6;

        r16 = r0;

     label1:
        $r7 = r16.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        if $r7 == null goto label4;

        $r8 = r16.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        $r9 = $r8.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        r4 = interfaceinvoke $r9.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane copySelf()>();

        $r10 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        specialinvoke $r10.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(java.lang.Object)>(r2);

        $r11 = r16.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        $r12 = $r11.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        if r16 != $r12 goto label2;

        $r14 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        specialinvoke $r14.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>(r4, r15, $r10, r3);

        r15 = $r14;

        goto label3;

     label2:
        $r13 = new org.apache.commons.math3.geometry.partitioning.BSPTree;

        specialinvoke $r13.<org.apache.commons.math3.geometry.partitioning.BSPTree: void <init>(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)>(r4, $r10, r15, r3);

        r15 = $r13;

     label3:
        r16 = r16.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree parent>;

        goto label1;

     label4:
        return r15;
    }

    private void chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane, org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, r3, $r8, $r9, $r12, $r13;
        org.apache.commons.math3.geometry.partitioning.Hyperplane r1;
        org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler r2;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r4, $r5, $r7, $r10, $r11;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane $r6;
        java.lang.Object $r14;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.Hyperplane;

        r2 := @parameter1: org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler;

        $r4 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r1);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlus()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r8.<org.apache.commons.math3.geometry.partitioning.BSPTree: void chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)>(r1, r2);

        $r9 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r9.<org.apache.commons.math3.geometry.partitioning.BSPTree: void chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)>(r1, r2);

        $r10 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r10 != null goto label1;

        r3 = interfaceinvoke r2.<org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler: org.apache.commons.math3.geometry.partitioning.BSPTree fixNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        $r11 = r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r11;

        $r12 = r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = $r12;

        $r13 = r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = $r13;

        $r14 = r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute> = $r14;

     label1:
        return;
    }

    private void chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane, org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)
    {
        org.apache.commons.math3.geometry.partitioning.BSPTree r0, r3, $r8, $r9, $r12, $r13;
        org.apache.commons.math3.geometry.partitioning.Hyperplane r1;
        org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler r2;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane $r4, $r5, $r7, $r10, $r11;
        org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane $r6;
        java.lang.Object $r14;

        r0 := @this: org.apache.commons.math3.geometry.partitioning.BSPTree;

        r1 := @parameter0: org.apache.commons.math3.geometry.partitioning.Hyperplane;

        r2 := @parameter1: org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler;

        $r4 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        $r6 = interfaceinvoke $r5.<org.apache.commons.math3.geometry.partitioning.SubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)>(r1);

        $r7 = virtualinvoke $r6.<org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane: org.apache.commons.math3.geometry.partitioning.SubHyperplane getMinus()>();

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r7;

        $r8 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        specialinvoke $r8.<org.apache.commons.math3.geometry.partitioning.BSPTree: void chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)>(r1, r2);

        $r9 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        specialinvoke $r9.<org.apache.commons.math3.geometry.partitioning.BSPTree: void chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler)>(r1, r2);

        $r10 = r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        if $r10 != null goto label1;

        r3 = interfaceinvoke r2.<org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler: org.apache.commons.math3.geometry.partitioning.BSPTree fixNode(org.apache.commons.math3.geometry.partitioning.BSPTree)>(r0);

        $r11 = r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.SubHyperplane cut> = $r11;

        $r12 = r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree plus> = $r12;

        $r13 = r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: org.apache.commons.math3.geometry.partitioning.BSPTree minus> = $r13;

        $r14 = r3.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute>;

        r0.<org.apache.commons.math3.geometry.partitioning.BSPTree: java.lang.Object attribute> = $r14;

     label1:
        return;
    }
}
