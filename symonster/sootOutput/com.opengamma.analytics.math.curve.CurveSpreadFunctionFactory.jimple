public final class com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory extends com.opengamma.financial.convention.AbstractNamedInstanceFactory
{
    public static final com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory INSTANCE;

    public static com.opengamma.analytics.math.curve.CurveSpreadFunction of(java.lang.String)
    {
        java.lang.String r0;
        com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory $r1;
        com.opengamma.financial.convention.NamedInstance $r2;
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory: com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory INSTANCE>;

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory: com.opengamma.financial.convention.NamedInstance instance(java.lang.String)>(r0);

        $r3 = (com.opengamma.analytics.math.curve.CurveSpreadFunction) $r2;

        return $r3;
    }

    private void <init>()
    {
        com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory r0;
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r1, $r4, $r7, $r10;
        java.lang.String[] $r2, $r5, $r8, $r11;

        r0 := @this: com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory;

        specialinvoke r0.<com.opengamma.financial.convention.AbstractNamedInstanceFactory: void <init>(java.lang.Class)>(class "com/opengamma/analytics/math/curve/CurveSpreadFunction");

        $r1 = staticinvoke <com.opengamma.analytics.math.curve.AddCurveSpreadFunction: com.opengamma.analytics.math.curve.CurveSpreadFunction getInstance()>();

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "+";

        $r2[1] = "add";

        $r2[2] = "plus";

        virtualinvoke r0.<com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory: com.opengamma.financial.convention.NamedInstance addInstance(com.opengamma.financial.convention.NamedInstance,java.lang.String[])>($r1, $r2);

        $r4 = staticinvoke <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction: com.opengamma.analytics.math.curve.CurveSpreadFunction getInstance()>();

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "/";

        $r5[1] = "divide";

        virtualinvoke r0.<com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory: com.opengamma.financial.convention.NamedInstance addInstance(com.opengamma.financial.convention.NamedInstance,java.lang.String[])>($r4, $r5);

        $r7 = staticinvoke <com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction: com.opengamma.analytics.math.curve.CurveSpreadFunction getInstance()>();

        $r8 = newarray (java.lang.String)[3];

        $r8[0] = "*";

        $r8[1] = "multiply";

        $r8[2] = "times";

        virtualinvoke r0.<com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory: com.opengamma.financial.convention.NamedInstance addInstance(com.opengamma.financial.convention.NamedInstance,java.lang.String[])>($r7, $r8);

        $r10 = staticinvoke <com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction: com.opengamma.analytics.math.curve.CurveSpreadFunction getInstance()>();

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "-";

        $r11[1] = "subtract";

        virtualinvoke r0.<com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory: com.opengamma.financial.convention.NamedInstance addInstance(com.opengamma.financial.convention.NamedInstance,java.lang.String[])>($r10, $r11);

        return;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory $r0;

        $r0 = new com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory;

        specialinvoke $r0.<com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory: void <init>()>();

        <com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory: com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory INSTANCE> = $r0;

        return;
    }
}
