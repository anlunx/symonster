public class com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian extends com.opengamma.analytics.math.function.Function1D
{
    private final com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _calculator;
    private final com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle _data;
    private final com.opengamma.analytics.financial.interestrate.YieldCurveBundleBuildingFunction _curveBuilderFunction;

    public void <init>(com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian r0;
        com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle r1;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r2;
        com.opengamma.analytics.financial.interestrate.InterpolatedYieldCurveBuildingFunction $r3;
        java.util.LinkedHashMap $r4, $r5;

        r0 := @this: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "calculator");

        r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle _data> = r1;

        r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _calculator> = r2;

        $r3 = new com.opengamma.analytics.financial.interestrate.InterpolatedYieldCurveBuildingFunction;

        $r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle: java.util.LinkedHashMap getUnknownCurveNodePoints()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle: java.util.LinkedHashMap getUnknownCurveInterpolators()>();

        specialinvoke $r3.<com.opengamma.analytics.financial.interestrate.InterpolatedYieldCurveBuildingFunction: void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap)>($r4, $r5);

        r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.YieldCurveBundleBuildingFunction _curveBuilderFunction> = $r3;

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix2D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, i11, i12, i13, $i14;
        java.util.List r4, r11;
        double[][] r5, r12;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r6;
        java.util.Map r7;
        java.util.Iterator r8, r13, r35;
        java.lang.String r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r10;
        com.opengamma.util.tuple.DoublesPair r14, r36;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundleBuildingFunction $r15;
        java.lang.Object $r16, $r24, $r25, $r26, $r29, $r32;
        com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle $r17, $r18, $r19, $r20, $r22, $r34, $r37;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r21;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r23;
        boolean $z0, $z1, $z2, $z3;
        double[] $r27, $r28, $r31, $r33;
        java.lang.Double $r30;
        double $d0, $d1, $d2, $d3, d4;

        r0 := @this: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r15 = r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.YieldCurveBundleBuildingFunction _curveBuilderFunction>;

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.YieldCurveBundleBuildingFunction: java.lang.Object evaluate(java.lang.Object)>(r1);

        r2 = (com.opengamma.analytics.financial.interestrate.YieldCurveBundle) $r16;

        $r17 = r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle _data>;

        r3 = virtualinvoke $r17.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle: com.opengamma.analytics.financial.interestrate.YieldCurveBundle getKnownCurves()>();

        if r3 == null goto label01;

        virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: void addAll(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>(r3);

     label01:
        $r18 = r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle _data>;

        i0 = virtualinvoke $r18.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle: int getTotalNodes()>();

        $r19 = r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle _data>;

        r4 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle: java.util.List getCurveNames()>();

        $r20 = r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle _data>;

        $i1 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle: int getNumInstruments()>();

        r5 = newmultiarray (double)[$i1][i0];

        i8 = 0;

     label02:
        $r34 = r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle _data>;

        $i9 = virtualinvoke $r34.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle: int getNumInstruments()>();

        if i8 >= $i9 goto label11;

        $r22 = r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle _data>;

        r6 = virtualinvoke $r22.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle: com.opengamma.analytics.financial.interestrate.InstrumentDerivative getDerivative(int)>(i8);

        $r23 = r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _calculator>;

        $r24 = interfaceinvoke r6.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r23, r2);

        r7 = (java.util.Map) $r24;

        i10 = 0;

        r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r25;

        $z1 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r9);

        if $z1 == 0 goto label09;

        r10 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>(r9);

        $r26 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        r11 = (java.util.List) $r26;

        $i2 = interfaceinvoke r11.<java.util.List: int size()>();

        if $i2 == 0 goto label09;

        $i3 = interfaceinvoke r11.<java.util.List: int size()>();

        r12 = newarray (double[])[$i3];

        i11 = 0;

        r35 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r32 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (com.opengamma.util.tuple.DoublesPair) $r32;

        $i7 = i11;

        i11 = i11 + 1;

        $d3 = r36.<com.opengamma.util.tuple.DoublesPair: double first>;

        $r33 = virtualinvoke r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double[] getInterestRateParameterSensitivity(double)>($d3);

        r12[$i7] = $r33;

        goto label04;

     label05:
        i12 = 0;

     label06:
        $r27 = r12[0];

        $i4 = lengthof $r27;

        if i12 >= $i4 goto label09;

        d4 = 0.0;

        i13 = 0;

        r13 = interfaceinvoke r11.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r29 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.opengamma.util.tuple.DoublesPair) $r29;

        $r30 = virtualinvoke r14.<com.opengamma.util.tuple.DoublesPair: java.lang.Double getSecond()>();

        $d0 = virtualinvoke $r30.<java.lang.Double: double doubleValue()>();

        $i6 = i13;

        i13 = i13 + 1;

        $r31 = r12[$i6];

        $d1 = $r31[i12];

        $d2 = $d0 * $d1;

        d4 = d4 + $d2;

        goto label07;

     label08:
        $r28 = r5[i8];

        $i5 = i12 + i10;

        $r28[$i5] = d4;

        i12 = i12 + 1;

        goto label06;

     label09:
        $r37 = r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle _data>;

        $i14 = virtualinvoke $r37.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderDataBundle: int getNumberOfPointsForCurve(java.lang.String)>(r9);

        i10 = i10 + $i14;

        goto label03;

     label10:
        i8 = i8 + 1;

        goto label02;

     label11:
        $r21 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r21.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r5);

        return $r21;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian r0;
        java.lang.Object r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.MultipleYieldCurveFinderJacobian: com.opengamma.analytics.math.matrix.DoubleMatrix2D evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r2);

        return $r3;
    }
}
