public class com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent extends java.lang.Object implements com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent
{
    private final double _kappa;
    private final double _theta;
    private final double _vol0;
    private final double _omega;
    private final double _rho;
    private final double _alphaMin;
    private final double _alphaMax;

    public void <init>(double, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa> = d0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta> = d1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0> = d2;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega> = d3;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho> = d4;

        $d12 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d8 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d10 = 2.0 * $d8;

        $d9 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d11 = $d10 * $d9;

        d5 = $d12 - $d11;

        $d14 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d13 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d15 = $d14 * $d13;

        d6 = 1.0 - $d15;

        $d21 = d5 * d5;

        $d16 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d18 = 4.0 * $d16;

        $d17 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d19 = $d18 * $d17;

        $d20 = $d19 * d6;

        $d22 = $d21 + $d20;

        d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d22);

        $d24 = d5 - d7;

        $d23 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d25 = $d24 / $d23;

        $d26 = $d25 / d6;

        $d27 = $d26 - 1.0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _alphaMin> = $d27;

        $d29 = d5 + d7;

        $d28 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d30 = $d29 / $d28;

        $d31 = $d30 / d6;

        $d32 = $d31 + 1.0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _alphaMax> = $d32;

        return;
    }

    public void <init>(com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "null data");

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData: double getKappa()>();

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa> = $d3;

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData: double getTheta()>();

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta> = $d4;

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData: double getVol0()>();

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0> = $d5;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData: double getOmega()>();

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega> = $d6;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.model.volatility.smile.function.HestonModelData: double getRho()>();

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho> = $d7;

        $d12 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d8 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d10 = 2.0 * $d8;

        $d9 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d11 = $d10 * $d9;

        d0 = $d12 - $d11;

        $d14 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d13 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d15 = $d14 * $d13;

        d1 = 1.0 - $d15;

        $d21 = d0 * d0;

        $d16 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d18 = 4.0 * $d16;

        $d17 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d19 = $d18 * $d17;

        $d20 = $d19 * d1;

        $d22 = $d21 + $d20;

        d2 = staticinvoke <java.lang.Math: double sqrt(double)>($d22);

        $d24 = d0 - d2;

        $d23 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d25 = $d24 / $d23;

        $d26 = $d25 / d1;

        $d27 = $d26 - 1.0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _alphaMin> = $d27;

        $d29 = d0 + d2;

        $d28 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d30 = $d29 / $d28;

        $d31 = $d30 / d1;

        $d32 = $d31 + 1.0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _alphaMax> = $d32;

        return;
    }

    public com.opengamma.analytics.math.function.Function1D getFunction(double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double d0;
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent$1 $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent$1;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent$1: void <init>(com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent,double)>(r0, d0);

        return $r1;
    }

    public com.opengamma.analytics.math.number.ComplexNumber getValue(com.opengamma.analytics.math.number.ComplexNumber, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, r13, r14, r15;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, d31;
        byte $b0, $b1, $b2, $b3, $b4, $b5;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter1: double;

        $d1 = virtualinvoke r1.<com.opengamma.analytics.math.number.ComplexNumber: double getReal()>();

        $b0 = $d1 cmpl 0.0;

        if $b0 != 0 goto label2;

        $d29 = virtualinvoke r1.<com.opengamma.analytics.math.number.ComplexNumber: double getImaginary()>();

        $b4 = $d29 cmpl 0.0;

        if $b4 == 0 goto label1;

        $d30 = virtualinvoke r1.<com.opengamma.analytics.math.number.ComplexNumber: double getImaginary()>();

        $b5 = $d30 cmpl -1.0;

        if $b5 != 0 goto label2;

     label1:
        $r12 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber ZERO>;

        return $r12;

     label2:
        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $b1 = $d2 cmpl 0.0;

        if $b1 == 0 goto label3;

        $d25 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d24 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d26 = $d25 / $d24;

        $r6 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d26, r1);

        $r7 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber I>;

        $r8 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r7, r1);

        $r9 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r6, $r8);

        $d27 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: double mod(com.opengamma.analytics.math.number.ComplexNumber)>($r9);

        $b3 = $d27 cmpg 1.0E-6;

        if $b3 >= 0 goto label5;

     label3:
        $r2 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber I>;

        $r3 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r2, r1);

        r13 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r3);

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d4 = $d3 * d0;

        $b2 = $d4 cmpg 1.0E-6;

        if $b2 >= 0 goto label4;

        $d20 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d21 = neg $d20;

        $d22 = $d21 / 2.0;

        $d23 = $d22 * d0;

        $r5 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d23, r13);

        return $r5;

     label4:
        $d5 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d11 = $d5 * d0;

        $d7 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d6 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d12 = $d7 - $d6;

        $d8 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d9 = neg $d8;

        $d10 = $d9 * d0;

        $d13 = staticinvoke <java.lang.Math: double exp(double)>($d10);

        $d14 = 1.0 - $d13;

        $d16 = $d12 * $d14;

        $d15 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d17 = $d16 / $d15;

        d31 = $d11 + $d17;

        $d18 = neg d31;

        $d19 = $d18 / 2.0;

        $r4 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d19, r13);

        return $r4;

     label5:
        r14 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: com.opengamma.analytics.math.number.ComplexNumber getC(com.opengamma.analytics.math.number.ComplexNumber,double)>(r1, d0);

        $d28 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $r10 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: com.opengamma.analytics.math.number.ComplexNumber getD(com.opengamma.analytics.math.number.ComplexNumber,double)>(r1, d0);

        r15 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d28, $r10);

        $r11 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r14, r15);

        return $r11;
    }

    public com.opengamma.analytics.math.function.Function1D getAdjointFunction(double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double d0;
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent$2 $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent$2;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent$2: void <init>(com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent,double)>(r0, d0);

        return $r1;
    }

    private com.opengamma.analytics.math.number.ComplexNumber[] forwardSweep(com.opengamma.analytics.math.number.ComplexNumber, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        com.opengamma.analytics.math.number.ComplexNumber[] r2, $r14;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter1: double;

        r2 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[19];

        $r3 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d4 = $d2 * $d1;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d6 = $d4 / $d3;

        $d5 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d7 = $d6 / $d5;

        specialinvoke $r3.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double)>($d7);

        r2[0] = $r3;

        $r4 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d9 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d8 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d10 = $d9 * $d8;

        specialinvoke $r4.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d10);

        $r5 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r4);

        r2[1] = $r5;

        $r6 = r2[1];

        $d11 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $r7 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>($r6, $d11);

        r2[2] = $r7;

        $r8 = r2[2];

        $r9 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber square(com.opengamma.analytics.math.number.ComplexNumber)>($r8);

        r2[3] = $r9;

        $r10 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d13 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d12 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d14 = $d13 * $d12;

        specialinvoke $r10.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d14);

        $r11 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r10);

        r2[4] = $r11;

        $d15 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $r12 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,double)>(r1, $d15);

        $r13 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber square(com.opengamma.analytics.math.number.ComplexNumber)>($r12);

        r2[5] = $r13;

        $r14 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[3];

        $r15 = r2[3];

        $r14[0] = $r15;

        $r16 = r2[4];

        $r14[1] = $r16;

        $r17 = r2[5];

        $r14[2] = $r17;

        $r18 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber[])>($r14);

        r2[6] = $r18;

        $r19 = r2[6];

        $r20 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber sqrt(com.opengamma.analytics.math.number.ComplexNumber)>($r19);

        r2[7] = $r20;

        $r22 = r2[7];

        $r21 = r2[2];

        $r23 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r22, $r21);

        r2[8] = $r23;

        $r25 = r2[7];

        $r24 = r2[2];

        $r26 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r25, $r24);

        $r27 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(-1.0, $r26);

        r2[9] = $r27;

        $r29 = r2[8];

        $r28 = r2[9];

        $r30 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r29, $r28);

        r2[10] = $r30;

        $r31 = r2[9];

        $r32 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(d0, $r31);

        r2[11] = $r32;

        $r33 = r2[7];

        $d16 = neg d0;

        $r34 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,double)>($r33, $d16);

        $r35 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber exp(com.opengamma.analytics.math.number.ComplexNumber)>($r34);

        r2[12] = $r35;

        $r37 = r2[10];

        $r36 = r2[12];

        $r38 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r37, $r36);

        $r39 = r2[10];

        $r40 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>($r39, 1.0);

        $r41 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r38, $r40);

        r2[13] = $r41;

        $r42 = r2[13];

        $r43 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber log(com.opengamma.analytics.math.number.ComplexNumber)>($r42);

        r2[14] = $r43;

        $r44 = r2[12];

        $r45 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(double,com.opengamma.analytics.math.number.ComplexNumber)>(1.0, $r44);

        $r47 = r2[10];

        $r46 = r2[12];

        $r48 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r47, $r46);

        $r49 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r45, $r48);

        r2[15] = $r49;

        $r51 = r2[0];

        $r52 = r2[11];

        $r50 = r2[14];

        $r53 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(2.0, $r50);

        $r54 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r52, $r53);

        $r55 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r51, $r54);

        r2[16] = $r55;

        $r57 = r2[8];

        $r56 = r2[15];

        $r58 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r57, $r56);

        $d18 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d17 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d19 = $d18 * $d17;

        $r59 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,double)>($r58, $d19);

        r2[17] = $r59;

        $r61 = r2[16];

        $d20 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $r60 = r2[17];

        $r62 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d20, $r60);

        $r63 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r61, $r62);

        r2[18] = $r63;

        return r2;
    }

    private com.opengamma.analytics.math.number.ComplexNumber[] backwardsSweep(com.opengamma.analytics.math.number.ComplexNumber[], double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.math.number.ComplexNumber[] r1, r2, $r9, $r13, $r53, $r61, $r76;
        double d0, d1, $d2, $d3, $d4, $d5;
        com.opengamma.analytics.math.number.ComplexNumber r3, r4, r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber[];

        d0 := @parameter1: double;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d4 = 1.0 / $d2;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        d1 = $d4 / $d3;

        r2 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[19];

        $r6 = new com.opengamma.analytics.math.number.ComplexNumber;

        specialinvoke $r6.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double)>(1.0);

        r2[18] = $r6;

        $r7 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d5 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        specialinvoke $r7.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double)>($d5);

        r2[17] = $r7;

        $r8 = r2[18];

        r2[16] = $r8;

        $r9 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r10 = r1[8];

        $r9[0] = $r10;

        $r11 = r2[17];

        $r9[1] = $r11;

        $r12 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(d1, $r9);

        r2[15] = $r12;

        $r13 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r14 = r1[0];

        $r13[0] = $r14;

        $r15 = r2[16];

        $r13[1] = $r15;

        $r16 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(-2.0, $r13);

        r2[14] = $r16;

        $r18 = r2[14];

        $r17 = r1[13];

        $r19 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r18, $r17);

        r2[13] = $r19;

        $r20 = r1[10];

        r3 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(double,com.opengamma.analytics.math.number.ComplexNumber)>(1.0, $r20);

        $r22 = r1[10];

        $r21 = r1[12];

        r4 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r22, $r21);

        r5 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber square(com.opengamma.analytics.math.number.ComplexNumber)>(r4);

        $r23 = r2[15];

        $r24 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r3, r5);

        $r25 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r23, $r24);

        $r26 = r2[13];

        $r27 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r26, r3);

        $r28 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r25, $r27);

        r2[12] = $r28;

        $r30 = r1[0];

        $r29 = r2[16];

        $r31 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r30, $r29);

        r2[11] = $r31;

        $r32 = r1[12];

        $r33 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>($r32, 1.0);

        $r34 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r33, r5);

        $r35 = r2[15];

        $r36 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r34, $r35);

        $r37 = r1[12];

        $r38 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>($r37, 1.0);

        $r39 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber square(com.opengamma.analytics.math.number.ComplexNumber)>(r3);

        $r40 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r38, $r39);

        $r41 = r2[13];

        $r42 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r40, $r41);

        $r43 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r36, $r42);

        r2[10] = $r43;

        $r44 = r2[11];

        $r45 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(d0, $r44);

        $r47 = r1[8];

        $r46 = r1[9];

        $r48 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber square(com.opengamma.analytics.math.number.ComplexNumber)>($r46);

        $r49 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r47, $r48);

        $r50 = r2[10];

        $r51 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r49, $r50);

        $r52 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r45, $r51);

        r2[9] = $r52;

        $r53 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r54 = r1[15];

        $r53[0] = $r54;

        $r55 = r2[17];

        $r53[1] = $r55;

        $r56 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(d1, $r53);

        $r58 = r2[10];

        $r57 = r1[9];

        $r59 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r58, $r57);

        $r60 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r56, $r59);

        r2[8] = $r60;

        $r64 = r2[8];

        $r61 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r62 = r1[12];

        $r61[0] = $r62;

        $r63 = r2[12];

        $r61[1] = $r63;

        $r65 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(d0, $r61);

        $r66 = r2[9];

        $r67 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r65, $r66);

        $r68 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r64, $r67);

        r2[7] = $r68;

        $r70 = r2[7];

        $r69 = r1[7];

        $r71 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(2.0, $r69);

        $r72 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r70, $r71);

        r2[6] = $r72;

        $r73 = r2[6];

        r2[5] = $r73;

        $r74 = r2[6];

        r2[4] = $r74;

        $r75 = r2[6];

        r2[3] = $r75;

        $r76 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r77 = r1[2];

        $r76[0] = $r77;

        $r78 = r2[3];

        $r76[1] = $r78;

        $r79 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(2.0, $r76);

        $r81 = r2[8];

        $r80 = r2[9];

        $r82 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r81, $r80);

        $r83 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r79, $r82);

        r2[2] = $r83;

        $r84 = r2[2];

        r2[1] = $r84;

        $r86 = r1[11];

        $r85 = r1[14];

        $r87 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(2.0, $r85);

        $r88 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r86, $r87);

        $r89 = r2[16];

        $r90 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r88, $r89);

        r2[0] = $r90;

        return r2;
    }

    public com.opengamma.analytics.math.number.ComplexNumber[] getCharacteristicExponentAdjointDebug(com.opengamma.analytics.math.number.ComplexNumber, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r36, $r38, $r39, $r40;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        com.opengamma.analytics.math.number.ComplexNumber[] r2, r3, r4, $r15, $r16, $r23, $r27, $r31, $r37;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter1: double;

        r2 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[6];

        r3 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: com.opengamma.analytics.math.number.ComplexNumber[] forwardSweep(com.opengamma.analytics.math.number.ComplexNumber,double)>(r1, d0);

        r4 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: com.opengamma.analytics.math.number.ComplexNumber[] backwardsSweep(com.opengamma.analytics.math.number.ComplexNumber[],double)>(r3, d0);

        $r5 = r3[18];

        r2[0] = $r5;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d4 = $d2 / $d1;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d5 = $d4 / $d3;

        $r6 = r4[0];

        $r7 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d5, $r6);

        $r8 = r4[2];

        $r9 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r7, $r8);

        r2[1] = $r9;

        $d7 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d6 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d9 = $d7 / $d6;

        $d8 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d10 = $d9 / $d8;

        $r10 = r4[0];

        $r11 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d10, $r10);

        r2[2] = $r11;

        $r13 = r3[17];

        $r12 = r4[18];

        $r14 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r13, $r12);

        r2[3] = $r14;

        $d11 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d12 = 1.0 / $d11;

        $r15 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[5];

        $r16 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r17 = r3[0];

        $r16[0] = $r17;

        $r18 = r4[0];

        $r16[1] = $r18;

        $r19 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(-2.0, $r16);

        $r15[0] = $r19;

        $r21 = r3[1];

        $r20 = r4[1];

        $r22 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r21, $r20);

        $r15[1] = $r22;

        $r23 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r24 = r3[4];

        $r23[0] = $r24;

        $r25 = r4[4];

        $r23[1] = $r25;

        $r26 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(2.0, $r23);

        $r15[2] = $r26;

        $r27 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r28 = r3[5];

        $r27[0] = $r28;

        $r29 = r4[5];

        $r27[1] = $r29;

        $r30 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(2.0, $r27);

        $r15[3] = $r30;

        $r31 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r32 = r3[17];

        $r31[0] = $r32;

        $r33 = r4[17];

        $r31[1] = $r33;

        $r34 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(-2.0, $r31);

        $r15[4] = $r34;

        $r35 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber[])>($r15);

        $r36 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d12, $r35);

        r2[4] = $r36;

        $d13 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d14 = 1.0 / $d13;

        $r37 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r38 = r3[1];

        $r37[0] = $r38;

        $r39 = r4[1];

        $r37[1] = $r39;

        $r40 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>($d14, $r37);

        r2[5] = $r40;

        return r2;
    }

    public com.opengamma.analytics.math.number.ComplexNumber[] getCharacteristicExponentAdjoint(com.opengamma.analytics.math.number.ComplexNumber, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r44, r46, r47, r48, r49, r50, r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r69, $r70, $r71, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r82, $r83, $r84, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r99, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r118, $r120, $r121, $r122, r123;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, d118, d119;
        com.opengamma.analytics.math.number.ComplexNumber[] r2, $r65, $r72, $r81, $r85, $r98, $r100, $r113, $r114, $r115, $r116, $r117, $r119;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        int i6;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter1: double;

        r2 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[6];

        $d3 = virtualinvoke r1.<com.opengamma.analytics.math.number.ComplexNumber: double getReal()>();

        $b0 = $d3 cmpl 0.0;

        if $b0 != 0 goto label4;

        $d116 = virtualinvoke r1.<com.opengamma.analytics.math.number.ComplexNumber: double getImaginary()>();

        $b4 = $d116 cmpl 0.0;

        if $b4 == 0 goto label1;

        $d117 = virtualinvoke r1.<com.opengamma.analytics.math.number.ComplexNumber: double getImaginary()>();

        $b5 = $d117 cmpl -1.0;

        if $b5 != 0 goto label4;

     label1:
        i6 = 0;

     label2:
        if i6 >= 6 goto label3;

        $r122 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber ZERO>;

        r2[i6] = $r122;

        i6 = i6 + 1;

        goto label2;

     label3:
        return r2;

     label4:
        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $b1 = $d4 cmpl 0.0;

        if $b1 == 0 goto label5;

        $d72 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d71 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d73 = $d72 / $d71;

        $r65 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r65[0] = r1;

        $r66 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber I>;

        $r67 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r66, r1);

        $r65[1] = $r67;

        $r68 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>($d73, $r65);

        $d74 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: double mod(com.opengamma.analytics.math.number.ComplexNumber)>($r68);

        $b3 = $d74 cmpg 1.0E-6;

        if $b3 >= 0 goto label8;

     label5:
        $r52 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber I>;

        $r53 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r52, r1);

        r123 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r53);

        $d5 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d6 = $d5 * d0;

        $b2 = $d6 cmpg 1.0E-6;

        if $b2 >= 0 goto label6;

        $d44 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d53 = $d44 * d0;

        $d46 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d45 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d48 = $d46 - $d45;

        $d47 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d49 = $d48 * $d47;

        $d50 = $d49 * d0;

        $d51 = $d50 * d0;

        $d52 = $d51 / 2.0;

        d118 = $d53 + $d52;

        $d55 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d54 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d56 = $d55 - $d54;

        $d57 = -0.5 * $d56;

        $d58 = $d57 * d0;

        $d59 = $d58 * d0;

        $d60 = $d59 / 2.0;

        $r60 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d60, r123);

        r2[1] = $r60;

        $d61 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d62 = $d61 * d0;

        $d63 = $d62 * d0;

        $d64 = $d63 / 4.0;

        $r61 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d64, r123);

        r2[2] = $r61;

        $d65 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d66 = $d65 * d0;

        $d67 = $d66 * d0;

        $d68 = $d67 / 2.0;

        $d69 = d0 + $d68;

        $d70 = -0.5 * $d69;

        $r62 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d70, r123);

        r2[3] = $r62;

        $r63 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber ZERO>;

        r2[4] = $r63;

        $r64 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber ZERO>;

        r2[5] = $r64;

        goto label7;

     label6:
        $d7 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d8 = neg $d7;

        $d9 = $d8 * d0;

        d2 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        $d10 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d18 = $d10 * d0;

        $d12 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d11 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d14 = $d12 - $d11;

        $d13 = 1.0 - d2;

        $d16 = $d14 * $d13;

        $d15 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d17 = $d16 / $d15;

        d118 = $d18 + $d17;

        $d20 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d19 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d21 = $d20 - $d19;

        $d27 = -0.5 * $d21;

        $d22 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d23 = d0 * $d22;

        $d24 = 1.0 + $d23;

        $d25 = d2 * $d24;

        $d26 = $d25 - 1.0;

        $d29 = $d27 * $d26;

        $d28 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d31 = $d29 / $d28;

        $d30 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d32 = $d31 / $d30;

        $r54 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d32, r123);

        r2[1] = $r54;

        $d34 = 1.0 - d2;

        $d33 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d35 = $d34 / $d33;

        $d36 = d0 - $d35;

        $d37 = -0.5 * $d36;

        $r55 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d37, r123);

        r2[2] = $r55;

        $d38 = 1.0 - d2;

        $d40 = -0.5 * $d38;

        $d39 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d41 = $d40 / $d39;

        $r56 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d41, r123);

        r2[3] = $r56;

        $r57 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber ZERO>;

        r2[4] = $r57;

        $r58 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber ZERO>;

        r2[5] = $r58;

     label7:
        $d42 = neg d118;

        $d43 = $d42 / 2.0;

        $r59 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d43, r123);

        r2[0] = $r59;

        return r2;

     label8:
        $d75 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d77 = 1.0 / $d75;

        $d76 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        d119 = $d77 / $d76;

        $d79 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d78 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d80 = $d79 * $d78;

        d1 = $d80 * d119;

        $r69 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d82 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d81 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d83 = $d82 * $d81;

        specialinvoke $r69.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d83);

        r3 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r69);

        $d84 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        r4 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>(r3, $d84);

        r5 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber square(com.opengamma.analytics.math.number.ComplexNumber)>(r4);

        $r70 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d86 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d85 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d87 = $d86 * $d85;

        specialinvoke $r70.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d87);

        r6 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r70);

        $d88 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $r71 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,double)>(r1, $d88);

        r7 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber square(com.opengamma.analytics.math.number.ComplexNumber)>($r71);

        $r72 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[3];

        $r72[0] = r5;

        $r72[1] = r6;

        $r72[2] = r7;

        r8 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber[])>($r72);

        r9 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber sqrt(com.opengamma.analytics.math.number.ComplexNumber)>(r8);

        r10 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r9, r4);

        $r73 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r9, r4);

        r11 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(-1.0, $r73);

        r12 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r10, r11);

        r13 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(d0, r11);

        $d89 = neg d0;

        $r74 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,double)>(r9, $d89);

        r14 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber exp(com.opengamma.analytics.math.number.ComplexNumber)>($r74);

        $r75 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r12, r14);

        $r76 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>(r12, 1.0);

        r15 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r75, $r76);

        r16 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber log(com.opengamma.analytics.math.number.ComplexNumber)>(r15);

        $r77 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(double,com.opengamma.analytics.math.number.ComplexNumber)>(1.0, r14);

        $r78 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r12, r14);

        r17 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r77, $r78);

        $r79 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(2.0, r16);

        $r80 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r13, $r79);

        r18 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(d1, $r80);

        $r81 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r81[0] = r10;

        $r81[1] = r17;

        r19 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(d119, $r81);

        $d90 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $r82 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d90, r19);

        r20 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r18, $r82);

        r2[0] = r20;

        $r83 = new com.opengamma.analytics.math.number.ComplexNumber;

        specialinvoke $r83.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double)>(1.0);

        $r84 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d91 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        specialinvoke $r84.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double)>($d91);

        $r85 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r85[0] = $r84;

        $r85[1] = r10;

        r23 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(d119, $r85);

        $d92 = -2.0 * d1;

        r24 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d92, $r83);

        r25 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r24, r15);

        $r86 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(double,com.opengamma.analytics.math.number.ComplexNumber)>(1.0, r12);

        $r87 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r12, r14);

        $r88 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber square(com.opengamma.analytics.math.number.ComplexNumber)>($r87);

        $r89 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r86, $r88);

        r26 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r23, $r89);

        $r90 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(double,com.opengamma.analytics.math.number.ComplexNumber)>(1.0, r12);

        $r91 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(double,com.opengamma.analytics.math.number.ComplexNumber)>(1.0, $r90);

        r27 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r25, $r91);

        r28 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r26, r27);

        r29 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(d1, $r83);

        $r92 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r14, r12);

        $r93 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r17, $r92);

        r30 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r23, $r93);

        $r94 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>(r14, 1.0);

        $r95 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>(r12, 1.0);

        $r96 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber square(com.opengamma.analytics.math.number.ComplexNumber)>($r95);

        $r97 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r94, $r96);

        r31 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r25, $r97);

        r32 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r30, r31);

        r33 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(d0, r29);

        $r98 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r98[0] = r32;

        $r99 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r12, r11);

        $r98[1] = $r99;

        r34 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(-1.0, $r98);

        r35 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r33, r34);

        $r100 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r100[0] = $r84;

        $r100[1] = r17;

        r36 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>(d119, $r100);

        r37 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r32, r11);

        r38 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r36, r37);

        $d93 = neg d0;

        $r101 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d93, r14);

        $r102 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r28, $r101);

        $r103 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r102, r38);

        r39 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r103, r35);

        $r104 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(double,com.opengamma.analytics.math.number.ComplexNumber)>(0.5, r9);

        r40 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r39, $r104);

        $r105 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(2.0, r4);

        $r106 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r40, $r105);

        $r107 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r38, r35);

        r44 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r106, $r107);

        $r108 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(2.0, r16);

        $r109 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r13, $r108);

        r46 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r83, $r109);

        $d95 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d94 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d97 = $d95 / $d94;

        $d96 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d98 = $d97 / $d96;

        $r110 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,double)>(r46, $d98);

        $r111 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r110, r44);

        r2[1] = $r111;

        $d100 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d99 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d102 = $d100 / $d99;

        $d101 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d103 = $d102 / $d101;

        $r112 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,double)>(r46, $d103);

        r2[2] = $r112;

        r2[3] = r19;

        $d104 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d105 = -2.0 / $d104;

        $r113 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r113[0] = r19;

        $r113[1] = $r84;

        r47 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>($d105, $r113);

        $d107 = -2.0 * d1;

        $d106 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d108 = $d107 / $d106;

        r48 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d108, r46);

        $d109 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d110 = 1.0 / $d109;

        $r114 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r114[0] = r3;

        $r114[1] = r44;

        r49 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>($d110, $r114);

        $d111 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d112 = 2.0 / $d111;

        $r115 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r115[0] = r6;

        $r115[1] = r40;

        r50 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>($d112, $r115);

        $d113 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d114 = 2.0 / $d113;

        $r116 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[2];

        $r116[0] = r7;

        $r116[1] = r40;

        r51 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>($d114, $r116);

        $r117 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[5];

        $r117[0] = r47;

        $r117[1] = r48;

        $r117[2] = r49;

        $r117[3] = r50;

        $r117[4] = r51;

        $r118 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber[])>($r117);

        r2[4] = $r118;

        $d115 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $r119 = newarray (com.opengamma.analytics.math.number.ComplexNumber)[3];

        $r119[0] = r1;

        $r120 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber I>;

        $r119[1] = $r120;

        $r119[2] = r44;

        $r121 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber[])>($d115, $r119);

        r2[5] = $r121;

        return r2;
    }

    private com.opengamma.analytics.math.number.ComplexNumber getC(com.opengamma.analytics.math.number.ComplexNumber, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, r2, r3, r4, r5, r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, r16, r17;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter1: double;

        $r7 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d3 = $d2 * $d1;

        specialinvoke $r7.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d3);

        r2 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r7);

        r3 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: com.opengamma.analytics.math.number.ComplexNumber c(com.opengamma.analytics.math.number.ComplexNumber)>(r1);

        r4 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: com.opengamma.analytics.math.number.ComplexNumber d(com.opengamma.analytics.math.number.ComplexNumber)>(r1);

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $r8 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r4, r2);

        $r9 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(double,com.opengamma.analytics.math.number.ComplexNumber)>($d4, $r8);

        r5 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(d0, $r9);

        $d5 = neg d0;

        $r10 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,double)>(r4, $d5);

        r6 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber exp(com.opengamma.analytics.math.number.ComplexNumber)>($r10);

        $r11 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r3, r6);

        $r12 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>(r3, 1.0);

        r16 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r11, $r12);

        r17 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber log(com.opengamma.analytics.math.number.ComplexNumber)>(r16);

        $d7 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d6 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d9 = $d7 * $d6;

        $d8 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d11 = $d9 / $d8;

        $d10 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d12 = $d11 / $d10;

        $r13 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(2.0, r17);

        $r14 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r5, $r13);

        $r15 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>($d12, $r14);

        return $r15;
    }

    private com.opengamma.analytics.math.number.ComplexNumber getD(com.opengamma.analytics.math.number.ComplexNumber, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, r2, r3, r4, r5, r6, r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter1: double;

        $r8 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d3 = $d2 * $d1;

        specialinvoke $r8.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d3);

        r2 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r8);

        r3 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: com.opengamma.analytics.math.number.ComplexNumber c(com.opengamma.analytics.math.number.ComplexNumber)>(r1);

        r4 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: com.opengamma.analytics.math.number.ComplexNumber d(com.opengamma.analytics.math.number.ComplexNumber)>(r1);

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $r9 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r4, r2);

        r5 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(double,com.opengamma.analytics.math.number.ComplexNumber)>($d4, $r9);

        $d5 = neg d0;

        $r10 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,double)>(r4, $d5);

        r6 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber exp(com.opengamma.analytics.math.number.ComplexNumber)>($r10);

        $r11 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(double,com.opengamma.analytics.math.number.ComplexNumber)>(1.0, r6);

        $r12 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r3, r6);

        r7 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r11, $r12);

        $r13 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r5, r7);

        $d7 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d6 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d8 = $d7 * $d6;

        $r14 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,double)>($r13, $d8);

        return $r14;
    }

    private com.opengamma.analytics.math.number.ComplexNumber c(com.opengamma.analytics.math.number.ComplexNumber)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, r2, r3, r4, r5, $r6, $r7, $r8, $r9;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        $r6 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d2 = $d1 * $d0;

        specialinvoke $r6.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d2);

        r2 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r6);

        r3 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: com.opengamma.analytics.math.number.ComplexNumber d(com.opengamma.analytics.math.number.ComplexNumber)>(r1);

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $r7 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r3, r2);

        r4 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(double,com.opengamma.analytics.math.number.ComplexNumber)>($d3, $r7);

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $r8 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r3, r2);

        r5 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(double,com.opengamma.analytics.math.number.ComplexNumber)>($d4, $r8);

        $r9 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r4, r5);

        return $r9;
    }

    private com.opengamma.analytics.math.number.ComplexNumber d(com.opengamma.analytics.math.number.ComplexNumber)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, r10, r11, r12, r13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        $r4 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d2 = $d1 * $d0;

        specialinvoke $r4.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d2);

        $r5 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r4);

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        r10 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,double)>($r5, $d3);

        r11 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r10, r10);

        $r6 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d5 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d6 = $d5 * $d4;

        specialinvoke $r6.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d6);

        r2 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r1, $r6);

        $d7 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        r12 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,double)>(r1, $d7);

        r13 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r12, r12);

        $r7 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r11, r2);

        r3 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber add(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r7, r13);

        $r8 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber sqrt(com.opengamma.analytics.math.number.ComplexNumber)>(r3);

        $r9 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(double,com.opengamma.analytics.math.number.ComplexNumber)>(1.0, $r8);

        return $r9;
    }

    public double getLargestAlpha()
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _alphaMax>;

        return $d0;
    }

    public double getSmallestAlpha()
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _alphaMin>;

        return $d0;
    }

    public double getKappa()
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        return $d0;
    }

    public double getTheta()
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        return $d0;
    }

    public double getVol0()
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        return $d0;
    }

    public double getOmega()
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        return $d0;
    }

    public double getRho()
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        return $d0;
    }

    public com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent withKappa(double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0, $r1;
        double d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: void <init>(double,double,double,double,double)>(d0, $d4, $d3, $d2, $d1);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent withTheta(double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0, $r1;
        double d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: void <init>(double,double,double,double,double)>($d4, d0, $d3, $d2, $d1);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent withVol0(double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0, $r1;
        double d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: void <init>(double,double,double,double,double)>($d4, $d3, d0, $d2, $d1);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent withOmega(double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0, $r1;
        double d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: void <init>(double,double,double,double,double)>($d4, $d3, $d2, d0, $d1);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent withRho(double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0, $r1;
        double d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: void <init>(double,double,double,double,double)>($d4, $d3, $d2, $d1, d0);

        return $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0;
        double $d0, $d1, $d2, $d3, $d4;
        long $l1, $l2, $l5, $l6, $l9, $l10, $l13, $l14, $l17, $l18, l22, l24, l26, l28, l30;
        int $i3, $i4, $i7, $i8, $i11, $i12, $i15, $i16, $i19, $i20, i23, i25, i27, i29, i31;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        l22 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i4 = 31 * 1;

        $l1 = l22 >>> 32;

        $l2 = l22 ^ $l1;

        $i3 = (int) $l2;

        i23 = $i4 + $i3;

        $d1 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        l24 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $i8 = 31 * i23;

        $l5 = l24 >>> 32;

        $l6 = l24 ^ $l5;

        $i7 = (int) $l6;

        i25 = $i8 + $i7;

        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        l26 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $i12 = 31 * i25;

        $l9 = l26 >>> 32;

        $l10 = l26 ^ $l9;

        $i11 = (int) $l10;

        i27 = $i12 + $i11;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        l28 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $i16 = 31 * i27;

        $l13 = l28 >>> 32;

        $l14 = l28 ^ $l13;

        $i15 = (int) $l14;

        i29 = $i16 + $i15;

        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        l30 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d4);

        $i20 = 31 * i29;

        $l17 = l30 >>> 32;

        $l18 = l30 ^ $l17;

        $i19 = (int) $l18;

        i31 = $i20 + $i19;

        return i31;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        long $l0, $l1, $l3, $l4, $l6, $l7, $l9, $l10, $l12, $l13;
        byte $b2, $b5, $b8, $b11, $b14;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent) r1;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _kappa>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $d2 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $d3 = r2.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _omega>;

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        $d4 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d4);

        $d5 = r2.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _rho>;

        $l7 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d5);

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label6;

        return 0;

     label6:
        $d6 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $l9 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d6);

        $d7 = r2.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _theta>;

        $l10 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d7);

        $b11 = $l9 cmp $l10;

        if $b11 == 0 goto label7;

        return 0;

     label7:
        $d8 = r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $l12 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d8);

        $d9 = r2.<com.opengamma.analytics.financial.model.option.pricing.fourier.HestonCharacteristicExponent: double _vol0>;

        $l13 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d9);

        $b14 = $l12 cmp $l13;

        if $b14 != 0 goto label8;

        $z0 = 1;

        goto label9;

     label8:
        $z0 = 0;

     label9:
        return $z0;
    }
}
