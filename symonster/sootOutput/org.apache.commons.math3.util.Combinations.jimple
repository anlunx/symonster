public class org.apache.commons.math3.util.Combinations extends java.lang.Object implements java.lang.Iterable
{
    private final int n;
    private final int k;
    private final org.apache.commons.math3.util.Combinations$IterationOrder iterationOrder;

    public void <init>(int, int)
    {
        org.apache.commons.math3.util.Combinations r0;
        int i0, i1;
        org.apache.commons.math3.util.Combinations$IterationOrder $r1;

        r0 := @this: org.apache.commons.math3.util.Combinations;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = <org.apache.commons.math3.util.Combinations$IterationOrder: org.apache.commons.math3.util.Combinations$IterationOrder LEXICOGRAPHIC>;

        specialinvoke r0.<org.apache.commons.math3.util.Combinations: void <init>(int,int,org.apache.commons.math3.util.Combinations$IterationOrder)>(i0, i1, $r1);

        return;
    }

    private void <init>(int, int, org.apache.commons.math3.util.Combinations$IterationOrder)
    {
        org.apache.commons.math3.util.Combinations r0;
        int i0, i1;
        org.apache.commons.math3.util.Combinations$IterationOrder r1;

        r0 := @this: org.apache.commons.math3.util.Combinations;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.commons.math3.util.Combinations$IterationOrder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.math3.util.CombinatoricsUtils: void checkBinomial(int,int)>(i0, i1);

        r0.<org.apache.commons.math3.util.Combinations: int n> = i0;

        r0.<org.apache.commons.math3.util.Combinations: int k> = i1;

        r0.<org.apache.commons.math3.util.Combinations: org.apache.commons.math3.util.Combinations$IterationOrder iterationOrder> = r1;

        return;
    }

    public int getN()
    {
        org.apache.commons.math3.util.Combinations r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.util.Combinations;

        $i0 = r0.<org.apache.commons.math3.util.Combinations: int n>;

        return $i0;
    }

    public int getK()
    {
        org.apache.commons.math3.util.Combinations r0;
        int $i0;

        r0 := @this: org.apache.commons.math3.util.Combinations;

        $i0 = r0.<org.apache.commons.math3.util.Combinations: int k>;

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.math3.util.Combinations r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.commons.math3.util.Combinations$SingletonIterator $r1;
        int[] $r2, $r4;
        org.apache.commons.math3.util.Combinations$IterationOrder $r3;
        org.apache.commons.math3.util.Combinations$LexicographicIterator $r5;
        org.apache.commons.math3.exception.MathInternalError $r6;

        r0 := @this: org.apache.commons.math3.util.Combinations;

        $i0 = r0.<org.apache.commons.math3.util.Combinations: int k>;

        if $i0 == 0 goto label1;

        $i3 = r0.<org.apache.commons.math3.util.Combinations: int k>;

        $i2 = r0.<org.apache.commons.math3.util.Combinations: int n>;

        if $i3 != $i2 goto label2;

     label1:
        $r1 = new org.apache.commons.math3.util.Combinations$SingletonIterator;

        $i1 = r0.<org.apache.commons.math3.util.Combinations: int k>;

        $r2 = staticinvoke <org.apache.commons.math3.util.MathArrays: int[] natural(int)>($i1);

        specialinvoke $r1.<org.apache.commons.math3.util.Combinations$SingletonIterator: void <init>(int[])>($r2);

        return $r1;

     label2:
        $r4 = <org.apache.commons.math3.util.Combinations$1: int[] $SwitchMap$org$apache$commons$math3$util$Combinations$IterationOrder>;

        $r3 = r0.<org.apache.commons.math3.util.Combinations: org.apache.commons.math3.util.Combinations$IterationOrder iterationOrder>;

        $i4 = virtualinvoke $r3.<org.apache.commons.math3.util.Combinations$IterationOrder: int ordinal()>();

        $i5 = $r4[$i4];

        lookupswitch($i5)
        {
            case 1: goto label3;
            default: goto label4;
        };

     label3:
        $r5 = new org.apache.commons.math3.util.Combinations$LexicographicIterator;

        $i7 = r0.<org.apache.commons.math3.util.Combinations: int n>;

        $i6 = r0.<org.apache.commons.math3.util.Combinations: int k>;

        specialinvoke $r5.<org.apache.commons.math3.util.Combinations$LexicographicIterator: void <init>(int,int)>($i7, $i6);

        return $r5;

     label4:
        $r6 = new org.apache.commons.math3.exception.MathInternalError;

        specialinvoke $r6.<org.apache.commons.math3.exception.MathInternalError: void <init>()>();

        throw $r6;
    }

    public java.util.Comparator comparator()
    {
        org.apache.commons.math3.util.Combinations r0;
        org.apache.commons.math3.util.Combinations$LexicographicComparator $r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.util.Combinations;

        $r1 = new org.apache.commons.math3.util.Combinations$LexicographicComparator;

        $i1 = r0.<org.apache.commons.math3.util.Combinations: int n>;

        $i0 = r0.<org.apache.commons.math3.util.Combinations: int k>;

        specialinvoke $r1.<org.apache.commons.math3.util.Combinations$LexicographicComparator: void <init>(int,int)>($i1, $i0);

        return $r1;
    }
}
