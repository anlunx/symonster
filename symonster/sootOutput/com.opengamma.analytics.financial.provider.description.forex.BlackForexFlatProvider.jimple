public class com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider extends java.lang.Object implements com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProviderInterface
{
    private final com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider;
    private final com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters _volatility;
    private final com.opengamma.util.tuple.Pair _currencyPair;

    public void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface, com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters, com.opengamma.util.tuple.Pair)
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r1;
        com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters r2;
        com.opengamma.util.tuple.Pair r3;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        r2 := @parameter1: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters;

        r3 := @parameter2: com.opengamma.util.tuple.Pair;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "multicurves");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "volatility");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "currencyPair");

        r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider> = r1;

        r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters _volatility> = r2;

        r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair> = r3;

        return;
    }

    public com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider copy()
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0, $r3;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r1, $r2;
        com.opengamma.util.tuple.Pair $r4;
        com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        r1 = interfaceinvoke $r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface copy()>();

        $r3 = new com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters _volatility>;

        $r4 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair>;

        specialinvoke $r3.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface,com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters,com.opengamma.util.tuple.Pair)>(r1, $r5, $r4);

        return $r3;
    }

    public com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters getVolatility()
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters _volatility>;

        return $r1;
    }

    public com.opengamma.util.tuple.Pair getCurrencyPair()
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.util.tuple.Pair $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair>;

        return $r1;
    }

    public boolean checkCurrencies(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.util.money.Currency r1, r2;
        com.opengamma.util.tuple.Pair $r3, $r5, $r7, $r9;
        java.lang.Object $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair>;

        $r4 = virtualinvoke $r3.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $z0 = virtualinvoke r1.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r9 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair>;

        $r10 = virtualinvoke $r9.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $z3 = virtualinvoke r2.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>($r10);

        if $z3 == 0 goto label1;

        return 1;

     label1:
        $r5 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair>;

        $r6 = virtualinvoke $r5.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        $z1 = virtualinvoke r2.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair>;

        $r8 = virtualinvoke $r7.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $z2 = virtualinvoke r1.<com.opengamma.util.money.Currency: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        return $r1;
    }

    public double getVolatility(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency, double)
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.util.money.Currency r1, r2;
        double d0, $d1;
        boolean $z0;
        com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters $r3;
        java.lang.Double $r4, $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        d0 := @parameter2: double;

        $z0 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r1, r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Incompatible currencies");

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters getVolatility()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r5 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters: java.lang.Double getVolatility(java.lang.Double)>($r4);

        $d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public java.lang.Double[] getVolatilityTimeSensitivity(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency, double)
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.util.money.Currency r1, r2;
        double d0;
        boolean $z0;
        com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters $r3;
        java.lang.Double[] $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        d0 := @parameter2: double;

        $z0 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: boolean checkCurrencies(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r1, r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Incompatible currencies");

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters getVolatility()>();

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters: java.lang.Double[] getVolatilityTimeSensitivity(double)>(d0);

        return $r4;
    }

    public double[] parameterSensitivity(java.lang.String, java.util.List)
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        java.lang.String r1;
        java.util.List r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        double[] $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r4 = interfaceinvoke $r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double[] parameterSensitivity(java.lang.String,java.util.List)>(r1, r2);

        return $r4;
    }

    public double[] parameterForwardSensitivity(java.lang.String, java.util.List)
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        java.lang.String r1;
        java.util.List r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r3;
        double[] $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r4 = interfaceinvoke $r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double[] parameterForwardSensitivity(java.lang.String,java.util.List)>(r1, r2);

        return $r4;
    }

    public java.util.Set getAllCurveNames()
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r1;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r2 = interfaceinvoke $r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.util.Set getAllCurveNames()>();

        return $r2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.util.tuple.Pair $r1;
        int $i1, $i2, $i3, $i4, $i5, $i6, i8, i9, i10;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r2;
        com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair>;

        $i2 = virtualinvoke $r1.<com.opengamma.util.tuple.Pair: int hashCode()>();

        i8 = $i1 + $i2;

        $i3 = 31 * i8;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i9 = $i3 + $i4;

        $i5 = 31 * i9;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters _volatility>;

        $i6 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters: int hashCode()>();

        i10 = $i5 + $i6;

        return i10;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        com.opengamma.util.tuple.Pair $r3, $r4;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r5, $r6;
        com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider) r1;

        $r4 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair>;

        $r3 = r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.util.tuple.Pair _currencyPair>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $r5 = r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface _multicurveProvider>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters _volatility>;

        $r7 = r2.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters _volatility>;

        $z3 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public volatile java.lang.Object getVolatility()
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0;
        com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.model.volatility.curve.BlackForexTermStructureParameters getVolatility()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.financial.provider.description.forex.BlackForexProviderInterface copy()
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0, $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider copy()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface copy()
    {
        com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider r0, $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider: com.opengamma.analytics.financial.provider.description.forex.BlackForexFlatProvider copy()>();

        return $r1;
    }
}
