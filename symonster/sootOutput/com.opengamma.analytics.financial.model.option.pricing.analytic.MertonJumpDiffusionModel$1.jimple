class com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.option.definition.OptionDefinition val$definition;
    final com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel this$0;

    void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel, com.opengamma.analytics.financial.model.option.definition.OptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1 r0;
        com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel r1;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition r2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.definition.OptionDefinition;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1: com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1: com.opengamma.analytics.financial.model.option.definition.OptionDefinition val$definition> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1 r0;
        com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle r1;
        org.threeten.bp.ZonedDateTime r2;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, d29, d30, d31;
        com.opengamma.analytics.math.function.Function1D r4;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition $r5, $r7, $r13;
        java.lang.Double $r6, $r15, $r16, $r21;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle $r8, $r19;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r9;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface $r10, $r17;
        com.opengamma.analytics.math.surface.ConstantDoublesSurface $r11, $r18;
        com.opengamma.analytics.financial.model.option.pricing.analytic.AnalyticOptionModel $r12;
        java.lang.Object $r14, $r20;
        int i0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        r2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        $r5 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1: com.opengamma.analytics.financial.model.option.definition.OptionDefinition val$definition>;

        $r6 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: java.lang.Double getStrike()>();

        d0 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $r7 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1: com.opengamma.analytics.financial.model.option.definition.OptionDefinition val$definition>;

        d1 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.option.definition.OptionDefinition: double getTimeToExpiry(org.threeten.bp.ZonedDateTime)>(r2);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle: double getVolatility(double,double)>(d1, d0);

        d3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle: double getLambda()>();

        d4 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle: double getGamma()>();

        d5 = d2 * d2;

        $d10 = d4 * d5;

        $d11 = $d10 / d3;

        d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d11);

        $d12 = d3 * d6;

        $d13 = $d12 * d6;

        $d14 = d5 - $d13;

        d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d14);

        d8 = d7 * d7;

        d9 = d3 * d1;

        $d15 = neg d9;

        d29 = staticinvoke <java.lang.Math: double exp(double)>($d15);

        $r8 = new com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getInterestRateCurve()>();

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle: double getCostOfCarry()>();

        $r10 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r11 = staticinvoke <com.opengamma.analytics.math.surface.ConstantDoublesSurface: com.opengamma.analytics.math.surface.ConstantDoublesSurface 'from'(double)>(d7);

        specialinvoke $r10.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r11);

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle: double getSpot()>();

        specialinvoke $r8.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: void <init>(com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,double,com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface,double,org.threeten.bp.ZonedDateTime)>($r9, $d16, $r10, $d17, r2);

        $r12 = staticinvoke <com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel: com.opengamma.analytics.financial.model.option.pricing.analytic.AnalyticOptionModel access$000()>();

        $r13 = r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1: com.opengamma.analytics.financial.model.option.definition.OptionDefinition val$definition>;

        r4 = virtualinvoke $r12.<com.opengamma.analytics.financial.model.option.pricing.analytic.AnalyticOptionModel: com.opengamma.analytics.math.function.Function1D getPricingFunction(com.opengamma.analytics.financial.model.option.definition.OptionDefinition)>($r13);

        $r14 = virtualinvoke r4.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r8);

        $r15 = (java.lang.Double) $r14;

        $d18 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        d30 = d29 * $d18;

        i0 = 1;

     label1:
        if i0 >= 50 goto label2;

        $d20 = d6 * d6;

        $d19 = (double) i0;

        $d21 = $d20 * $d19;

        $d22 = $d21 / d1;

        $d23 = d8 + $d22;

        d31 = staticinvoke <java.lang.Math: double sqrt(double)>($d23);

        $d24 = (double) i0;

        $d25 = d9 / $d24;

        d29 = d29 * $d25;

        $r17 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r18 = staticinvoke <com.opengamma.analytics.math.surface.ConstantDoublesSurface: com.opengamma.analytics.math.surface.ConstantDoublesSurface 'from'(double)>(d31);

        specialinvoke $r17.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r18);

        $r19 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle withVolatilitySurface(com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface)>($r17);

        $r20 = virtualinvoke r4.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r19);

        $r21 = (java.lang.Double) $r20;

        $d26 = virtualinvoke $r21.<java.lang.Double: double doubleValue()>();

        $d27 = d29 * $d26;

        d30 = d30 + $d27;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d30);

        return $r16;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1 r0;
        java.lang.Object r1;
        com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.MertonJumpDiffusionModel$1: java.lang.Double evaluate(com.opengamma.analytics.financial.model.option.definition.MertonJumpDiffusionModelDataBundle)>($r2);

        return $r3;
    }
}
