public final class com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod INSTANCE;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCalculator CFEC;

    public static com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.HullWhiteOneFactorProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.HullWhiteOneFactorProviderInterface r2;
        com.opengamma.util.money.Currency r3, $r36;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d24, $d25, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, d102, d103, d104, d105, d106, d107, d108, d109, d110, $d111;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed r4;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24;
        double[] r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r46;
        com.opengamma.analytics.math.function.Function1D r19;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r22, $r34;
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCalculator $r23;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r24, $r44;
        java.lang.Object $r25, $r32;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters $r26, $r27, $r28;
        byte $b5;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r29;
        boolean $z0, $z1, $z2;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r30;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r31;
        java.lang.Double $r33, $r45;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity $r35;
        com.opengamma.util.money.MultipleCurrencyAmount $r37;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r38, $r40, $r42;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r39, $r41, $r43;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.HullWhiteOneFactorProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Hull-White provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: double getTimeToExpiry()>();

        $r22 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r23 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCalculator CFEC>;

        $r24 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.HullWhiteOneFactorProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r25 = virtualinvoke $r22.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r23, $r24);

        r4 = (com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed) $r25;

        i0 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: int getNumberOfPayments()>();

        $r26 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.HullWhiteOneFactorProviderInterface: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameters()>();

        d1 = virtualinvoke $r26.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getMeanReversion()>();

        $r27 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.HullWhiteOneFactorProviderInterface: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameters()>();

        r5 = virtualinvoke $r27.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatility()>();

        $r28 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.HullWhiteOneFactorProviderInterface: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameters()>();

        r6 = virtualinvoke $r28.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double[] getVolatilityTime()>();

        r7 = newarray (double)[i0];

        $i1 = i0 + 1;

        r8 = newarray (double)[$i1];

        $i2 = i0 + 1;

        r9 = newarray (double)[$i2];

        r10 = newarray (double)[i0];

        r11 = newarray (double)[i0];

        r12 = newarray (double)[i0];

        r8[0] = d0;

        $d5 = neg d1;

        $d4 = r8[0];

        $d6 = $d5 * $d4;

        $d7 = staticinvoke <java.lang.Math: double exp(double)>($d6);

        r9[0] = $d7;

        i18 = 0;

     label01:
        if i18 >= i0 goto label02;

        $i14 = i18 + 1;

        $r38 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i18);

        $r39 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r38;

        $d84 = virtualinvoke $r39.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getPaymentTime()>();

        r8[$i14] = $d84;

        $r40 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(0);

        $r41 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r40;

        $d85 = virtualinvoke $r41.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d86 = staticinvoke <java.lang.Math: double signum(double)>($d85);

        $d87 = neg $d86;

        $r42 = virtualinvoke r4.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>(i18);

        $r43 = (com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed) $r42;

        $d88 = virtualinvoke $r43.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $d89 = $d87 * $d88;

        r7[i18] = $d89;

        $i16 = i18 + 1;

        $d91 = neg d1;

        $i15 = i18 + 1;

        $d90 = r8[$i15];

        $d92 = $d91 * $d90;

        $d93 = staticinvoke <java.lang.Math: double exp(double)>($d92);

        r9[$i16] = $d93;

        $r44 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.HullWhiteOneFactorProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $i17 = i18 + 1;

        $d94 = r8[$i17];

        $r45 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d94);

        $d95 = interfaceinvoke $r44.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r3, $r45);

        r10[i18] = $d95;

        $d97 = r10[i18];

        $d96 = r10[0];

        $d98 = $d97 / $d96;

        r11[i18] = $d98;

        $d100 = r7[i18];

        $d99 = r11[i18];

        $d101 = $d100 * $d99;

        r12[i18] = $d101;

        i18 = i18 + 1;

        goto label01;

     label02:
        $d8 = r7[0];

        d102 = neg $d8;

        d103 = 0.0;

        $i3 = i0 - 1;

        r13 = newarray (double)[$i3];

        i19 = 1;

     label03:
        if i19 >= i0 goto label04;

        $d83 = r12[i19];

        d103 = d103 + $d83;

        i19 = i19 + 1;

        goto label03;

     label04:
        i20 = 1;

     label05:
        if i20 >= i0 goto label06;

        $i13 = i20 - 1;

        $d80 = r7[i20];

        $d79 = r11[i20];

        $d81 = $d80 * $d79;

        $d82 = $d81 / d103;

        r13[$i13] = $d82;

        i20 = i20 + 1;

        goto label05;

     label06:
        d104 = 0.0;

        i21 = 0;

     label07:
        $i4 = i21 + 1;

        $d9 = r6[$i4];

        $b5 = d0 cmpl $d9;

        if $b5 <= 0 goto label08;

        $d67 = r5[i21];

        $d66 = r5[i21];

        $d71 = $d67 * $d66;

        $d69 = 2.0 * d1;

        $i12 = i21 + 1;

        $d68 = r6[$i12];

        $d70 = $d69 * $d68;

        $d72 = staticinvoke <java.lang.Math: double exp(double)>($d70);

        $d74 = 2.0 * d1;

        $d73 = r6[i21];

        $d75 = $d74 * $d73;

        $d76 = staticinvoke <java.lang.Math: double exp(double)>($d75);

        $d77 = $d72 - $d76;

        $d78 = $d71 * $d77;

        d104 = d104 + $d78;

        i21 = i21 + 1;

        goto label07;

     label08:
        $d11 = r5[i21];

        $d10 = r5[i21];

        $d14 = $d11 * $d10;

        $d12 = 2.0 * d1;

        $d13 = $d12 * d0;

        $d15 = staticinvoke <java.lang.Math: double exp(double)>($d13);

        $d17 = 2.0 * d1;

        $d16 = r6[i21];

        $d18 = $d17 * $d16;

        $d19 = staticinvoke <java.lang.Math: double exp(double)>($d18);

        $d20 = $d15 - $d19;

        $d21 = $d14 * $d20;

        d105 = d104 + $d21;

        $d22 = 2.0 * d1;

        d106 = d105 / $d22;

        d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d106);

        r14 = newarray (double)[i0];

        r15 = newarray (double)[i0];

        d107 = 0.0;

        d108 = 0.0;

        r16 = newarray (double)[i0];

        i22 = 0;

     label09:
        if i22 >= i0 goto label10;

        $d50 = r9[1];

        $i11 = i22 + 1;

        $d49 = r9[$i11];

        $d51 = $d50 - $d49;

        $d52 = $d51 / d1;

        r14[i22] = $d52;

        $d53 = r14[i22];

        $d54 = $d53 * d2;

        r15[i22] = $d54;

        $d61 = r12[i22];

        $d56 = r12[i22];

        $d55 = r15[i22];

        $d58 = $d56 * $d55;

        $d57 = r15[i22];

        $d59 = $d58 * $d57;

        $d60 = $d59 / 2.0;

        $d62 = $d61 - $d60;

        d107 = d107 + $d62;

        $d64 = r12[i22];

        $d63 = r15[i22];

        $d65 = $d64 * $d63;

        d108 = d108 + $d65;

        i22 = i22 + 1;

        goto label09;

     label10:
        d109 = d107 / d108;

        i23 = 0;

     label11:
        if i23 >= i0 goto label12;

        $d47 = r11[i23];

        $d39 = r15[i23];

        $d40 = $d39 * d109;

        $d45 = 1.0 - $d40;

        $d42 = r15[i23];

        $d41 = r15[i23];

        $d43 = $d42 * $d41;

        $d44 = $d43 / 2.0;

        $d46 = $d45 - $d44;

        $d48 = $d47 * $d46;

        r16[i23] = $d48;

        i23 = i23 + 1;

        goto label11;

     label12:
        $i6 = i0 - 1;

        r46 = newarray (double)[$i6];

        d110 = 0.0;

        i24 = 0;

     label13:
        $i7 = i0 - 1;

        if i24 >= $i7 goto label14;

        $i8 = i24 + 1;

        $d29 = r7[$i8];

        $i9 = i24 + 1;

        $d28 = r16[$i9];

        $d30 = $d29 * $d28;

        $d31 = $d30 / d102;

        r46[i24] = $d31;

        $d33 = r13[i24];

        $d32 = r46[i24];

        $d34 = $d33 + $d32;

        $d36 = d2 * $d34;

        $i10 = i24 + 1;

        $d35 = r14[$i10];

        $d37 = $d36 * $d35;

        $d38 = $d37 / 2.0;

        d110 = d110 + $d38;

        i24 = i24 + 1;

        goto label13;

     label14:
        $r29 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isCall()>();

        if $z0 != 0 goto label15;

        $z2 = 1;

        goto label16;

     label15:
        $z2 = 0;

     label16:
        specialinvoke $r29.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: void <init>(double,double,boolean)>(d102, 1.0, $z2);

        $r30 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r31 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d24 = r10[0];

        specialinvoke $r31.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d103, $d24, d110);

        r19 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>($r29);

        $r32 = virtualinvoke r19.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r31);

        $r33 = (java.lang.Double) $r32;

        d3 = virtualinvoke $r33.<java.lang.Double: double doubleValue()>();

        $r34 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r35 = virtualinvoke $r34.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity getFirstLeg()>();

        $r36 = virtualinvoke $r35.<com.opengamma.analytics.financial.interestrate.annuity.derivative.Annuity: com.opengamma.util.money.Currency getCurrency()>();

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: boolean isLong()>();

        if $z1 == 0 goto label17;

        $d111 = 1.0;

        goto label18;

     label17:
        $d111 = -1.0;

     label18:
        $d25 = d3 * $d111;

        $r37 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r36, $d25);

        return $r37;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod $r0;
        com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCalculator $r1;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionPhysicalFixedIborHullWhiteApproximationMethod: com.opengamma.analytics.financial.provider.calculator.discounting.CashFlowEquivalentCalculator CFEC> = $r1;

        return;
    }
}
