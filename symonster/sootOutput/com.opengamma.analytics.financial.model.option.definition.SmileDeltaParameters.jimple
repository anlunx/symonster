public class com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters extends java.lang.Object
{
    private final double _timeToExpiry;
    private final double[] _delta;
    private final double[] _volatility;

    public void <init>(double, double[], double[])
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters r0;
        double d0;
        double[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object[] $r5;
        java.lang.Integer $r6, $r7;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Delta");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Volatility");

        $i0 = lengthof r1;

        $i1 = 2 * $i0;

        $i3 = $i1 + 1;

        $i2 = lengthof r2;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r5 = newarray (java.lang.Object)[2];

        $i4 = lengthof r1;

        $i5 = 2 * $i4;

        $i6 = $i5 + 1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r5[0] = $r6;

        $i7 = lengthof r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r5[1] = $r7;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Length of delta {} should be coherent with volatility length {}", $r5);

        r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double _timeToExpiry> = d0;

        r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _delta> = r1;

        r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility> = r2;

        return;
    }

    public void <init>(double, double, double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        double[] r1, r2, r3, $r13, $r14, $r15, $r16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        java.lang.Object[] $r7, $r10;
        java.lang.Integer $r8, $r9, $r11, $r12;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: double[];

        r2 := @parameter3: double[];

        r3 := @parameter4: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Delta");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Risk Reversal");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "Strangle");

        $i2 = lengthof r1;

        $i1 = lengthof r2;

        if $i2 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r7 = newarray (java.lang.Object)[2];

        $i3 = lengthof r1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r7[0] = $r8;

        $i4 = lengthof r2;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7[1] = $r9;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, "Length of delta {} should be equal to length of risk reversal {}", $r7);

        $i6 = lengthof r1;

        $i5 = lengthof r3;

        if $i6 != $i5 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r10 = newarray (java.lang.Object)[2];

        $i7 = lengthof r1;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r10[0] = $r11;

        $i8 = lengthof r3;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r10[1] = $r12;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Length of delta {} should be equal to length of strangle {} ", $r10);

        r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double _timeToExpiry> = d0;

        r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _delta> = r1;

        i0 = lengthof r1;

        $i9 = 2 * i0;

        $i10 = $i9 + 1;

        $r13 = newarray (double)[$i10];

        r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility> = $r13;

        $r14 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $r14[i0] = d1;

        i13 = 0;

     label5:
        if i13 >= i0 goto label6;

        $r15 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $d2 = r3[i13];

        $d5 = $d2 + d1;

        $d3 = r2[i13];

        $d4 = $d3 / 2.0;

        $d6 = $d5 - $d4;

        $r15[i13] = $d6;

        $r16 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $i11 = 2 * i0;

        $i12 = $i11 - i13;

        $d7 = r3[i13];

        $d10 = $d7 + d1;

        $d8 = r2[i13];

        $d9 = $d8 / 2.0;

        $d11 = $d10 + $d9;

        $r16[$i12] = $d11;

        i13 = i13 + 1;

        goto label5;

     label6:
        return;
    }

    public double[] getStrike(double)
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        double[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        d0 := @parameter0: double;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _delta>;

        i0 = lengthof $r2;

        $i1 = 2 * i0;

        $i2 = $i1 + 1;

        r1 = newarray (double)[$i2];

        $r3 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $d2 = $r3[i0];

        $r4 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $d1 = $r4[i0];

        $d4 = $d2 * $d1;

        $d3 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double _timeToExpiry>;

        $d5 = $d4 * $d3;

        $d6 = $d5 / 2.0;

        $d7 = staticinvoke <java.lang.Math: double exp(double)>($d6);

        $d8 = d0 * $d7;

        r1[i0] = $d8;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        $r5 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _delta>;

        $d9 = $r5[i7];

        $d12 = neg $d9;

        $d11 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double _timeToExpiry>;

        $r6 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $d10 = $r6[i7];

        $d13 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedStrike(double,boolean,double,double,double)>($d12, 0, d0, $d11, $d10);

        r1[i7] = $d13;

        $i3 = 2 * i0;

        $i6 = $i3 - i7;

        $r7 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _delta>;

        $d16 = $r7[i7];

        $d15 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double _timeToExpiry>;

        $r8 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $i4 = 2 * i0;

        $i5 = $i4 - i7;

        $d14 = $r8[$i5];

        $d17 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedStrike(double,boolean,double,double,double)>($d16, 1, d0, $d15, $d14);

        r1[$i6] = $d17;

        i7 = i7 + 1;

        goto label1;

     label2:
        return r1;
    }

    public double getTimeToExpiry()
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double _timeToExpiry>;

        return $d0;
    }

    public double[] getDelta()
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _delta>;

        return $r1;
    }

    public double[] getVolatility()
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters r0;
        double[] $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        return $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters r0;
        long l1, $l4, $l5;
        double[] $r1, $r2;
        int $i2, $i3, $i6, $i7, $i8, $i9, i11, i12, i13;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        $i2 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _delta>;

        $i3 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r1);

        i11 = $i2 + $i3;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double _timeToExpiry>;

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i7 = 31 * i11;

        $l4 = l1 >>> 32;

        $l5 = l1 ^ $l4;

        $i6 = (int) $l5;

        i12 = $i7 + $i6;

        $i8 = 31 * i12;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $i9 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r2);

        i13 = $i8 + $i9;

        return i13;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        double[] $r5, $r6, $r7, $r8;
        boolean $z0, $z1;
        double $d0, $d1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _delta>;

        $r5 = r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _delta>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        $d0 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double _timeToExpiry>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double _timeToExpiry>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $r7 = r2.<com.opengamma.analytics.financial.model.option.definition.SmileDeltaParameters: double[] _volatility>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r8, $r7);

        if $z1 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }
}
