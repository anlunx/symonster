public final class com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod INSTANCE;

    public static com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod: com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.math.curve.DoublesCurve)
    {
        com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.math.curve.DoublesCurve r3;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r4;
        com.opengamma.util.money.Currency $r5, $r6, $r15;
        java.lang.Double $r7, $r9;
        java.lang.Object $r8;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r10, $r11, $r12;
        java.lang.String $r13;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r14;
        com.opengamma.util.money.MultipleCurrencyAmount $r16;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter2: com.opengamma.analytics.math.curve.DoublesCurve;

        $r4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        d0 = virtualinvoke $r4.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r5, $r6);

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r8 = virtualinvoke r3.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Object getYValue(java.lang.Comparable)>($r7);

        $r9 = (java.lang.Double) $r8;

        d2 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d3 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        d4 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r13);

        d5 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d7 = d0 + d2;

        $d8 = d3 * $d7;

        $d9 = d4 + $d8;

        d6 = d5 * $d9;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r16 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r15, d6);

        return $r16;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.math.curve.DoublesCurve)
    {
        com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.math.curve.DoublesCurve r3;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r4;
        com.opengamma.util.money.Currency $r5, $r6, $r15, $r16;
        java.lang.Double $r7, $r9;
        java.lang.Object $r8;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r10, $r11, $r12;
        java.lang.String $r13;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r14;
        com.opengamma.util.money.MultipleCurrencyAmount r17, r18;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter2: com.opengamma.analytics.math.curve.DoublesCurve;

        $r4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        d0 = virtualinvoke $r4.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r5, $r6);

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r8 = virtualinvoke r3.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Object getYValue(java.lang.Comparable)>($r7);

        $r9 = (java.lang.Double) $r8;

        d2 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d3 = virtualinvoke $r10.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        d4 = virtualinvoke $r11.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r13 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r14 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r13);

        d5 = virtualinvoke $r14.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d10 = d3 * d5;

        $d8 = d2 / d0;

        $d9 = 1.0 + $d8;

        d6 = $d10 * $d9;

        d7 = d4 * d5;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        r17 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r15, d6);

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        r18 = virtualinvoke r17.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.Currency,double)>($r16, d7);

        return r18;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.math.curve.DoublesCurve)
    {
        com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.math.curve.DoublesCurve r3;
        double d0, d1, d2, d3, d4, d5, d7, $d8, $d9, $d10, $d11, $d12, $d13;
        com.opengamma.util.tuple.DoublesPair r4;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r6;
        com.opengamma.util.money.Currency $r7, $r8, $r18;
        java.lang.Double $r9, $r11;
        java.lang.Object $r10;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r12, $r13, $r14, $r19;
        java.lang.String $r15, $r20;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r16;
        java.util.ArrayList $r17;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity $r21;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r22;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter2: com.opengamma.analytics.math.curve.DoublesCurve;

        $r6 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency1()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        d0 = virtualinvoke $r6.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r7, $r8);

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r10 = virtualinvoke r3.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Object getYValue(java.lang.Comparable)>($r9);

        $r11 = (java.lang.Double) $r10;

        d2 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d3 = virtualinvoke $r12.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        d4 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r15 = virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r15);

        d5 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d8 = d0 + d2;

        $d9 = d3 * $d8;

        $d10 = d4 + $d9;

        d7 = $d10 * 1.0;

        $d11 = neg d1;

        $d12 = $d11 * d5;

        $d13 = $d12 * d7;

        r4 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d1, $d13);

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.util.money.Currency getCurrency2()>();

        $r19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r20 = virtualinvoke $r19.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r21 = staticinvoke <com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity of(java.lang.String,java.util.List)>($r20, $r17);

        $r22 = staticinvoke <com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r18, $r21);

        return $r22;
    }

    public double[] presentValueForwardPointsSensitivity(com.opengamma.analytics.financial.forex.derivative.Forex, com.opengamma.analytics.financial.interestrate.YieldCurveBundle, com.opengamma.analytics.math.curve.DoublesCurve)
    {
        com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod r0;
        com.opengamma.analytics.financial.forex.derivative.Forex r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        com.opengamma.analytics.math.curve.DoublesCurve r3;
        double d0, d1, d2, d4, $d5, $d6, $d7;
        java.lang.Double[] r4;
        double[] r5;
        com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed $r6, $r7;
        java.lang.String $r8;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r9;
        java.lang.Double $r10, $r11;
        int $i0, $i1, i2;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.Forex;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        r3 := @parameter2: com.opengamma.analytics.math.curve.DoublesCurve;

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: double getPaymentTime()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency1()>();

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: double getAmount()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.Forex: com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed getPaymentCurrency2()>();

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.financial.interestrate.payments.derivative.PaymentFixed: java.lang.String getFundingCurveName()>();

        $r9 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r8);

        d2 = virtualinvoke $r9.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $d5 = d2 * d1;

        d4 = $d5 * 1.0;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r4 = virtualinvoke r3.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Double[] getYValueParameterSensitivity(java.lang.Double)>($r10);

        $i0 = lengthof r4;

        r5 = newarray (double)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r4;

        if i2 >= $i1 goto label2;

        $r11 = r4[i2];

        $d6 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $d7 = $d6 * d4;

        r5[i2] = $d7;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r5;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod $r0;

        $r0 = new com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod: com.opengamma.analytics.financial.forex.method.ForexForwardPointsMethod INSTANCE> = $r0;

        return;
    }
}
