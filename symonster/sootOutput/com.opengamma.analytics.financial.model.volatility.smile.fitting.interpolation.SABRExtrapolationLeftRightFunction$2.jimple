class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2 extends com.opengamma.analytics.math.function.Function1D
{
    final com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$optionData;
    final double val$forward;
    final com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData val$sabrData;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction, com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption, double, com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption r2;
        double d0;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction;

        r2 := @parameter1: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption;

        d0 := @parameter2: double;

        r3 := @parameter3: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$optionData> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData val$sabrData> = r3;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2 r0;
        java.lang.Double r1, $r9;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction $r2;
        com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider $r3;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption $r4, $r5;
        double $d0, $d1;
        com.opengamma.analytics.math.function.Function1D $r6;
        com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData $r7;
        java.lang.Object $r8;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction this$0>;

        $r3 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction: com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider access$000(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction)>($r2);

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption val$optionData>;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption: com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption withStrike(double)>($d0);

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2: double val$forward>;

        $r6 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.volatility.smile.function.VolatilityFunctionProvider: com.opengamma.analytics.math.function.Function1D getVolatilityFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,double)>($r5, $d1);

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2: com.opengamma.analytics.financial.model.volatility.smile.function.SABRFormulaData val$sabrData>;

        $r8 = virtualinvoke $r6.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r7);

        $r9 = (java.lang.Double) $r8;

        return $r9;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SABRExtrapolationLeftRightFunction$2: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
