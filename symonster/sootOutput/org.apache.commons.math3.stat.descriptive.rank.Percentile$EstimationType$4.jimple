final enum class org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4 extends org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType
{

    void <init>(java.lang.String, int, java.lang.String)
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4 r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType: void <init>(java.lang.String,int,java.lang.String,org.apache.commons.math3.stat.descriptive.rank.Percentile$1)>(r1, i0, r2, null);

        return;
    }

    protected double index(double, int)
    {
        org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4 r0;
        double d0, d1, $d2, $d3, $d4, $d5;
        int i0, $i1;

        r0 := @this: org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        $d2 = (double) i0;

        d1 = 0.5 / $d2;

        $i1 = staticinvoke <java.lang.Double: int compare(double,double)>(d0, d1);

        if $i1 > 0 goto label1;

        $d5 = 0.0;

        goto label2;

     label1:
        $d3 = (double) i0;

        $d4 = $d3 * d0;

        $d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double rint(double)>($d4);

     label2:
        return $d5;
    }
}
