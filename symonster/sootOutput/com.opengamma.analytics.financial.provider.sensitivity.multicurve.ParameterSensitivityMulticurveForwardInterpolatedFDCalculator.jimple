public class com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator extends java.lang.Object
{
    private final com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator;
    private final double _shift;

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Calculator");

        r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator> = r1;

        r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: double _shift> = d0;

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward r2, r79, r92, r104;
        com.opengamma.util.money.MultipleCurrencyAmount r3, r4, r80, r81, r93, r94, r105, r106;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r6, r69;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r7, $r21, $r41, $r61;
        java.lang.Object $r8, $r10, $r12, $r17, $r22, $r24, $r26, $r30, $r35, $r42, $r44, $r46, $r50, $r55, $r62, $r64;
        java.util.ArrayList $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        double[] $r11, $r15, $r16, $r19, $r23, $r29, $r33, $r34, $r39, $r43, $r49, $r53, $r54, $r59, $r63, r77, r90, r102;
        com.opengamma.util.tuple.Pair $r13, $r31, $r51;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r14, $r32, $r52;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r18, $r38, $r58, r75, r88, r100;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r20, $r40, $r60;
        com.opengamma.util.money.Currency $r25, $r45, $r65, $r68, r72;
        com.opengamma.analytics.math.curve.DoublesCurve $r27, $r28, $r47, $r48, r99;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r36, $r56, r74, r87;
        java.lang.String $r37, $r57, r82, r95, r107;
        com.opengamma.util.money.CurrencyAmount[] $r66;
        com.opengamma.util.money.CurrencyAmount $r67;
        java.util.Set r70, r83, r96;
        java.util.Iterator r71, r84, r97;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r73, r86;
        double[][] r76, r89, r101;
        com.opengamma.analytics.financial.instrument.index.IndexON r85;
        com.opengamma.analytics.financial.instrument.index.IborIndex r98;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward;

        $r6 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>()>();

        r69 = $r6;

        $r7 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r8 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r7, r2);

        r3 = (com.opengamma.util.money.MultipleCurrencyAmount) $r8;

        r4 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>(-1.0);

        i0 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: int size()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $r66 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.CurrencyAmount[] getCurrencyAmounts()>();

        $r67 = $r66[i1];

        $r68 = virtualinvoke $r67.<com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.Currency getCurrency()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r68);

        i1 = i1 + 1;

        goto label01;

     label02:
        r70 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: java.util.Set getCurrencies()>();

        r71 = interfaceinvoke r70.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r71.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r46 = interfaceinvoke r71.<java.util.Iterator: java.lang.Object next()>();

        r72 = (com.opengamma.util.money.Currency) $r46;

        r73 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.util.money.Currency)>(r72);

        $z6 = r73 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z6, "Curve should be a YieldCurve");

        r74 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r73;

        $r47 = virtualinvoke r74.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z7 = $r47 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "Yield curve should be based on InterpolatedDoublesCurve");

        $r48 = virtualinvoke r74.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r75 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r48;

        $r49 = virtualinvoke r75.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i2 = lengthof $r49;

        r76 = newmultiarray (double)[i0][i2];

        i3 = 0;

     label04:
        if i3 >= i2 goto label07;

        $r54 = virtualinvoke r75.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r55 = virtualinvoke $r54.<java.lang.Object: java.lang.Object clone()>();

        r77 = (double[]) $r55;

        $d13 = r77[i3];

        $d12 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: double _shift>;

        $d14 = $d13 + $d12;

        r77[i3] = $d14;

        $r56 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r57 = virtualinvoke r75.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r58 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r59 = virtualinvoke r75.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r60 = virtualinvoke r75.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r58.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r59, r77, $r60, 1);

        specialinvoke $r56.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r57, $r58);

        r79 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward withDiscountFactor(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r72, $r56);

        $r61 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r62 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r61, r79);

        r80 = (com.opengamma.util.money.MultipleCurrencyAmount) $r62;

        r81 = virtualinvoke r80.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i4 = 0;

     label05:
        if i4 >= i0 goto label06;

        $r63 = r76[i4];

        $r64 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i4);

        $r65 = (com.opengamma.util.money.Currency) $r64;

        $d15 = virtualinvoke r81.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r65);

        $d16 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: double _shift>;

        $d17 = $d15 / $d16;

        $r63[i3] = $d17;

        i4 = i4 + 1;

        goto label05;

     label06:
        i3 = i3 + 1;

        goto label04;

     label07:
        r82 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: java.lang.String getName(com.opengamma.util.money.Currency)>(r72);

        i5 = 0;

     label08:
        if i5 >= i0 goto label09;

        $r50 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i5);

        $r51 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r82, $r50);

        $r52 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r53 = r76[i5];

        specialinvoke $r52.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r53);

        r69 = virtualinvoke r69.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r51, $r52);

        i5 = i5 + 1;

        goto label08;

     label09:
        goto label03;

     label10:
        r83 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: java.util.Set getIndexesON()>();

        r84 = interfaceinvoke r83.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r84.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r26 = interfaceinvoke r84.<java.util.Iterator: java.lang.Object next()>();

        r85 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r26;

        r86 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IndexON)>(r85);

        $z4 = r86 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "Curve should be a YieldCurve");

        r87 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r86;

        $r27 = virtualinvoke r87.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z5 = $r27 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "Yield curve should be based on InterpolatedDoublesCurve");

        $r28 = virtualinvoke r87.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r88 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r28;

        $r29 = virtualinvoke r88.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i6 = lengthof $r29;

        r89 = newmultiarray (double)[i0][i6];

        i7 = 0;

     label12:
        if i7 >= i6 goto label15;

        $r34 = virtualinvoke r88.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r35 = virtualinvoke $r34.<java.lang.Object: java.lang.Object clone()>();

        r90 = (double[]) $r35;

        $d7 = r90[i7];

        $d6 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: double _shift>;

        $d8 = $d7 + $d6;

        r90[i7] = $d8;

        $r36 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r37 = virtualinvoke r88.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r38 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r39 = virtualinvoke r88.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r40 = virtualinvoke r88.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r38.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r39, r90, $r40, 1);

        specialinvoke $r36.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r37, $r38);

        r92 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward withForward(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r85, $r36);

        $r41 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r42 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r41, r92);

        r93 = (com.opengamma.util.money.MultipleCurrencyAmount) $r42;

        r94 = virtualinvoke r93.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i8 = 0;

     label13:
        if i8 >= i0 goto label14;

        $r43 = r89[i8];

        $r44 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i8);

        $r45 = (com.opengamma.util.money.Currency) $r44;

        $d9 = virtualinvoke r94.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r45);

        $d10 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: double _shift>;

        $d11 = $d9 / $d10;

        $r43[i7] = $d11;

        i8 = i8 + 1;

        goto label13;

     label14:
        i7 = i7 + 1;

        goto label12;

     label15:
        r95 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)>(r85);

        i9 = 0;

     label16:
        if i9 >= i0 goto label17;

        $r30 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i9);

        $r31 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r95, $r30);

        $r32 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r33 = r89[i9];

        specialinvoke $r32.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r33);

        r69 = virtualinvoke r69.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r31, $r32);

        i9 = i9 + 1;

        goto label16;

     label17:
        goto label11;

     label18:
        r96 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: java.util.Set getIndexesIbor()>();

        r97 = interfaceinvoke r96.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z2 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label26;

        $r10 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>();

        r98 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r10;

        r99 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: com.opengamma.analytics.math.curve.DoublesCurve getCurve(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r98);

        $z3 = r99 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "Forward curve should be based on InterpolatedDoublesCurve");

        r100 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) r99;

        $r11 = virtualinvoke r100.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i10 = lengthof $r11;

        r101 = newmultiarray (double)[i0][i10];

        i11 = 0;

     label20:
        if i11 >= i10 goto label23;

        $r16 = virtualinvoke r100.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.Object clone()>();

        r102 = (double[]) $r17;

        $d1 = r102[i11];

        $d0 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: double _shift>;

        $d2 = $d1 + $d0;

        r102[i11] = $d2;

        $r18 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r19 = virtualinvoke r100.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r20 = virtualinvoke r100.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r18.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r19, r102, $r20, 1);

        r104 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward withForward(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.math.curve.DoublesCurve)>(r98, $r18);

        $r21 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r22 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r21, r104);

        r105 = (com.opengamma.util.money.MultipleCurrencyAmount) $r22;

        r106 = virtualinvoke r105.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>(r4);

        i12 = 0;

     label21:
        if i12 >= i0 goto label22;

        $r23 = r101[i12];

        $r24 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i12);

        $r25 = (com.opengamma.util.money.Currency) $r24;

        $d3 = virtualinvoke r106.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r25);

        $d4 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveForwardInterpolatedFDCalculator: double _shift>;

        $d5 = $d3 / $d4;

        $r23[i11] = $d5;

        i12 = i12 + 1;

        goto label21;

     label22:
        i11 = i11 + 1;

        goto label20;

     label23:
        r107 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderForward: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r98);

        i13 = 0;

     label24:
        if i13 >= i0 goto label25;

        $r12 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i13);

        $r13 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r107, $r12);

        $r14 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r15 = r101[i13];

        specialinvoke $r14.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r15);

        r69 = virtualinvoke r69.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r13, $r14);

        i13 = i13 + 1;

        goto label24;

     label25:
        goto label19;

     label26:
        return r69;
    }
}
