public class com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator extends java.lang.Object implements com.opengamma.analytics.math.function.Function
{
    private final double _returnPeriodsPerYear;
    private final com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _expectedExcessReturnCalculator;
    private final com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _standardDeviationCalculator;

    public void <init>(double, com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator, com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator)
    {
        com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator r0;
        double d0;
        com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator r1, r2;
        byte $b0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator;

        r2 := @parameter2: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "expected excess return calculator");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "standard deviation calculator");

        r0.<com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator: double _returnPeriodsPerYear> = d0;

        r0.<com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _expectedExcessReturnCalculator> = r1;

        r0.<com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _standardDeviationCalculator> = r2;

        return;
    }

    public transient java.lang.Double evaluate(com.opengamma.timeseries.DoubleTimeSeries[])
    {
        com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator r0;
        com.opengamma.timeseries.DoubleTimeSeries[] r1, $r7, $r10;
        com.opengamma.timeseries.DoubleTimeSeries r2, $r3, $r4, $r5, $r6;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator $r8, $r11;
        java.lang.Double $r9, $r12, $r13;

        r0 := @this: com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator;

        r1 := @parameter0: com.opengamma.timeseries.DoubleTimeSeries[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "ts array");

        $r3 = r1[0];

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testNotNullOrEmpty(com.opengamma.timeseries.DoubleTimeSeries)>($r3);

        $r4 = r1[1];

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testNotNullOrEmpty(com.opengamma.timeseries.DoubleTimeSeries)>($r4);

        $r6 = r1[0];

        $r5 = r1[1];

        r2 = interfaceinvoke $r6.<com.opengamma.timeseries.DoubleTimeSeries: com.opengamma.timeseries.DoubleTimeSeries subtract(com.opengamma.timeseries.DoubleTimeSeries)>($r5);

        $r8 = r0.<com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _expectedExcessReturnCalculator>;

        $r7 = newarray (com.opengamma.timeseries.DoubleTimeSeries)[1];

        $r7[0] = r2;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator: java.lang.Double evaluate(com.opengamma.timeseries.DoubleTimeSeries[])>($r7);

        $d2 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $d3 = r0.<com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator: double _returnPeriodsPerYear>;

        d0 = $d2 * $d3;

        $r11 = r0.<com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator: com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator _standardDeviationCalculator>;

        $r10 = newarray (com.opengamma.timeseries.DoubleTimeSeries)[1];

        $r10[0] = r2;

        $r12 = virtualinvoke $r11.<com.opengamma.analytics.financial.timeseries.analysis.DoubleTimeSeriesStatisticsCalculator: java.lang.Double evaluate(com.opengamma.timeseries.DoubleTimeSeries[])>($r10);

        $d4 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d5 = r0.<com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator: double _returnPeriodsPerYear>;

        $d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d5);

        d1 = $d4 * $d6;

        $d7 = d0 / d1;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        return $r13;
    }

    public volatile java.lang.Object evaluate(java.lang.Object[])
    {
        com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator r0;
        java.lang.Object[] r1;
        com.opengamma.timeseries.DoubleTimeSeries[] $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (com.opengamma.timeseries.DoubleTimeSeries[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.riskreward.SharpeRatioCalculator: java.lang.Double evaluate(com.opengamma.timeseries.DoubleTimeSeries[])>($r2);

        return $r3;
    }
}
