class com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1 extends java.lang.Object implements com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction
{
    final com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition this$0;

    void <init>(com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1 r0;
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition;

        r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double getPayoff(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1 r0;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        java.lang.Double r2;
        org.threeten.bp.ZonedDateTime r3, $r6;
        double d0, d1, d2, $d3, $d4, $d5;
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition $r4, $r7, $r8;
        com.opengamma.util.time.Expiry $r5;
        boolean $z0, $z1;
        java.lang.Boolean $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        r2 := @parameter1: java.lang.Double;

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: org.threeten.bp.ZonedDateTime getDate()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition this$0>;

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: com.opengamma.util.time.Expiry getStartTime()>();

        $r6 = virtualinvoke $r5.<com.opengamma.util.time.Expiry: org.threeten.bp.ZonedDateTime getExpiry()>();

        $z0 = virtualinvoke r3.<org.threeten.bp.ZonedDateTime: boolean isBefore(org.threeten.bp.chrono.ChronoZonedDateTime)>($r6);

        if $z0 == 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot get strike before start time: it has not been defined");

        throw $r10;

     label1:
        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getSpot()>();

        $r7 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition this$0>;

        d1 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: double getAlpha()>();

        d2 = d0 * d1;

        $r8 = r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition this$0>;

        $r9 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition: java.lang.Boolean isCall()>();

        $z1 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $d4 = d0 - d2;

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d4);

        goto label3;

     label2:
        $d3 = d2 - d0;

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d3);

     label3:
        return $d5;
    }

    public volatile double getPayoff(java.lang.Object, java.lang.Double)
    {
        com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1 r0;
        java.lang.Object r1;
        java.lang.Double r2;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle $r3;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Double;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle) r1;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.ForwardStartOptionDefinition$1: double getPayoff(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle,java.lang.Double)>($r3, r2);

        return $d0;
    }
}
