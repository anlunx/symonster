public final class org.jcp.xml.dsig.internal.dom.DOMXMLObject extends org.jcp.xml.dsig.internal.dom.DOMStructure implements javax.xml.crypto.dsig.XMLObject
{
    private final java.lang.String id;
    private final java.lang.String mimeType;
    private final java.lang.String encoding;
    private final java.util.List content;

    public void <init>(java.util.List, java.lang.String, java.lang.String, java.lang.String)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLObject r0;
        java.util.List r1, $r6, $r8;
        java.lang.String r2, r3, r4, $r15;
        int i0, i1;
        boolean $z0, $z1;
        java.util.ArrayList $r7;
        java.lang.Object $r9;
        java.lang.ClassCastException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r6 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.util.List content> = $r6;

        goto label6;

     label2:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        i1 = 0;

        i0 = interfaceinvoke $r7.<java.util.List: int size()>();

     label3:
        if i1 >= i0 goto label5;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $z1 = $r9 instanceof javax.xml.crypto.XMLStructure;

        if $z1 != 0 goto label4;

        $r10 = new java.lang.ClassCastException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content[");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not a valid type");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.ClassCastException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.util.List content> = $r8;

     label6:
        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String id> = r2;

        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String mimeType> = r3;

        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String encoding> = r4;

        return;
    }

    public void <init>(org.w3c.dom.Element, javax.xml.crypto.XMLCryptoContext, java.security.Provider) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLObject r0;
        org.w3c.dom.Element r1, r8;
        javax.xml.crypto.XMLCryptoContext r2;
        java.security.Provider r3;
        org.w3c.dom.Attr r4;
        org.w3c.dom.NodeList r5;
        int i0, i2;
        org.w3c.dom.Node r7;
        java.lang.String r9, $r10, $r11, $r19;
        java.util.ArrayList $r12;
        boolean $z0, $z2, $z3, $z4;
        java.util.List $r13, $r14;
        short $s1;
        javax.xml.crypto.dom.DOMStructure $r15;
        org.jcp.xml.dsig.internal.dom.DOMX509Data $r16;
        org.jcp.xml.dsig.internal.dom.DOMSignatureProperties $r17;
        org.jcp.xml.dsig.internal.dom.DOMManifest $r18;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: javax.xml.crypto.XMLCryptoContext;

        r3 := @parameter2: java.security.Provider;

        specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMStructure: void <init>()>();

        $r10 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r1, "Encoding");

        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String encoding> = $r10;

        r4 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(null, "Id");

        if r4 == null goto label01;

        $r19 = interfaceinvoke r4.<org.w3c.dom.Attr: java.lang.String getValue()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String id> = $r19;

        interfaceinvoke r1.<org.w3c.dom.Element: void setIdAttributeNode(org.w3c.dom.Attr,boolean)>(r4, 1);

        goto label02;

     label01:
        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String id> = null;

     label02:
        $r11 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String)>(r1, "MimeType");

        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String mimeType> = $r11;

        r5 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i0 = interfaceinvoke r5.<org.w3c.dom.NodeList: int getLength()>();

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>(i0);

        i2 = 0;

     label03:
        if i2 >= i0 goto label08;

        r7 = interfaceinvoke r5.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $s1 = interfaceinvoke r7.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 != 1 goto label06;

        r8 = (org.w3c.dom.Element) r7;

        r9 = interfaceinvoke r8.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("Manifest");

        if $z2 == 0 goto label04;

        $r18 = new org.jcp.xml.dsig.internal.dom.DOMManifest;

        specialinvoke $r18.<org.jcp.xml.dsig.internal.dom.DOMManifest: void <init>(org.w3c.dom.Element,javax.xml.crypto.XMLCryptoContext,java.security.Provider)>(r8, r2, r3);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label07;

     label04:
        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("SignatureProperties");

        if $z3 == 0 goto label05;

        $r17 = new org.jcp.xml.dsig.internal.dom.DOMSignatureProperties;

        specialinvoke $r17.<org.jcp.xml.dsig.internal.dom.DOMSignatureProperties: void <init>(org.w3c.dom.Element)>(r8);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label07;

     label05:
        $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("X509Data");

        if $z4 == 0 goto label06;

        $r16 = new org.jcp.xml.dsig.internal.dom.DOMX509Data;

        specialinvoke $r16.<org.jcp.xml.dsig.internal.dom.DOMX509Data: void <init>(org.w3c.dom.Element)>(r8);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label07;

     label06:
        $r15 = new javax.xml.crypto.dom.DOMStructure;

        specialinvoke $r15.<javax.xml.crypto.dom.DOMStructure: void <init>(org.w3c.dom.Node)>(r7);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r15);

     label07:
        i2 = i2 + 1;

        goto label03;

     label08:
        $z0 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        $r14 = <java.util.Collections: java.util.List EMPTY_LIST>;

        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.util.List content> = $r14;

        goto label10;

     label09:
        $r13 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r12);

        r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.util.List content> = $r13;

     label10:
        return;
    }

    public java.util.List getContent()
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLObject r0;
        java.util.List $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.util.List content>;

        return $r1;
    }

    public java.lang.String getId()
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLObject r0;
        java.lang.String $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String id>;

        return $r1;
    }

    public java.lang.String getMimeType()
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLObject r0;
        java.lang.String $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String mimeType>;

        return $r1;
    }

    public java.lang.String getEncoding()
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLObject r0;
        java.lang.String $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String encoding>;

        return $r1;
    }

    public void marshal(org.w3c.dom.Node, java.lang.String, javax.xml.crypto.dom.DOMCryptoContext) throws javax.xml.crypto.MarshalException
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLObject r0;
        org.w3c.dom.Node r1, $r15;
        java.lang.String r2, $r8, $r9, $r10;
        javax.xml.crypto.dom.DOMCryptoContext r3;
        org.w3c.dom.Document r4;
        org.w3c.dom.Element r5;
        int i0, i1;
        javax.xml.crypto.XMLStructure r6;
        javax.xml.crypto.dom.DOMStructure r7;
        java.util.List $r11, $r13;
        java.lang.Object $r14;
        boolean $z0;
        org.jcp.xml.dsig.internal.dom.DOMStructure $r16;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.xml.crypto.dom.DOMCryptoContext;

        r4 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>(r1);

        r5 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: org.w3c.dom.Element createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)>(r4, "Object", "http://www.w3.org/2000/09/xmldsig#", r2);

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String id>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttributeID(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r5, "Id", $r8);

        $r9 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String mimeType>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r5, "MimeType", $r9);

        $r10 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String encoding>;

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void setAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r5, "Encoding", $r10);

        i1 = 0;

        $r11 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.util.List content>;

        i0 = interfaceinvoke $r11.<java.util.List: int size()>();

     label1:
        if i1 >= i0 goto label4;

        $r13 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.util.List content>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (javax.xml.crypto.XMLStructure) $r14;

        $z0 = r6 instanceof org.jcp.xml.dsig.internal.dom.DOMStructure;

        if $z0 == 0 goto label2;

        $r16 = (org.jcp.xml.dsig.internal.dom.DOMStructure) r6;

        virtualinvoke $r16.<org.jcp.xml.dsig.internal.dom.DOMStructure: void marshal(org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)>(r5, r2, r3);

        goto label3;

     label2:
        r7 = (javax.xml.crypto.dom.DOMStructure) r6;

        $r15 = virtualinvoke r7.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: void appendChild(org.w3c.dom.Node,org.w3c.dom.Node)>(r5, $r15);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r5);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLObject r0;
        java.lang.Object r1;
        javax.xml.crypto.dsig.XMLObject r2;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15;
        java.util.List $r10;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z3 = r1 instanceof javax.xml.crypto.dsig.XMLObject;

        if $z3 != 0 goto label02;

        return 0;

     label02:
        r2 = (javax.xml.crypto.dsig.XMLObject) r1;

        $r3 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String id>;

        if $r3 != null goto label04;

        $r13 = interfaceinvoke r2.<javax.xml.crypto.dsig.XMLObject: java.lang.String getId()>();

        if $r13 != null goto label03;

        $z5 = 1;

        goto label05;

     label03:
        $z5 = 0;

        goto label05;

     label04:
        $r4 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String id>;

        $r5 = interfaceinvoke r2.<javax.xml.crypto.dsig.XMLObject: java.lang.String getId()>();

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label05:
        z0 = $z5;

        $r14 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String encoding>;

        if $r14 != null goto label07;

        $r12 = interfaceinvoke r2.<javax.xml.crypto.dsig.XMLObject: java.lang.String getEncoding()>();

        if $r12 != null goto label06;

        $z6 = 1;

        goto label08;

     label06:
        $z6 = 0;

        goto label08;

     label07:
        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String encoding>;

        $r7 = interfaceinvoke r2.<javax.xml.crypto.dsig.XMLObject: java.lang.String getEncoding()>();

        $z6 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label08:
        z1 = $z6;

        $r15 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String mimeType>;

        if $r15 != null goto label10;

        $r11 = interfaceinvoke r2.<javax.xml.crypto.dsig.XMLObject: java.lang.String getMimeType()>();

        if $r11 != null goto label09;

        $z7 = 1;

        goto label11;

     label09:
        $z7 = 0;

        goto label11;

     label10:
        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.lang.String mimeType>;

        $r9 = interfaceinvoke r2.<javax.xml.crypto.dsig.XMLObject: java.lang.String getMimeType()>();

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label11:
        if z0 == 0 goto label12;

        if z1 == 0 goto label12;

        if $z7 == 0 goto label12;

        $r10 = interfaceinvoke r2.<javax.xml.crypto.dsig.XMLObject: java.util.List getContent()>();

        $z4 = specialinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: boolean equalsContent(java.util.List)>($r10);

        if $z4 == 0 goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        return $z8;
    }

    private boolean equalsContent(java.util.List)
    {
        org.jcp.xml.dsig.internal.dom.DOMXMLObject r0;
        java.util.List r1, $r6, $r8;
        int i0, $i1, $i2, i3;
        javax.xml.crypto.XMLStructure r2, r3;
        org.w3c.dom.Node r4, r5;
        java.lang.Object $r7, $r9;
        boolean $z0, $z1, $z2, $z3;
        javax.xml.crypto.dom.DOMStructure $r10, $r11;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMXMLObject;

        r1 := @parameter0: java.util.List;

        $r6 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.util.List content>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i2 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 == $i2 goto label1;

        return 0;

     label1:
        i3 = 0;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

     label2:
        if i3 >= i0 goto label7;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        r2 = (javax.xml.crypto.XMLStructure) $r7;

        $r8 = r0.<org.jcp.xml.dsig.internal.dom.DOMXMLObject: java.util.List content>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (javax.xml.crypto.XMLStructure) $r9;

        $z0 = r2 instanceof javax.xml.crypto.dom.DOMStructure;

        if $z0 == 0 goto label5;

        $z2 = r3 instanceof javax.xml.crypto.dom.DOMStructure;

        if $z2 != 0 goto label3;

        return 0;

     label3:
        $r10 = (javax.xml.crypto.dom.DOMStructure) r2;

        r4 = virtualinvoke $r10.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        $r11 = (javax.xml.crypto.dom.DOMStructure) r3;

        r5 = virtualinvoke $r11.<javax.xml.crypto.dom.DOMStructure: org.w3c.dom.Node getNode()>();

        $z3 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils: boolean nodesEqual(org.w3c.dom.Node,org.w3c.dom.Node)>(r5, r4);

        if $z3 != 0 goto label4;

        return 0;

     label4:
        goto label6;

     label5:
        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label6;

        return 0;

     label6:
        i3 = i3 + 1;

        goto label2;

     label7:
        return 1;
    }
}
