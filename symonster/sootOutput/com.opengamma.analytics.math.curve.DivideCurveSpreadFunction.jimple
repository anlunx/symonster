public class com.opengamma.analytics.math.curve.DivideCurveSpreadFunction extends java.lang.Object implements com.opengamma.analytics.math.curve.CurveSpreadFunction
{
    public static final java.lang.String NAME;
    private static final com.opengamma.analytics.math.curve.DivideCurveSpreadFunction INSTANCE;

    public static com.opengamma.analytics.math.curve.CurveSpreadFunction getInstance()
    {
        com.opengamma.analytics.math.curve.DivideCurveSpreadFunction $r0;

        $r0 = <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction: com.opengamma.analytics.math.curve.DivideCurveSpreadFunction INSTANCE>;

        return $r0;
    }

    public void <init>()
    {
        com.opengamma.analytics.math.curve.DivideCurveSpreadFunction r0;

        r0 := @this: com.opengamma.analytics.math.curve.DivideCurveSpreadFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient com.opengamma.analytics.math.function.Function evaluate(com.opengamma.analytics.math.curve.Curve[])
    {
        com.opengamma.analytics.math.curve.DivideCurveSpreadFunction r0;
        com.opengamma.analytics.math.curve.Curve[] r1;
        com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1 $r4;

        r0 := @this: com.opengamma.analytics.math.curve.DivideCurveSpreadFunction;

        r1 := @parameter0: com.opengamma.analytics.math.curve.Curve[];

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] notEmpty(java.lang.Object[],java.lang.String)>(r1, "curves");

        $r4 = new com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1;

        specialinvoke $r4.<com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1: void <init>(com.opengamma.analytics.math.curve.DivideCurveSpreadFunction,com.opengamma.analytics.math.curve.Curve[])>(r0, r1);

        return $r4;
    }

    public java.lang.String getOperationName()
    {
        com.opengamma.analytics.math.curve.DivideCurveSpreadFunction r0;

        r0 := @this: com.opengamma.analytics.math.curve.DivideCurveSpreadFunction;

        return "/";
    }

    public java.lang.String getName()
    {
        com.opengamma.analytics.math.curve.DivideCurveSpreadFunction r0;

        r0 := @this: com.opengamma.analytics.math.curve.DivideCurveSpreadFunction;

        return "/";
    }

    public volatile java.lang.Object evaluate(java.lang.Object[])
    {
        com.opengamma.analytics.math.curve.DivideCurveSpreadFunction r0;
        java.lang.Object[] r1;
        com.opengamma.analytics.math.curve.Curve[] $r2;
        com.opengamma.analytics.math.function.Function $r3;

        r0 := @this: com.opengamma.analytics.math.curve.DivideCurveSpreadFunction;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (com.opengamma.analytics.math.curve.Curve[]) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.curve.DivideCurveSpreadFunction: com.opengamma.analytics.math.function.Function evaluate(com.opengamma.analytics.math.curve.Curve[])>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.DivideCurveSpreadFunction $r0;

        <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction: java.lang.String NAME> = "/";

        $r0 = new com.opengamma.analytics.math.curve.DivideCurveSpreadFunction;

        specialinvoke $r0.<com.opengamma.analytics.math.curve.DivideCurveSpreadFunction: void <init>()>();

        <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction: com.opengamma.analytics.math.curve.DivideCurveSpreadFunction INSTANCE> = $r0;

        return;
    }
}
