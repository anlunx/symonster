public class org.apache.commons.math3.ode.FirstOrderConverter extends java.lang.Object implements org.apache.commons.math3.ode.FirstOrderDifferentialEquations
{
    private final org.apache.commons.math3.ode.SecondOrderDifferentialEquations equations;
    private final int dimension;
    private final double[] z;
    private final double[] zDot;
    private final double[] zDDot;

    public void <init>(org.apache.commons.math3.ode.SecondOrderDifferentialEquations)
    {
        org.apache.commons.math3.ode.FirstOrderConverter r0;
        org.apache.commons.math3.ode.SecondOrderDifferentialEquations r1;
        int $i0, $i1, $i2, $i3;
        double[] $r2, $r3, $r4;

        r0 := @this: org.apache.commons.math3.ode.FirstOrderConverter;

        r1 := @parameter0: org.apache.commons.math3.ode.SecondOrderDifferentialEquations;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.ode.FirstOrderConverter: org.apache.commons.math3.ode.SecondOrderDifferentialEquations equations> = r1;

        $i0 = interfaceinvoke r1.<org.apache.commons.math3.ode.SecondOrderDifferentialEquations: int getDimension()>();

        r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension> = $i0;

        $i1 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        $r2 = newarray (double)[$i1];

        r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] z> = $r2;

        $i2 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        $r3 = newarray (double)[$i2];

        r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] zDot> = $r3;

        $i3 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        $r4 = newarray (double)[$i3];

        r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] zDDot> = $r4;

        return;
    }

    public int getDimension()
    {
        org.apache.commons.math3.ode.FirstOrderConverter r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.math3.ode.FirstOrderConverter;

        $i0 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        $i1 = 2 * $i0;

        return $i1;
    }

    public void computeDerivatives(double, double[], double[])
    {
        org.apache.commons.math3.ode.FirstOrderConverter r0;
        double d0;
        double[] r1, r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.commons.math3.ode.SecondOrderDifferentialEquations $r8;

        r0 := @this: org.apache.commons.math3.ode.FirstOrderConverter;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        $r3 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] z>;

        $i0 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i0);

        $i2 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        $r4 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] zDot>;

        $i1 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i2, $r4, 0, $i1);

        $r8 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: org.apache.commons.math3.ode.SecondOrderDifferentialEquations equations>;

        $r7 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] z>;

        $r6 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] zDot>;

        $r5 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] zDDot>;

        interfaceinvoke $r8.<org.apache.commons.math3.ode.SecondOrderDifferentialEquations: void computeSecondDerivatives(double,double[],double[],double[])>(d0, $r7, $r6, $r5);

        $r9 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] zDot>;

        $i3 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r2, 0, $i3);

        $r10 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: double[] zDDot>;

        $i5 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        $i4 = r0.<org.apache.commons.math3.ode.FirstOrderConverter: int dimension>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r2, $i5, $i4);

        return;
    }
}
