public class org.apache.commons.math3.optimization.fitting.HarmonicFitter extends org.apache.commons.math3.optimization.fitting.CurveFitter
{

    public void <init>(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)
    {
        org.apache.commons.math3.optimization.fitting.HarmonicFitter r0;
        org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer r1;

        r0 := @this: org.apache.commons.math3.optimization.fitting.HarmonicFitter;

        r1 := @parameter0: org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer;

        specialinvoke r0.<org.apache.commons.math3.optimization.fitting.CurveFitter: void <init>(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)>(r1);

        return;
    }

    public double[] fit(double[])
    {
        org.apache.commons.math3.optimization.fitting.HarmonicFitter r0;
        double[] r1, $r3;
        org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric $r2;

        r0 := @this: org.apache.commons.math3.optimization.fitting.HarmonicFitter;

        r1 := @parameter0: double[];

        $r2 = new org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric;

        specialinvoke $r2.<org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.math3.optimization.fitting.HarmonicFitter: double[] fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])>($r2, r1);

        return $r3;
    }

    public double[] fit()
    {
        org.apache.commons.math3.optimization.fitting.HarmonicFitter r0;
        org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser $r1;
        org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[] $r2;
        double[] $r3, $r4;

        r0 := @this: org.apache.commons.math3.optimization.fitting.HarmonicFitter;

        $r1 = new org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser;

        $r2 = virtualinvoke r0.<org.apache.commons.math3.optimization.fitting.HarmonicFitter: org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[] getObservations()>();

        specialinvoke $r1.<org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser: void <init>(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[])>($r2);

        $r3 = virtualinvoke $r1.<org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser: double[] guess()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.optimization.fitting.HarmonicFitter: double[] fit(double[])>($r3);

        return $r4;
    }
}
