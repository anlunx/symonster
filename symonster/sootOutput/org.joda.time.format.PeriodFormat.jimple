public class org.joda.time.format.PeriodFormat extends java.lang.Object
{
    private static final java.lang.String BUNDLE_NAME;
    private static final java.util.concurrent.ConcurrentMap FORMATTERS;

    protected void <init>()
    {
        org.joda.time.format.PeriodFormat r0;

        r0 := @this: org.joda.time.format.PeriodFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.joda.time.format.PeriodFormatter getDefault()
    {
        java.util.Locale $r0;
        org.joda.time.format.PeriodFormatter $r1;

        $r0 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter wordBased(java.util.Locale)>($r0);

        return $r1;
    }

    public static org.joda.time.format.PeriodFormatter wordBased()
    {
        java.util.Locale $r0;
        org.joda.time.format.PeriodFormatter $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter wordBased(java.util.Locale)>($r0);

        return $r1;
    }

    public static org.joda.time.format.PeriodFormatter wordBased(java.util.Locale)
    {
        java.util.Locale r0;
        org.joda.time.format.PeriodFormatter r2, $r6, $r7, r10;
        java.util.concurrent.ConcurrentMap $r3, $r8;
        java.lang.Object $r4, $r9;
        org.joda.time.format.PeriodFormat$DynamicWordBased $r5;

        r0 := @parameter0: java.util.Locale;

        $r3 = <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(r0);

        r10 = (org.joda.time.format.PeriodFormatter) $r4;

        if r10 != null goto label1;

        $r5 = new org.joda.time.format.PeriodFormat$DynamicWordBased;

        $r6 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter buildWordBased(java.util.Locale)>(r0);

        specialinvoke $r5.<org.joda.time.format.PeriodFormat$DynamicWordBased: void <init>(org.joda.time.format.PeriodFormatter)>($r6);

        $r7 = new org.joda.time.format.PeriodFormatter;

        specialinvoke $r7.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r5, $r5, r0, null);

        r10 = $r7;

        $r8 = <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS>;

        $r9 = interfaceinvoke $r8.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r0, $r7);

        r2 = (org.joda.time.format.PeriodFormatter) $r9;

        if r2 == null goto label1;

        r10 = r2;

     label1:
        return r10;
    }

    private static org.joda.time.format.PeriodFormatter buildWordBased(java.util.Locale)
    {
        java.util.Locale r0;
        java.util.ResourceBundle r1;
        boolean $z0;
        org.joda.time.format.PeriodFormatter $r2, $r3;

        r0 := @parameter0: java.util.Locale;

        r1 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.joda.time.format.messages", r0);

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>(r1, "PeriodFormat.regex.separator");

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter buildRegExFormatter(java.util.ResourceBundle,java.util.Locale)>(r1, r0);

        return $r3;

     label1:
        $r2 = staticinvoke <org.joda.time.format.PeriodFormat: org.joda.time.format.PeriodFormatter buildNonRegExFormatter(java.util.ResourceBundle,java.util.Locale)>(r1, r0);

        return $r2;
    }

    private static org.joda.time.format.PeriodFormatter buildRegExFormatter(java.util.ResourceBundle, java.util.Locale)
    {
        java.util.ResourceBundle r0;
        java.util.Locale r1;
        java.lang.String[] r2, $r62, $r64, $r67, $r69, $r72, $r74, $r77, $r79, $r82, $r84, $r87, $r89, $r92, $r94, $r97, $r99;
        java.lang.String r3, $r7, $r8, $r10, $r11, $r14, $r15, $r17, $r18, $r21, $r22, $r24, $r25, $r28, $r29, $r31, $r32, $r35, $r36, $r38, $r39, $r42, $r43, $r45, $r46, $r49, $r50, $r52, $r53, $r56, $r57, $r61, $r63, $r66, $r68, $r71, $r73, $r76, $r78, $r81, $r83, $r86, $r88, $r91, $r93, $r96, $r98;
        org.joda.time.format.PeriodFormatterBuilder $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.joda.time.format.PeriodFormatter $r59, $r60;

        r0 := @parameter0: java.util.ResourceBundle;

        r1 := @parameter1: java.util.Locale;

        r2 = staticinvoke <org.joda.time.format.PeriodFormat: java.lang.String[] retrieveVariants(java.util.ResourceBundle)>(r0);

        r3 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.regex.separator");

        $r5 = new org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>();

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>();

        $z0 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>(r0, "PeriodFormat.years.regex");

        if $z0 == 0 goto label01;

        $r96 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years.regex");

        $r97 = virtualinvoke $r96.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        $r98 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years.list");

        $r99 = virtualinvoke $r98.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r97, $r99);

        goto label02;

     label01:
        $r7 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.year");

        $r8 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r7, $r8);

     label02:
        $r10 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r11 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r10, $r11, r2);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMonths()>();

        $z1 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>(r0, "PeriodFormat.months.regex");

        if $z1 == 0 goto label03;

        $r91 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months.regex");

        $r92 = virtualinvoke $r91.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        $r93 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months.list");

        $r94 = virtualinvoke $r93.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r92, $r94);

        goto label04;

     label03:
        $r14 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.month");

        $r15 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r14, $r15);

     label04:
        $r17 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r18 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r17, $r18, r2);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>();

        $z2 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>(r0, "PeriodFormat.weeks.regex");

        if $z2 == 0 goto label05;

        $r86 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks.regex");

        $r87 = virtualinvoke $r86.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        $r88 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks.list");

        $r89 = virtualinvoke $r88.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r87, $r89);

        goto label06;

     label05:
        $r21 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.week");

        $r22 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r21, $r22);

     label06:
        $r24 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r25 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r24, $r25, r2);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>();

        $z3 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>(r0, "PeriodFormat.days.regex");

        if $z3 == 0 goto label07;

        $r81 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days.regex");

        $r82 = virtualinvoke $r81.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        $r83 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days.list");

        $r84 = virtualinvoke $r83.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r82, $r84);

        goto label08;

     label07:
        $r28 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.day");

        $r29 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r28, $r29);

     label08:
        $r31 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r32 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r31, $r32, r2);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>();

        $z4 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>(r0, "PeriodFormat.hours.regex");

        if $z4 == 0 goto label09;

        $r76 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours.regex");

        $r77 = virtualinvoke $r76.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        $r78 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours.list");

        $r79 = virtualinvoke $r78.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r77, $r79);

        goto label10;

     label09:
        $r35 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hour");

        $r36 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r35, $r36);

     label10:
        $r38 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r39 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r38, $r39, r2);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>();

        $z5 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>(r0, "PeriodFormat.minutes.regex");

        if $z5 == 0 goto label11;

        $r71 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes.regex");

        $r72 = virtualinvoke $r71.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        $r73 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes.list");

        $r74 = virtualinvoke $r73.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r72, $r74);

        goto label12;

     label11:
        $r42 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minute");

        $r43 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r42, $r43);

     label12:
        $r45 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r46 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r45, $r46, r2);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeconds()>();

        $z6 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>(r0, "PeriodFormat.seconds.regex");

        if $z6 == 0 goto label13;

        $r66 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds.regex");

        $r67 = virtualinvoke $r66.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        $r68 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds.list");

        $r69 = virtualinvoke $r68.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r67, $r69);

        goto label14;

     label13:
        $r49 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.second");

        $r50 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r49, $r50);

     label14:
        $r52 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r53 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r52, $r53, r2);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMillis()>();

        $z7 = staticinvoke <org.joda.time.format.PeriodFormat: boolean containsKey(java.util.ResourceBundle,java.lang.String)>(r0, "PeriodFormat.milliseconds.regex");

        if $z7 == 0 goto label15;

        $r61 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds.regex");

        $r62 = virtualinvoke $r61.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        $r63 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds.list");

        $r64 = virtualinvoke $r63.<java.lang.String: java.lang.String[] split(java.lang.String)>(r3);

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String[],java.lang.String[])>($r62, $r64);

        goto label16;

     label15:
        $r56 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.millisecond");

        $r57 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds");

        virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r56, $r57);

     label16:
        $r59 = virtualinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        $r60 = virtualinvoke $r59.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodFormatter withLocale(java.util.Locale)>(r1);

        return $r60;
    }

    private static org.joda.time.format.PeriodFormatter buildNonRegExFormatter(java.util.ResourceBundle, java.util.Locale)
    {
        java.util.ResourceBundle r0;
        java.util.Locale r1;
        java.lang.String[] r2;
        org.joda.time.format.PeriodFormatterBuilder $r3, $r4, $r7, $r10, $r11, $r14, $r17, $r18, $r21, $r24, $r25, $r28, $r31, $r32, $r35, $r38, $r39, $r42, $r45, $r46, $r49, $r52, $r53, $r56;
        java.lang.String $r5, $r6, $r8, $r9, $r12, $r13, $r15, $r16, $r19, $r20, $r22, $r23, $r26, $r27, $r29, $r30, $r33, $r34, $r36, $r37, $r40, $r41, $r43, $r44, $r47, $r48, $r50, $r51, $r54, $r55;
        org.joda.time.format.PeriodFormatter $r57, $r58;

        r0 := @parameter0: java.util.ResourceBundle;

        r1 := @parameter1: java.util.Locale;

        r2 = staticinvoke <org.joda.time.format.PeriodFormat: java.lang.String[] retrieveVariants(java.util.ResourceBundle)>(r0);

        $r3 = new org.joda.time.format.PeriodFormatterBuilder;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendYears()>();

        $r5 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.year");

        $r6 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.years");

        $r7 = virtualinvoke $r4.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r5, $r6);

        $r8 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r9 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r10 = virtualinvoke $r7.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r8, $r9, r2);

        $r11 = virtualinvoke $r10.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMonths()>();

        $r12 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.month");

        $r13 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.months");

        $r14 = virtualinvoke $r11.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r12, $r13);

        $r15 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r16 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r17 = virtualinvoke $r14.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r15, $r16, r2);

        $r18 = virtualinvoke $r17.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendWeeks()>();

        $r19 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.week");

        $r20 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.weeks");

        $r21 = virtualinvoke $r18.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r19, $r20);

        $r22 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r23 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r24 = virtualinvoke $r21.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r22, $r23, r2);

        $r25 = virtualinvoke $r24.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendDays()>();

        $r26 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.day");

        $r27 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.days");

        $r28 = virtualinvoke $r25.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r26, $r27);

        $r29 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r30 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r31 = virtualinvoke $r28.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r29, $r30, r2);

        $r32 = virtualinvoke $r31.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendHours()>();

        $r33 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hour");

        $r34 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.hours");

        $r35 = virtualinvoke $r32.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r33, $r34);

        $r36 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r37 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r38 = virtualinvoke $r35.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r36, $r37, r2);

        $r39 = virtualinvoke $r38.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMinutes()>();

        $r40 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minute");

        $r41 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.minutes");

        $r42 = virtualinvoke $r39.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r40, $r41);

        $r43 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r44 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r45 = virtualinvoke $r42.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r43, $r44, r2);

        $r46 = virtualinvoke $r45.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeconds()>();

        $r47 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.second");

        $r48 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.seconds");

        $r49 = virtualinvoke $r46.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r47, $r48);

        $r50 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspace");

        $r51 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.spaceandspace");

        $r52 = virtualinvoke $r49.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSeparator(java.lang.String,java.lang.String,java.lang.String[])>($r50, $r51, r2);

        $r53 = virtualinvoke $r52.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendMillis()>();

        $r54 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.millisecond");

        $r55 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.milliseconds");

        $r56 = virtualinvoke $r53.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatterBuilder appendSuffix(java.lang.String,java.lang.String)>($r54, $r55);

        $r57 = virtualinvoke $r56.<org.joda.time.format.PeriodFormatterBuilder: org.joda.time.format.PeriodFormatter toFormatter()>();

        $r58 = virtualinvoke $r57.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodFormatter withLocale(java.util.Locale)>(r1);

        return $r58;
    }

    private static java.lang.String[] retrieveVariants(java.util.ResourceBundle)
    {
        java.util.ResourceBundle r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.util.ResourceBundle;

        $r1 = newarray (java.lang.String)[4];

        $r2 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.space");

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.comma");

        $r1[1] = $r3;

        $r4 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commandand");

        $r1[2] = $r4;

        $r5 = virtualinvoke r0.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("PeriodFormat.commaspaceand");

        $r1[3] = $r5;

        return $r1;
    }

    private static boolean containsKey(java.util.ResourceBundle, java.lang.String)
    {
        java.util.ResourceBundle r0;
        java.lang.String r1, $r4;
        java.util.Enumeration r2;
        boolean $z0, $z1;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.ResourceBundle;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<java.util.ResourceBundle: java.util.Enumeration getKeys()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (java.lang.String) $r3;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        <org.joda.time.format.PeriodFormat: java.lang.String BUNDLE_NAME> = "org.joda.time.format.messages";

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <org.joda.time.format.PeriodFormat: java.util.concurrent.ConcurrentMap FORMATTERS> = $r0;

        return;
    }
}
