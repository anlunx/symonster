class org.apache.commons.math3.primes.SmallPrimes extends java.lang.Object
{
    public static final int[] PRIMES;
    public static final int PRIMES_LAST;

    private void <init>()
    {
        org.apache.commons.math3.primes.SmallPrimes r0;

        r0 := @this: org.apache.commons.math3.primes.SmallPrimes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int smallTrialDivision(int, java.util.List)
    {
        java.util.List r0;
        int[] r1;
        int i0, i1, $i2, i3, i4;
        java.lang.Integer $r2;

        i3 := @parameter0: int;

        r0 := @parameter1: java.util.List;

        r1 = <org.apache.commons.math3.primes.SmallPrimes: int[] PRIMES>;

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        i1 = r1[i4];

     label2:
        $i2 = i3 % i1;

        if 0 != $i2 goto label3;

        i3 = i3 / i1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label2;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return i3;
    }

    public static int boundedTrialDivision(int, int, java.util.List)
    {
        int i0, $i1, $i2, $i3, i4, i5, i6;
        java.util.List r0;
        java.lang.Integer $r1, $r2, $r3;

        i4 := @parameter0: int;

        i0 := @parameter1: int;

        r0 := @parameter2: java.util.List;

        $i1 = <org.apache.commons.math3.primes.SmallPrimes: int PRIMES_LAST>;

        i5 = $i1 + 2;

     label1:
        if i5 > i0 goto label4;

        $i2 = i4 % i5;

        if 0 != $i2 goto label2;

        i4 = i4 / i5;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label4;

     label2:
        i6 = i5 + 4;

        $i3 = i4 % i6;

        if 0 != $i3 goto label3;

        i4 = i4 / i6;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label4;

     label3:
        i5 = i6 + 2;

        goto label1;

     label4:
        if i4 == 1 goto label5;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r1);

     label5:
        return i4;
    }

    public static java.util.List trialDivision(int)
    {
        int i0, i2, i3;
        java.util.ArrayList $r1;
        double $d0, $d1;

        i2 := @parameter0: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(32);

        i3 = staticinvoke <org.apache.commons.math3.primes.SmallPrimes: int smallTrialDivision(int,java.util.List)>(i2, $r1);

        if 1 != i3 goto label1;

        return $r1;

     label1:
        $d0 = (double) i3;

        $d1 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d0);

        i0 = (int) $d1;

        staticinvoke <org.apache.commons.math3.primes.SmallPrimes: int boundedTrialDivision(int,int,java.util.List)>(i3, i0, $r1);

        return $r1;
    }

    public static boolean millerRabinPrimeTest(int)
    {
        int i0, i1, i2, i3, $i7, $i9, i15, i16, i17;
        java.math.BigInteger r0, r1, r2, r3;
        long l4, $l5, $l6, $l8, $l10, $l11, $l12, $l13;
        int[] $r4;
        byte b14;

        i0 := @parameter0: int;

        i1 = i0 - 1;

        i2 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>(i1);

        i3 = i1 >> i2;

        b14 = 1;

        if i0 < 2047 goto label1;

        b14 = 2;

     label1:
        if i0 < 1373653 goto label2;

        b14 = 3;

     label2:
        if i0 < 25326001 goto label3;

        b14 = 4;

     label3:
        $l5 = (long) i3;

        r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l5);

        $l6 = (long) i0;

        r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l6);

        i15 = 0;

     label4:
        if i15 >= b14 goto label9;

        $r4 = <org.apache.commons.math3.primes.SmallPrimes: int[] PRIMES>;

        $i7 = $r4[i15];

        $l8 = (long) $i7;

        r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l8);

        r3 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r0, r1);

        i16 = virtualinvoke r3.<java.math.BigInteger: int intValue()>();

        if 1 == i16 goto label8;

        if i16 == i1 goto label8;

        i17 = 1;

     label5:
        $i9 = i2 - 1;

        if i17 > $i9 goto label7;

        if i1 == i16 goto label7;

        $l11 = (long) i16;

        $l10 = (long) i16;

        l4 = $l11 * $l10;

        $l12 = (long) i0;

        $l13 = l4 % $l12;

        i16 = (int) $l13;

        if 1 != i16 goto label6;

        return 0;

     label6:
        i17 = i17 + 1;

        goto label5;

     label7:
        if i1 == i16 goto label8;

        return 0;

     label8:
        i15 = i15 + 1;

        goto label4;

     label9:
        return 1;
    }

    static void <clinit>()
    {
        int[] $r0, $r1, $r2;
        int $i0, $i1, $i2;

        $r0 = newarray (int)[512];

        $r0[0] = 2;

        $r0[1] = 3;

        $r0[2] = 5;

        $r0[3] = 7;

        $r0[4] = 11;

        $r0[5] = 13;

        $r0[6] = 17;

        $r0[7] = 19;

        $r0[8] = 23;

        $r0[9] = 29;

        $r0[10] = 31;

        $r0[11] = 37;

        $r0[12] = 41;

        $r0[13] = 43;

        $r0[14] = 47;

        $r0[15] = 53;

        $r0[16] = 59;

        $r0[17] = 61;

        $r0[18] = 67;

        $r0[19] = 71;

        $r0[20] = 73;

        $r0[21] = 79;

        $r0[22] = 83;

        $r0[23] = 89;

        $r0[24] = 97;

        $r0[25] = 101;

        $r0[26] = 103;

        $r0[27] = 107;

        $r0[28] = 109;

        $r0[29] = 113;

        $r0[30] = 127;

        $r0[31] = 131;

        $r0[32] = 137;

        $r0[33] = 139;

        $r0[34] = 149;

        $r0[35] = 151;

        $r0[36] = 157;

        $r0[37] = 163;

        $r0[38] = 167;

        $r0[39] = 173;

        $r0[40] = 179;

        $r0[41] = 181;

        $r0[42] = 191;

        $r0[43] = 193;

        $r0[44] = 197;

        $r0[45] = 199;

        $r0[46] = 211;

        $r0[47] = 223;

        $r0[48] = 227;

        $r0[49] = 229;

        $r0[50] = 233;

        $r0[51] = 239;

        $r0[52] = 241;

        $r0[53] = 251;

        $r0[54] = 257;

        $r0[55] = 263;

        $r0[56] = 269;

        $r0[57] = 271;

        $r0[58] = 277;

        $r0[59] = 281;

        $r0[60] = 283;

        $r0[61] = 293;

        $r0[62] = 307;

        $r0[63] = 311;

        $r0[64] = 313;

        $r0[65] = 317;

        $r0[66] = 331;

        $r0[67] = 337;

        $r0[68] = 347;

        $r0[69] = 349;

        $r0[70] = 353;

        $r0[71] = 359;

        $r0[72] = 367;

        $r0[73] = 373;

        $r0[74] = 379;

        $r0[75] = 383;

        $r0[76] = 389;

        $r0[77] = 397;

        $r0[78] = 401;

        $r0[79] = 409;

        $r0[80] = 419;

        $r0[81] = 421;

        $r0[82] = 431;

        $r0[83] = 433;

        $r0[84] = 439;

        $r0[85] = 443;

        $r0[86] = 449;

        $r0[87] = 457;

        $r0[88] = 461;

        $r0[89] = 463;

        $r0[90] = 467;

        $r0[91] = 479;

        $r0[92] = 487;

        $r0[93] = 491;

        $r0[94] = 499;

        $r0[95] = 503;

        $r0[96] = 509;

        $r0[97] = 521;

        $r0[98] = 523;

        $r0[99] = 541;

        $r0[100] = 547;

        $r0[101] = 557;

        $r0[102] = 563;

        $r0[103] = 569;

        $r0[104] = 571;

        $r0[105] = 577;

        $r0[106] = 587;

        $r0[107] = 593;

        $r0[108] = 599;

        $r0[109] = 601;

        $r0[110] = 607;

        $r0[111] = 613;

        $r0[112] = 617;

        $r0[113] = 619;

        $r0[114] = 631;

        $r0[115] = 641;

        $r0[116] = 643;

        $r0[117] = 647;

        $r0[118] = 653;

        $r0[119] = 659;

        $r0[120] = 661;

        $r0[121] = 673;

        $r0[122] = 677;

        $r0[123] = 683;

        $r0[124] = 691;

        $r0[125] = 701;

        $r0[126] = 709;

        $r0[127] = 719;

        $r0[128] = 727;

        $r0[129] = 733;

        $r0[130] = 739;

        $r0[131] = 743;

        $r0[132] = 751;

        $r0[133] = 757;

        $r0[134] = 761;

        $r0[135] = 769;

        $r0[136] = 773;

        $r0[137] = 787;

        $r0[138] = 797;

        $r0[139] = 809;

        $r0[140] = 811;

        $r0[141] = 821;

        $r0[142] = 823;

        $r0[143] = 827;

        $r0[144] = 829;

        $r0[145] = 839;

        $r0[146] = 853;

        $r0[147] = 857;

        $r0[148] = 859;

        $r0[149] = 863;

        $r0[150] = 877;

        $r0[151] = 881;

        $r0[152] = 883;

        $r0[153] = 887;

        $r0[154] = 907;

        $r0[155] = 911;

        $r0[156] = 919;

        $r0[157] = 929;

        $r0[158] = 937;

        $r0[159] = 941;

        $r0[160] = 947;

        $r0[161] = 953;

        $r0[162] = 967;

        $r0[163] = 971;

        $r0[164] = 977;

        $r0[165] = 983;

        $r0[166] = 991;

        $r0[167] = 997;

        $r0[168] = 1009;

        $r0[169] = 1013;

        $r0[170] = 1019;

        $r0[171] = 1021;

        $r0[172] = 1031;

        $r0[173] = 1033;

        $r0[174] = 1039;

        $r0[175] = 1049;

        $r0[176] = 1051;

        $r0[177] = 1061;

        $r0[178] = 1063;

        $r0[179] = 1069;

        $r0[180] = 1087;

        $r0[181] = 1091;

        $r0[182] = 1093;

        $r0[183] = 1097;

        $r0[184] = 1103;

        $r0[185] = 1109;

        $r0[186] = 1117;

        $r0[187] = 1123;

        $r0[188] = 1129;

        $r0[189] = 1151;

        $r0[190] = 1153;

        $r0[191] = 1163;

        $r0[192] = 1171;

        $r0[193] = 1181;

        $r0[194] = 1187;

        $r0[195] = 1193;

        $r0[196] = 1201;

        $r0[197] = 1213;

        $r0[198] = 1217;

        $r0[199] = 1223;

        $r0[200] = 1229;

        $r0[201] = 1231;

        $r0[202] = 1237;

        $r0[203] = 1249;

        $r0[204] = 1259;

        $r0[205] = 1277;

        $r0[206] = 1279;

        $r0[207] = 1283;

        $r0[208] = 1289;

        $r0[209] = 1291;

        $r0[210] = 1297;

        $r0[211] = 1301;

        $r0[212] = 1303;

        $r0[213] = 1307;

        $r0[214] = 1319;

        $r0[215] = 1321;

        $r0[216] = 1327;

        $r0[217] = 1361;

        $r0[218] = 1367;

        $r0[219] = 1373;

        $r0[220] = 1381;

        $r0[221] = 1399;

        $r0[222] = 1409;

        $r0[223] = 1423;

        $r0[224] = 1427;

        $r0[225] = 1429;

        $r0[226] = 1433;

        $r0[227] = 1439;

        $r0[228] = 1447;

        $r0[229] = 1451;

        $r0[230] = 1453;

        $r0[231] = 1459;

        $r0[232] = 1471;

        $r0[233] = 1481;

        $r0[234] = 1483;

        $r0[235] = 1487;

        $r0[236] = 1489;

        $r0[237] = 1493;

        $r0[238] = 1499;

        $r0[239] = 1511;

        $r0[240] = 1523;

        $r0[241] = 1531;

        $r0[242] = 1543;

        $r0[243] = 1549;

        $r0[244] = 1553;

        $r0[245] = 1559;

        $r0[246] = 1567;

        $r0[247] = 1571;

        $r0[248] = 1579;

        $r0[249] = 1583;

        $r0[250] = 1597;

        $r0[251] = 1601;

        $r0[252] = 1607;

        $r0[253] = 1609;

        $r0[254] = 1613;

        $r0[255] = 1619;

        $r0[256] = 1621;

        $r0[257] = 1627;

        $r0[258] = 1637;

        $r0[259] = 1657;

        $r0[260] = 1663;

        $r0[261] = 1667;

        $r0[262] = 1669;

        $r0[263] = 1693;

        $r0[264] = 1697;

        $r0[265] = 1699;

        $r0[266] = 1709;

        $r0[267] = 1721;

        $r0[268] = 1723;

        $r0[269] = 1733;

        $r0[270] = 1741;

        $r0[271] = 1747;

        $r0[272] = 1753;

        $r0[273] = 1759;

        $r0[274] = 1777;

        $r0[275] = 1783;

        $r0[276] = 1787;

        $r0[277] = 1789;

        $r0[278] = 1801;

        $r0[279] = 1811;

        $r0[280] = 1823;

        $r0[281] = 1831;

        $r0[282] = 1847;

        $r0[283] = 1861;

        $r0[284] = 1867;

        $r0[285] = 1871;

        $r0[286] = 1873;

        $r0[287] = 1877;

        $r0[288] = 1879;

        $r0[289] = 1889;

        $r0[290] = 1901;

        $r0[291] = 1907;

        $r0[292] = 1913;

        $r0[293] = 1931;

        $r0[294] = 1933;

        $r0[295] = 1949;

        $r0[296] = 1951;

        $r0[297] = 1973;

        $r0[298] = 1979;

        $r0[299] = 1987;

        $r0[300] = 1993;

        $r0[301] = 1997;

        $r0[302] = 1999;

        $r0[303] = 2003;

        $r0[304] = 2011;

        $r0[305] = 2017;

        $r0[306] = 2027;

        $r0[307] = 2029;

        $r0[308] = 2039;

        $r0[309] = 2053;

        $r0[310] = 2063;

        $r0[311] = 2069;

        $r0[312] = 2081;

        $r0[313] = 2083;

        $r0[314] = 2087;

        $r0[315] = 2089;

        $r0[316] = 2099;

        $r0[317] = 2111;

        $r0[318] = 2113;

        $r0[319] = 2129;

        $r0[320] = 2131;

        $r0[321] = 2137;

        $r0[322] = 2141;

        $r0[323] = 2143;

        $r0[324] = 2153;

        $r0[325] = 2161;

        $r0[326] = 2179;

        $r0[327] = 2203;

        $r0[328] = 2207;

        $r0[329] = 2213;

        $r0[330] = 2221;

        $r0[331] = 2237;

        $r0[332] = 2239;

        $r0[333] = 2243;

        $r0[334] = 2251;

        $r0[335] = 2267;

        $r0[336] = 2269;

        $r0[337] = 2273;

        $r0[338] = 2281;

        $r0[339] = 2287;

        $r0[340] = 2293;

        $r0[341] = 2297;

        $r0[342] = 2309;

        $r0[343] = 2311;

        $r0[344] = 2333;

        $r0[345] = 2339;

        $r0[346] = 2341;

        $r0[347] = 2347;

        $r0[348] = 2351;

        $r0[349] = 2357;

        $r0[350] = 2371;

        $r0[351] = 2377;

        $r0[352] = 2381;

        $r0[353] = 2383;

        $r0[354] = 2389;

        $r0[355] = 2393;

        $r0[356] = 2399;

        $r0[357] = 2411;

        $r0[358] = 2417;

        $r0[359] = 2423;

        $r0[360] = 2437;

        $r0[361] = 2441;

        $r0[362] = 2447;

        $r0[363] = 2459;

        $r0[364] = 2467;

        $r0[365] = 2473;

        $r0[366] = 2477;

        $r0[367] = 2503;

        $r0[368] = 2521;

        $r0[369] = 2531;

        $r0[370] = 2539;

        $r0[371] = 2543;

        $r0[372] = 2549;

        $r0[373] = 2551;

        $r0[374] = 2557;

        $r0[375] = 2579;

        $r0[376] = 2591;

        $r0[377] = 2593;

        $r0[378] = 2609;

        $r0[379] = 2617;

        $r0[380] = 2621;

        $r0[381] = 2633;

        $r0[382] = 2647;

        $r0[383] = 2657;

        $r0[384] = 2659;

        $r0[385] = 2663;

        $r0[386] = 2671;

        $r0[387] = 2677;

        $r0[388] = 2683;

        $r0[389] = 2687;

        $r0[390] = 2689;

        $r0[391] = 2693;

        $r0[392] = 2699;

        $r0[393] = 2707;

        $r0[394] = 2711;

        $r0[395] = 2713;

        $r0[396] = 2719;

        $r0[397] = 2729;

        $r0[398] = 2731;

        $r0[399] = 2741;

        $r0[400] = 2749;

        $r0[401] = 2753;

        $r0[402] = 2767;

        $r0[403] = 2777;

        $r0[404] = 2789;

        $r0[405] = 2791;

        $r0[406] = 2797;

        $r0[407] = 2801;

        $r0[408] = 2803;

        $r0[409] = 2819;

        $r0[410] = 2833;

        $r0[411] = 2837;

        $r0[412] = 2843;

        $r0[413] = 2851;

        $r0[414] = 2857;

        $r0[415] = 2861;

        $r0[416] = 2879;

        $r0[417] = 2887;

        $r0[418] = 2897;

        $r0[419] = 2903;

        $r0[420] = 2909;

        $r0[421] = 2917;

        $r0[422] = 2927;

        $r0[423] = 2939;

        $r0[424] = 2953;

        $r0[425] = 2957;

        $r0[426] = 2963;

        $r0[427] = 2969;

        $r0[428] = 2971;

        $r0[429] = 2999;

        $r0[430] = 3001;

        $r0[431] = 3011;

        $r0[432] = 3019;

        $r0[433] = 3023;

        $r0[434] = 3037;

        $r0[435] = 3041;

        $r0[436] = 3049;

        $r0[437] = 3061;

        $r0[438] = 3067;

        $r0[439] = 3079;

        $r0[440] = 3083;

        $r0[441] = 3089;

        $r0[442] = 3109;

        $r0[443] = 3119;

        $r0[444] = 3121;

        $r0[445] = 3137;

        $r0[446] = 3163;

        $r0[447] = 3167;

        $r0[448] = 3169;

        $r0[449] = 3181;

        $r0[450] = 3187;

        $r0[451] = 3191;

        $r0[452] = 3203;

        $r0[453] = 3209;

        $r0[454] = 3217;

        $r0[455] = 3221;

        $r0[456] = 3229;

        $r0[457] = 3251;

        $r0[458] = 3253;

        $r0[459] = 3257;

        $r0[460] = 3259;

        $r0[461] = 3271;

        $r0[462] = 3299;

        $r0[463] = 3301;

        $r0[464] = 3307;

        $r0[465] = 3313;

        $r0[466] = 3319;

        $r0[467] = 3323;

        $r0[468] = 3329;

        $r0[469] = 3331;

        $r0[470] = 3343;

        $r0[471] = 3347;

        $r0[472] = 3359;

        $r0[473] = 3361;

        $r0[474] = 3371;

        $r0[475] = 3373;

        $r0[476] = 3389;

        $r0[477] = 3391;

        $r0[478] = 3407;

        $r0[479] = 3413;

        $r0[480] = 3433;

        $r0[481] = 3449;

        $r0[482] = 3457;

        $r0[483] = 3461;

        $r0[484] = 3463;

        $r0[485] = 3467;

        $r0[486] = 3469;

        $r0[487] = 3491;

        $r0[488] = 3499;

        $r0[489] = 3511;

        $r0[490] = 3517;

        $r0[491] = 3527;

        $r0[492] = 3529;

        $r0[493] = 3533;

        $r0[494] = 3539;

        $r0[495] = 3541;

        $r0[496] = 3547;

        $r0[497] = 3557;

        $r0[498] = 3559;

        $r0[499] = 3571;

        $r0[500] = 3581;

        $r0[501] = 3583;

        $r0[502] = 3593;

        $r0[503] = 3607;

        $r0[504] = 3613;

        $r0[505] = 3617;

        $r0[506] = 3623;

        $r0[507] = 3631;

        $r0[508] = 3637;

        $r0[509] = 3643;

        $r0[510] = 3659;

        $r0[511] = 3671;

        <org.apache.commons.math3.primes.SmallPrimes: int[] PRIMES> = $r0;

        $r2 = <org.apache.commons.math3.primes.SmallPrimes: int[] PRIMES>;

        $r1 = <org.apache.commons.math3.primes.SmallPrimes: int[] PRIMES>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        $i2 = $r2[$i1];

        <org.apache.commons.math3.primes.SmallPrimes: int PRIMES_LAST> = $i2;

        return;
    }
}
