public class com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity extends java.lang.Object
{
    private final java.util.LinkedHashMap _sensitivity;

    public void <init>()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0;
        java.util.LinkedHashMap $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity> = $r1;

        return;
    }

    public void <init>(java.util.LinkedHashMap)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0;
        java.util.LinkedHashMap r1, $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        r1 := @parameter0: java.util.LinkedHashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "sensitivity");

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r1);

        r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity> = $r3;

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity plus(java.lang.String, com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0, $r10;
        java.lang.String r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r2, $r14;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra r3;
        java.util.LinkedHashMap $r7, $r8;
        boolean $z0;
        java.lang.Object $r11;
        com.opengamma.analytics.math.matrix.Matrix $r12, $r13;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Name");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Matrix");

        r3 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra COMMONS_ALGEBRA>;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        $r8 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        virtualinvoke $r7.<java.util.LinkedHashMap: void putAll(java.util.Map)>($r8);

        $z0 = virtualinvoke $r7.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r12 = (com.opengamma.analytics.math.matrix.Matrix) $r11;

        $r13 = virtualinvoke r3.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix add(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r12, r2);

        $r14 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r13;

        virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14);

        goto label2;

     label1:
        virtualinvoke $r7.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        $r10 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        specialinvoke $r10.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: void <init>(java.util.LinkedHashMap)>($r7);

        return $r10;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0, r1, $r12;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra r2;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.lang.String r6;
        java.util.LinkedHashMap $r8, $r9;
        java.util.Map $r10;
        java.util.Set $r11;
        boolean $z0, $z1;
        java.lang.Object $r13, $r14, $r15, $r17, $r19;
        com.opengamma.analytics.math.matrix.Matrix $r18, $r20, $r21;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r22;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Sensitivity to add");

        r2 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra COMMONS_ALGEBRA>;

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        $r9 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        virtualinvoke $r8.<java.util.LinkedHashMap: void putAll(java.util.Map)>($r9);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.Map getSensitivities()>();

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r13;

        $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r14;

        $z1 = virtualinvoke $r8.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        $r17 = virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r6);

        $r18 = (com.opengamma.analytics.math.matrix.Matrix) $r17;

        $r19 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (com.opengamma.analytics.math.matrix.Matrix) $r19;

        $r21 = virtualinvoke r2.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix add(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>($r18, $r20);

        $r22 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r21;

        virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r22);

        goto label3;

     label2:
        $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r15);

     label3:
        goto label1;

     label4:
        $r12 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        specialinvoke $r12.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: void <init>(java.util.LinkedHashMap)>($r8);

        return $r12;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity multipliedBy(double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0, $r8;
        double d0;
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra r1;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.LinkedHashMap $r5, $r6, $r10;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r9, $r11;
        com.opengamma.analytics.math.matrix.Matrix $r12, $r13;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r14;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        d0 := @parameter0: double;

        r1 = <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory: com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra COMMONS_ALGEBRA>;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        $r6 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r9;

        $r10 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r11 = virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r4);

        $r12 = (com.opengamma.analytics.math.matrix.Matrix) $r11;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix scale(com.opengamma.analytics.math.matrix.Matrix,double)>($r12, d0);

        $r14 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r13;

        virtualinvoke $r5.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r14);

        goto label1;

     label2:
        $r8 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        specialinvoke $r8.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: void <init>(java.util.LinkedHashMap)>($r5);

        return $r8;
    }

    public java.util.Map getSensitivities()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        $r1 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0;
        java.lang.String r1;
        java.util.LinkedHashMap $r3;
        java.lang.Object $r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Name");

        $r3 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.opengamma.analytics.math.matrix.DoubleMatrix1D) $r4;

        return $r5;
    }

    public java.util.Set getAllNames()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0;
        java.util.LinkedHashMap $r1;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        $r1 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0;
        java.util.LinkedHashMap $r1;
        java.lang.String $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        $r1 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r2 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.String toString()>();

        return $r2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0;
        java.util.LinkedHashMap $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $i2 = virtualinvoke $r1.<java.util.LinkedHashMap: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.LinkedHashMap $r3, $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity) r1;

        $r4 = r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $r3 = r2.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: java.util.LinkedHashMap _sensitivity>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }
}
