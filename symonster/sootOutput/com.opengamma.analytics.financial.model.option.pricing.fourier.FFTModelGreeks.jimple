public class com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks extends java.lang.Object
{
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;
    private static final com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator LIMIT_CALCULATOR;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks r0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double[][] getGreeks(double, double, double, boolean, com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent, double, double, int, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, d60, d61;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent r1;
        int i0, i1, i2, i3, i4, i5, $i12;
        com.opengamma.analytics.math.function.Function1D r3;
        byte $b6, $b7, $b8, $b9, $b10, $b11, $b13, $b14, $b15;
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r4;
        java.lang.Double $r5;
        double[][] $r6;
        com.opengamma.analytics.financial.model.option.pricing.fourier.EuropeanCallFourierTransform $r7;
        com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator $r8;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        z0 := @parameter3: boolean;

        r1 := @parameter4: com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent;

        d3 := @parameter5: double;

        d4 := @parameter6: double;

        i0 := @parameter7: int;

        d5 := @parameter8: double;

        d6 := @parameter9: double;

        d7 := @parameter10: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "characteristic exponent");

        $b6 = d7 cmpl 0.0;

        if $b6 <= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "need tol > 0");

        $b7 = d6 cmpl 0.0;

        if $b7 == 0 goto label03;

        $b13 = d6 cmpl -1.0;

        if $b13 == 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "alpha cannot be -1 or 0");

        $b14 = d3 cmpg d0;

        if $b14 > 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z3, "need lowestStrike <= forward");

        $b8 = d4 cmpl d0;

        if $b8 < 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z4, "need highestStrike >= forward");

        $b9 = d5 cmpl 0.0;

        if $b9 <= 0 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z5, "need limitSigma > 0");

        $d13 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        d8 = d5 * $d13;

        $r4 = <com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        $d14 = d8 / 2.0;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d14);

        d9 = interfaceinvoke $r4.<com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution: double getCDF(java.lang.Object)>($r5);

        $b10 = d6 cmpl 0.0;

        if $b10 <= 0 goto label11;

        $d55 = 2.0 * d9;

        $d56 = $d55 - 1.0;

        $d57 = $d56 * d7;

        $d58 = staticinvoke <java.lang.Math: double log(double)>($d57);

        $d59 = neg $d58;

        d60 = $d59 / d6;

        goto label13;

     label11:
        $b11 = d6 cmpg -1.0;

        if $b11 >= 0 goto label12;

        $d50 = 2.0 * d9;

        $d51 = $d50 - 1.0;

        $d52 = $d51 * d7;

        $d53 = staticinvoke <java.lang.Math: double log(double)>($d52);

        $d54 = 1.0 + d6;

        d60 = $d53 / $d54;

        goto label13;

     label12:
        $d15 = 1.0 - d9;

        $d16 = 2.0 * $d15;

        $d17 = $d16 * d7;

        $d18 = staticinvoke <java.lang.Math: double log(double)>($d17);

        $d22 = neg $d18;

        $d21 = -1.0 / d6;

        $d19 = 1.0 + d6;

        $d20 = 1.0 / $d19;

        $d23 = staticinvoke <java.lang.Math: double max(double,double)>($d21, $d20);

        d60 = $d22 * $d23;

     label13:
        $r7 = new com.opengamma.analytics.financial.model.option.pricing.fourier.EuropeanCallFourierTransform;

        specialinvoke $r7.<com.opengamma.analytics.financial.model.option.pricing.fourier.EuropeanCallFourierTransform: void <init>(com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent)>(r1);

        r3 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.option.pricing.fourier.EuropeanCallFourierTransform: com.opengamma.analytics.math.function.Function1D getFunction(double)>(d2);

        $r8 = <com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator LIMIT_CALCULATOR>;

        d10 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator: double solve(com.opengamma.analytics.math.function.Function1D,double,double)>(r3, d6, d7);

        $b15 = d4 cmpl d3;

        if $b15 != 0 goto label14;

        d61 = 3.141592653589793 / d10;

        goto label15;

     label14:
        $d24 = d4 / d3;

        $d25 = staticinvoke <java.lang.Math: double log(double)>($d24);

        $i12 = i0 - 1;

        $d26 = (double) $i12;

        $d28 = $d25 / $d26;

        $d27 = 3.141592653589793 / d10;

        d61 = staticinvoke <java.lang.Math: double min(double,double)>($d28, $d27);

     label15:
        d11 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        $d29 = d60 / d61;

        $d30 = staticinvoke <java.lang.Math: double log(double)>($d29);

        $d31 = $d30 / d11;

        $d32 = staticinvoke <java.lang.Math: double ceil(double)>($d31);

        i1 = (int) $d32;

        $d33 = (double) i1;

        $d34 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d33);

        i2 = (int) $d34;

        $d35 = (double) i2;

        $d36 = 6.283185307179586 / $d35;

        d12 = $d36 / d61;

        $d38 = d10 * d61;

        $d37 = (double) i2;

        $d39 = $d38 * $d37;

        $d40 = $d39 / 2.0;

        $d41 = $d40 / 3.141592653589793;

        i3 = (int) $d41;

        $d42 = d0 / d3;

        $d43 = staticinvoke <java.lang.Math: double log(double)>($d42);

        $d44 = $d43 / d61;

        $d45 = staticinvoke <java.lang.Math: double ceil(double)>($d44);

        i4 = (int) $d45;

        $d46 = d4 / d0;

        $d47 = staticinvoke <java.lang.Math: double log(double)>($d46);

        $d48 = $d47 / d61;

        $d49 = staticinvoke <java.lang.Math: double ceil(double)>($d48);

        i5 = (int) $d49;

        $r6 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: double[][] getGreeks(double,double,double,boolean,com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent,int,int,double,double,int,int)>(d0, d1, d2, z0, r1, i4, i5, d6, d12, i2, i3);

        return $r6;
    }

    public double[][] getGreeks(double, double, double, boolean, com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent, int, int, double, double, int, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, d28, d29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i30, i31, i32, i33, i34, i35, i36;
        com.opengamma.analytics.math.function.Function1D r2;
        com.opengamma.analytics.math.number.ComplexNumber[][] r3, r4;
        double[][] r5;
        byte $b8, $b28, $b29;
        double[] $r6, $r9, $r12, $r13, $r16, $r19;
        com.opengamma.analytics.math.number.ComplexNumber[] $r7, $r10, $r14, $r17, $r20, $r21;
        com.opengamma.analytics.math.number.ComplexNumber $r8, $r11, $r15, $r18;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        z0 := @parameter3: boolean;

        r1 := @parameter4: com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        d3 := @parameter7: double;

        d4 := @parameter8: double;

        i2 := @parameter9: int;

        i3 := @parameter10: int;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "characteristic exponent");

        if i0 < 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "nStrikesBelowATM >= 0");

        if i1 < 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z2, "nStrikesAboveATM >= 0");

        $b8 = d3 cmpl 0.0;

        if $b8 == 0 goto label05;

        $b28 = d3 cmpl -1.0;

        if $b28 == 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z3, "alpha cannot be -1 or 0");

        $b29 = d4 cmpl 0.0;

        if $b29 <= 0 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z4, "need delta > 0");

        if i3 <= 0 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z5, "need m > 0");

        $i9 = 2 * i3;

        $i10 = $i9 - 1;

        if i2 < $i10 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z6, "need n > 2m-1");

        r2 = interfaceinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.fourier.MartingaleCharacteristicExponent: com.opengamma.analytics.math.function.Function1D getAdjointFunction(double)>(d2);

        $i11 = i2 % 2;

        if $i11 != 0 goto label13;

        $i30 = i2 / 2;

        goto label14;

     label13:
        $i12 = i2 + 1;

        $i30 = $i12 / 2;

     label14:
        i4 = $i30;

        $i13 = $i30 - 1;

        $i14 = neg $i13;

        $d7 = (double) $i14;

        d5 = $d7 * d4;

        r3 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: com.opengamma.analytics.math.number.ComplexNumber[][] getPaddedArrays(double,double,int,int,com.opengamma.analytics.math.function.Function1D,int)>(d3, d4, i2, i3, r2, $i30);

        i5 = lengthof r3;

        r4 = newarray (com.opengamma.analytics.math.number.ComplexNumber[])[i5];

        i31 = 0;

     label15:
        if i31 >= i5 goto label16;

        $r20 = r3[i31];

        $r21 = staticinvoke <com.opengamma.analytics.math.fft.JTransformsWrapper: com.opengamma.analytics.math.number.ComplexNumber[] transform1DComplex(com.opengamma.analytics.math.number.ComplexNumber[])>($r20);

        r4[i31] = $r21;

        i31 = i31 + 1;

        goto label15;

     label16:
        i32 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i0);

        $i15 = i2 - i4;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>($i15, i1);

        $i16 = 1 + i32;

        i7 = $i16 + i6;

        $i17 = i5 + 1;

        r5 = newmultiarray (double)[$i17][i7];

        $d9 = 6.283185307179586 / d4;

        $d8 = (double) i2;

        d6 = $d9 / $d8;

        i33 = 0;

     label17:
        if i33 >= i32 goto label20;

        $i22 = i33 - i32;

        $d19 = (double) $i22;

        d28 = $d19 * d6;

        $r13 = r5[0];

        $d20 = staticinvoke <java.lang.Math: double exp(double)>(d28);

        $d21 = d0 * $d20;

        $r13[i33] = $d21;

        $r16 = r5[1];

        $d22 = d1 * d0;

        $r14 = r4[0];

        $i23 = i33 + i2;

        $i24 = $i23 - i32;

        $r15 = $r14[$i24];

        $d23 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: double getReducedPrice(com.opengamma.analytics.math.number.ComplexNumber,double,double,double,double,boolean)>($r15, d3, d4, d28, d5, z0);

        $d24 = $d22 * $d23;

        $r16[i33] = $d24;

        i34 = 1;

     label18:
        if i34 >= i5 goto label19;

        $i25 = i34 + 1;

        $r19 = r5[$i25];

        $d25 = d1 * d0;

        $r17 = r4[i34];

        $i26 = i33 + i2;

        $i27 = $i26 - i32;

        $r18 = $r17[$i27];

        $d26 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: double getReducedGreek(com.opengamma.analytics.math.number.ComplexNumber,double,double,double,double)>($r18, d3, d4, d28, d5);

        $d27 = $d25 * $d26;

        $r19[i33] = $d27;

        i34 = i34 + 1;

        goto label18;

     label19:
        i33 = i33 + 1;

        goto label17;

     label20:
        i35 = i32;

     label21:
        if i35 >= i7 goto label24;

        $i18 = i35 - i32;

        $d10 = (double) $i18;

        d29 = $d10 * d6;

        $r6 = r5[0];

        $d11 = staticinvoke <java.lang.Math: double exp(double)>(d29);

        $d12 = d0 * $d11;

        $r6[i35] = $d12;

        $r9 = r5[1];

        $d13 = d1 * d0;

        $r7 = r4[0];

        $i19 = i35 - i32;

        $r8 = $r7[$i19];

        $d14 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: double getReducedPrice(com.opengamma.analytics.math.number.ComplexNumber,double,double,double,double,boolean)>($r8, d3, d4, d29, d5, z0);

        $d15 = $d13 * $d14;

        $r9[i35] = $d15;

        i36 = 1;

     label22:
        if i36 >= i5 goto label23;

        $i20 = i36 + 1;

        $r12 = r5[$i20];

        $d16 = d1 * d0;

        $r10 = r4[i36];

        $i21 = i35 - i32;

        $r11 = $r10[$i21];

        $d17 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: double getReducedGreek(com.opengamma.analytics.math.number.ComplexNumber,double,double,double,double)>($r11, d3, d4, d29, d5);

        $d18 = $d16 * $d17;

        $r12[i35] = $d18;

        i36 = i36 + 1;

        goto label22;

     label23:
        i35 = i35 + 1;

        goto label21;

     label24:
        return r5;
    }

    private com.opengamma.analytics.math.number.ComplexNumber[][] getPaddedArrays(double, double, int, int, com.opengamma.analytics.math.function.Function1D, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18;
        com.opengamma.analytics.math.function.Function1D r1;
        com.opengamma.analytics.math.number.ComplexNumber[][] r2;
        com.opengamma.analytics.math.number.ComplexNumber r3, $r4, $r7, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r20, $r21, $r24, $r25, $r27, $r29, r33, r34, r35, r36, r39, r40, r41;
        java.lang.Object $r5, $r8, $r14;
        com.opengamma.analytics.math.number.ComplexNumber[] $r6, $r12, $r18, $r19, $r22, $r23, $r26, $r28, $r30, r32, r38;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: com.opengamma.analytics.math.function.Function1D;

        i2 := @parameter5: int;

        $r4 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber MINUS_I>;

        $r5 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r4);

        $r6 = (com.opengamma.analytics.math.number.ComplexNumber[]) $r5;

        i3 = lengthof $r6;

        r2 = newmultiarray (com.opengamma.analytics.math.number.ComplexNumber)[i3][i0];

        i4 = i2 - i1;

        $i6 = i0 - i2;

        $i7 = $i6 + 1;

        i5 = $i7 - i1;

        i12 = 0;

     label01:
        if i12 >= i3 goto label06;

        i13 = 0;

     label02:
        if i13 >= i4 goto label03;

        $r30 = r2[i12];

        $r29 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber ZERO>;

        $r30[i13] = $r29;

        i13 = i13 + 1;

        goto label02;

     label03:
        i14 = i0 - i5;

     label04:
        if i14 >= i0 goto label05;

        $r28 = r2[i12];

        $r27 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber ZERO>;

        $r28[i14] = $r27;

        i14 = i14 + 1;

        goto label04;

     label05:
        i12 = i12 + 1;

        goto label01;

     label06:
        $r7 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d2 = 1.0 + d0;

        $d3 = neg $d2;

        specialinvoke $r7.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>(0.0, $d3);

        i15 = i2 - 1;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r7);

        r32 = (com.opengamma.analytics.math.number.ComplexNumber[]) $r8;

        $r9 = r32[0];

        r33 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber exp(com.opengamma.analytics.math.number.ComplexNumber)>($r9);

        $r10 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber MINUS_I>;

        $r11 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r10, $r7);

        r34 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r7, $r11);

        r35 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r33, r34);

        $r12 = r2[0];

        $r12[i15] = r35;

        i16 = 1;

     label07:
        if i16 >= i3 goto label08;

        $r25 = r32[i16];

        r36 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r35, $r25);

        $r26 = r2[i16];

        $r26[i15] = r36;

        i16 = i16 + 1;

        goto label07;

     label08:
        i17 = 1;

     label09:
        if i17 >= i1 goto label12;

        $r13 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d4 = (double) i17;

        $d7 = $d4 * d1;

        $d5 = 1.0 + d0;

        $d6 = neg $d5;

        specialinvoke $r13.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>($d7, $d6);

        $r14 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r13);

        r38 = (com.opengamma.analytics.math.number.ComplexNumber[]) $r14;

        $r15 = r38[0];

        r39 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber exp(com.opengamma.analytics.math.number.ComplexNumber)>($r15);

        $r16 = <com.opengamma.analytics.math.number.ComplexNumber: com.opengamma.analytics.math.number.ComplexNumber MINUS_I>;

        $r17 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber subtract(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r16, $r13);

        r40 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r13, $r17);

        r41 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber divide(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r39, r40);

        $r18 = r2[0];

        $i8 = i15 + i17;

        $r18[$i8] = r41;

        $r19 = r2[0];

        $i9 = i15 - i17;

        $r20 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber conjugate(com.opengamma.analytics.math.number.ComplexNumber)>(r41);

        $r19[$i9] = $r20;

        i18 = 1;

     label10:
        if i18 >= i3 goto label11;

        $r21 = r38[i18];

        r3 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>(r41, $r21);

        $r22 = r2[i18];

        $i10 = i15 + i17;

        $r22[$i10] = r3;

        $r23 = r2[i18];

        $i11 = i15 - i17;

        $r24 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber conjugate(com.opengamma.analytics.math.number.ComplexNumber)>(r3);

        $r23[$i11] = $r24;

        i18 = i18 + 1;

        goto label10;

     label11:
        i17 = i17 + 1;

        goto label09;

     label12:
        return r2;
    }

    private double getReducedPrice(com.opengamma.analytics.math.number.ComplexNumber, double, double, double, double, boolean)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, r2, $r3, $r4;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        boolean z0;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        z0 := @parameter5: boolean;

        $r3 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d5 = neg d0;

        $d8 = $d5 * d2;

        $d6 = neg d2;

        $d7 = $d6 * d3;

        specialinvoke $r3.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>($d8, $d7);

        $r4 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber exp(com.opengamma.analytics.math.number.ComplexNumber)>($r3);

        r2 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r4, r1);

        $d9 = virtualinvoke r2.<com.opengamma.analytics.math.number.ComplexNumber: double getReal()>();

        $d10 = d1 * $d9;

        $d11 = $d10 / 2.0;

        d4 = $d11 / 3.141592653589793;

        if z0 == 0 goto label3;

        $b2 = d0 cmpl 0.0;

        if $b2 <= 0 goto label1;

        return d4;

     label1:
        $b3 = d0 cmpg -1.0;

        if $b3 >= 0 goto label2;

        $d18 = d4 + 1.0;

        $d19 = staticinvoke <java.lang.Math: double exp(double)>(d2);

        $d20 = $d18 - $d19;

        return $d20;

     label2:
        $d17 = d4 + 1.0;

        return $d17;

     label3:
        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label4;

        $d14 = d4 - 1.0;

        $d15 = staticinvoke <java.lang.Math: double exp(double)>(d2);

        $d16 = $d14 + $d15;

        return $d16;

     label4:
        $b1 = d0 cmpg -1.0;

        if $b1 >= 0 goto label5;

        return d4;

     label5:
        $d12 = staticinvoke <java.lang.Math: double exp(double)>(d2);

        $d13 = d4 + $d12;

        return $d13;
    }

    private double getReducedGreek(com.opengamma.analytics.math.number.ComplexNumber, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks r0;
        com.opengamma.analytics.math.number.ComplexNumber r1, r2, $r3, $r4;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks;

        r1 := @parameter0: com.opengamma.analytics.math.number.ComplexNumber;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        $r3 = new com.opengamma.analytics.math.number.ComplexNumber;

        $d5 = neg d0;

        $d8 = $d5 * d2;

        $d6 = neg d2;

        $d7 = $d6 * d3;

        specialinvoke $r3.<com.opengamma.analytics.math.number.ComplexNumber: void <init>(double,double)>($d8, $d7);

        $r4 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber exp(com.opengamma.analytics.math.number.ComplexNumber)>($r3);

        r2 = staticinvoke <com.opengamma.analytics.math.ComplexMathUtils: com.opengamma.analytics.math.number.ComplexNumber multiply(com.opengamma.analytics.math.number.ComplexNumber,com.opengamma.analytics.math.number.ComplexNumber)>($r4, r1);

        $d9 = virtualinvoke r2.<com.opengamma.analytics.math.number.ComplexNumber: double getReal()>();

        $d10 = d1 * $d9;

        $d11 = $d10 / 2.0;

        d4 = $d11 / 3.141592653589793;

        return d4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r0;
        com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator $r1;

        $r0 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r0;

        $r1 = new com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator: void <init>()>();

        <com.opengamma.analytics.financial.model.option.pricing.fourier.FFTModelGreeks: com.opengamma.analytics.financial.model.option.pricing.fourier.IntegralLimitCalculator LIMIT_CALCULATOR> = $r1;

        return;
    }
}
