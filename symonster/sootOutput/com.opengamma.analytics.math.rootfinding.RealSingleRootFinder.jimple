public abstract class com.opengamma.analytics.math.rootfinding.RealSingleRootFinder extends java.lang.Object implements com.opengamma.analytics.math.rootfinding.SingleRootFinder
{

    public void <init>()
    {
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder r0;

        r0 := @this: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D, java.lang.Double[])
    {
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Double[] r2;
        int $i0;
        java.lang.Double $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r2);

        $i0 = lengthof r2;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        $r4 = r2[0];

        $r3 = r2[1];

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r1, $r4, $r3);

        return $r5;
    }

    public abstract java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D, java.lang.Double, java.lang.Double);

    protected void checkInputs(com.opengamma.analytics.math.function.Function1D, java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Double r2, r3, $r5, $r7;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b0, $b1;
        java.lang.Object $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Double;

        r3 := @parameter2: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r2);

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r3);

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpg $d1;

        if $b0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "x1 must be less or equal to  x2");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r2);

        $r5 = (java.lang.Double) $r4;

        $d2 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $r6 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>(r3);

        $r7 = (java.lang.Double) $r6;

        $d3 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $d4 = $d2 * $d3;

        $b1 = $d4 cmpg 0.0;

        if $b1 > 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "x1 and x2 do not bracket a root");

        return;
    }

    public volatile java.lang.Object getRoot(com.opengamma.analytics.math.function.Function1D, java.lang.Object[])
    {
        com.opengamma.analytics.math.rootfinding.RealSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Object[] r2;
        java.lang.Double[] $r3;
        java.lang.Double $r4;

        r0 := @this: com.opengamma.analytics.math.rootfinding.RealSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Object[];

        $r3 = (java.lang.Double[]) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double[])>(r1, $r3);

        return $r4;
    }
}
