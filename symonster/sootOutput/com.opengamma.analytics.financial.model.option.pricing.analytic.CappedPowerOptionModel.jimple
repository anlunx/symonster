public class com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel extends com.opengamma.analytics.financial.model.option.pricing.analytic.AnalyticOptionModel
{
    private static final com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL;

    public void <init>()
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel r0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.AnalyticOptionModel: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.function.Function1D getPricingFunction(com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel r0;
        com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition r1;
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1 $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        $r3 = new com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1;

        specialinvoke $r3.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel$1: void <init>(com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel,com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition)>(r0, r1);

        return $r3;
    }

    double getD(double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel r0;
        double d0, d1, d2, $d3, $d4, $d5;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $d3 = staticinvoke <java.lang.Math: double log(double)>(d0);

        $d4 = $d3 + d1;

        $d5 = $d4 / d2;

        return $d5;
    }

    public volatile com.opengamma.analytics.math.function.Function1D getPricingFunction(com.opengamma.analytics.financial.model.option.definition.OptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel r0;
        com.opengamma.analytics.financial.model.option.definition.OptionDefinition r1;
        com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition $r2;
        com.opengamma.analytics.math.function.Function1D $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.OptionDefinition;

        $r2 = (com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel: com.opengamma.analytics.math.function.Function1D getPricingFunction(com.opengamma.analytics.financial.model.option.definition.CappedPowerOptionDefinition)>($r2);

        return $r3;
    }

    static com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution access$000()
    {
        com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution $r0;

        $r0 = <com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL>;

        return $r0;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.statistics.distribution.NormalDistribution $r0;

        $r0 = new com.opengamma.analytics.math.statistics.distribution.NormalDistribution;

        specialinvoke $r0.<com.opengamma.analytics.math.statistics.distribution.NormalDistribution: void <init>(double,double)>(0.0, 1.0);

        <com.opengamma.analytics.financial.model.option.pricing.analytic.CappedPowerOptionModel: com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution NORMAL> = $r0;

        return;
    }
}
