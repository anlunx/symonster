public class com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective extends com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborHullWhiteMethod METHOD_HW_SWAPTION;
    private static final com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CASH_FLOW_EQUIVALENT_CALCULATOR;
    private final com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters _hwParameters;
    private com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle _hwBundle;
    private com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed _cfe;

    public void <init>(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective;

        r1 := @parameter0: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "parameters");

        r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters _hwParameters> = r1;

        virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: void setMinimumParameter(double)>(1.0E-6);

        virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: void setMaximumParameter(double)>(1.0);

        virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: void setFunctionValueAccuracy(double)>(1.0E-4);

        virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: void setVariableAbsoluteAccuracy(double)>(1.0E-9);

        return;
    }

    public void setCurves(com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective r0;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r1;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle $r2;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r2 = new com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle;

        $r3 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters _hwParameters>;

        specialinvoke $r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle: void <init>(com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r3, r1);

        r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle _hwBundle> = $r2;

        return;
    }

    public com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHwParameters()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters _hwParameters>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle getHwBundle()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective r0;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle $r1;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle _hwBundle>;

        return $r1;
    }

    public void setNextCalibrationTime(double)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective r0;
        double d0, $d1;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective;

        d0 := @parameter0: double;

        $r2 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters _hwParameters>;

        $r1 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters _hwParameters>;

        $d1 = virtualinvoke $r1.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: double getLastVolatility()>();

        virtualinvoke $r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: void addVolatility(double,double)>($d1, d0);

        return;
    }

    public void setInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        boolean $z0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor $r2;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r3;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle $r4;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator $r5;
        java.lang.Object $r6;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed $r7;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.method.SuccessiveRootFinderCalibrationObjective: void setInstrument(com.opengamma.analytics.financial.interestrate.InstrumentDerivative)>(r1);

        $z0 = r1 instanceof com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Instrument should be a physical delivery swaption");

        $r2 = (com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor) r1;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r5 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CASH_FLOW_EQUIVALENT_CALCULATOR>;

        $r4 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle _hwBundle>;

        $r6 = virtualinvoke $r3.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r5, $r4);

        $r7 = (com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed) $r6;

        r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed _cfe> = $r7;

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective r0;
        java.lang.Double r1, $r10;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle $r2, $r6;
        com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters $r3;
        double $d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborHullWhiteMethod $r4;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative $r5;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed $r7;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor $r8;
        com.opengamma.util.money.CurrencyAmount $r9;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle _hwBundle>;

        $r3 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters getHullWhiteParameter()>();

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r3.<com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantParameters: void setLastVolatility(double)>($d0);

        $r4 = <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborHullWhiteMethod METHOD_HW_SWAPTION>;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.interestrate.InstrumentDerivative getInstrument()>();

        $r8 = (com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor) $r5;

        $r7 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed _cfe>;

        $r6 = r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle _hwBundle>;

        $r9 = virtualinvoke $r4.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborHullWhiteMethod: com.opengamma.util.money.CurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionPhysicalFixedIbor,com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityPaymentFixed,com.opengamma.analytics.financial.model.interestrate.definition.HullWhiteOneFactorPiecewiseConstantDataBundle)>($r8, $r7, $r6);

        $d1 = virtualinvoke $r9.<com.opengamma.util.money.CurrencyAmount: double getAmount()>();

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: double getPrice()>();

        $d3 = $d1 - $d2;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        return $r10;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborHullWhiteMethod $r0;
        com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator $r1;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborHullWhiteMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborHullWhiteMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalFixedIborHullWhiteMethod METHOD_HW_SWAPTION> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.method.SwaptionPhysicalHullWhiteCalibrationObjective: com.opengamma.analytics.financial.interestrate.CashFlowEquivalentCalculator CASH_FLOW_EQUIVALENT_CALCULATOR> = $r1;

        return;
    }
}
