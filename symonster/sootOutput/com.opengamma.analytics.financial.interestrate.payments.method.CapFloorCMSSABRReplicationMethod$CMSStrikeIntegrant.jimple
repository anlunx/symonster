class com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant extends com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSIntegrant
{
    final com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod this$0;

    public void <init>(com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod, com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorCMS, com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters, double)
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant r0;
        com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod r1;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorCMS r2;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters r3;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorCMS;

        r3 := @parameter2: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters;

        d0 := @parameter3: double;

        r0.<com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant: com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod this$0> = r1;

        specialinvoke r0.<com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSIntegrant: void <init>(com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod,com.opengamma.analytics.financial.interestrate.payments.derivative.CapFloorCMS,com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters,double)>(r1, r2, r3, d0);

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant r0;
        java.lang.Double r1, $r3;
        double[] r2;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        r2 = specialinvoke r0.<com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSIntegrant: double[] kpkpp(double)>($d0);

        $d1 = r2[1];

        $d2 = neg $d1;

        $d3 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant: double bs(double)>($d3);

        $d5 = $d2 * $d4;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        return $r3;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.interestrate.payments.method.CapFloorCMSSABRReplicationMethod$CMSStrikeIntegrant: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
