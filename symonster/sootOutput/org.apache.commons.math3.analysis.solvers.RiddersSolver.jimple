public class org.apache.commons.math3.analysis.solvers.RiddersSolver extends org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver
{
    private static final double DEFAULT_ABSOLUTE_ACCURACY;

    public void <init>()
    {
        org.apache.commons.math3.analysis.solvers.RiddersSolver r0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.RiddersSolver;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: void <init>(double)>(1.0E-6);

        return;
    }

    public void <init>(double)
    {
        org.apache.commons.math3.analysis.solvers.RiddersSolver r0;
        double d0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.RiddersSolver;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver: void <init>(double)>(d0);

        return;
    }

    public void <init>(double, double)
    {
        org.apache.commons.math3.analysis.solvers.RiddersSolver r0;
        double d0, d1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.RiddersSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver: void <init>(double,double)>(d0, d1);

        return;
    }

    protected double doSolve() throws org.apache.commons.math3.exception.TooManyEvaluationsException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.solvers.RiddersSolver r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34, d35, d36, d37, d38;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;

        r0 := @this: org.apache.commons.math3.analysis.solvers.RiddersSolver;

        d0 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: double getMin()>();

        d1 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: double getMax()>();

        d34 = d0;

        d35 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: double computeObjectiveValue(double)>(d0);

        d36 = d1;

        d37 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: double computeObjectiveValue(double)>(d1);

        $b0 = d35 cmpl 0.0;

        if $b0 != 0 goto label01;

        return d0;

     label01:
        $b1 = d37 cmpl 0.0;

        if $b1 != 0 goto label02;

        return d1;

     label02:
        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: void verifyBracketing(double,double)>(d0, d1);

        d2 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: double getAbsoluteAccuracy()>();

        d3 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: double getFunctionValueAccuracy()>();

        d4 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: double getRelativeAccuracy()>();

        d38 = #Infinity;

     label03:
        $d12 = d34 + d36;

        d5 = 0.5 * $d12;

        d6 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: double computeObjectiveValue(double)>(d5);

        $d13 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d6);

        $b2 = $d13 cmpg d3;

        if $b2 > 0 goto label04;

        return d5;

     label04:
        $d15 = d35 * d37;

        $d14 = d6 * d6;

        $d16 = $d15 / $d14;

        d7 = 1.0 - $d16;

        $d17 = staticinvoke <org.apache.commons.math3.util.FastMath: double signum(double)>(d37);

        $d18 = staticinvoke <org.apache.commons.math3.util.FastMath: double signum(double)>(d6);

        $d20 = $d17 * $d18;

        $d19 = d5 - d34;

        $d21 = $d20 * $d19;

        $d22 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>(d7);

        d8 = $d21 / $d22;

        d9 = d5 - d8;

        d10 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.RiddersSolver: double computeObjectiveValue(double)>(d9);

        $d23 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d9);

        $d24 = d4 * $d23;

        d11 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d24, d2);

        $d25 = d9 - d38;

        $d26 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d25);

        $b3 = $d26 cmpg d11;

        if $b3 > 0 goto label05;

        return d9;

     label05:
        $d27 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d10);

        $b4 = $d27 cmpg d3;

        if $b4 > 0 goto label06;

        return d9;

     label06:
        $b5 = d8 cmpl 0.0;

        if $b5 <= 0 goto label08;

        $d31 = staticinvoke <org.apache.commons.math3.util.FastMath: double signum(double)>(d35);

        $d32 = staticinvoke <org.apache.commons.math3.util.FastMath: double signum(double)>(d10);

        $d33 = $d31 + $d32;

        $b7 = $d33 cmpl 0.0;

        if $b7 != 0 goto label07;

        d36 = d9;

        d37 = d10;

        goto label10;

     label07:
        d34 = d9;

        d36 = d5;

        d35 = d10;

        d37 = d6;

        goto label10;

     label08:
        $d28 = staticinvoke <org.apache.commons.math3.util.FastMath: double signum(double)>(d37);

        $d29 = staticinvoke <org.apache.commons.math3.util.FastMath: double signum(double)>(d10);

        $d30 = $d28 + $d29;

        $b6 = $d30 cmpl 0.0;

        if $b6 != 0 goto label09;

        d34 = d9;

        d35 = d10;

        goto label10;

     label09:
        d34 = d5;

        d36 = d9;

        d35 = d6;

        d37 = d10;

     label10:
        d38 = d9;

        goto label03;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.analysis.solvers.RiddersSolver: double DEFAULT_ABSOLUTE_ACCURACY> = 1.0E-6;

        return;
    }
}
