public final enum class org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy extends java.lang.Enum
{
    public static final enum org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_VARIANCE;
    public static final enum org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_POINTS_NUMBER;
    public static final enum org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy FARTHEST_POINT;
    public static final enum org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy ERROR;
    private static final org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] $VALUES;

    public static org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] values()
    {
        org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[]) $r1;

        return $r2;
    }

    public static org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy", r0);

        $r2 = (org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] $r4;

        $r0 = new org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy;

        specialinvoke $r0.<org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: void <init>(java.lang.String,int)>("LARGEST_VARIANCE", 0);

        <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_VARIANCE> = $r0;

        $r1 = new org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy;

        specialinvoke $r1.<org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: void <init>(java.lang.String,int)>("LARGEST_POINTS_NUMBER", 1);

        <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_POINTS_NUMBER> = $r1;

        $r2 = new org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy;

        specialinvoke $r2.<org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: void <init>(java.lang.String,int)>("FARTHEST_POINT", 2);

        <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy FARTHEST_POINT> = $r2;

        $r3 = new org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy;

        specialinvoke $r3.<org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: void <init>(java.lang.String,int)>("ERROR", 3);

        <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy ERROR> = $r3;

        $r4 = newarray (org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy)[4];

        $r5 = <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_VARIANCE>;

        $r4[0] = $r5;

        $r6 = <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy LARGEST_POINTS_NUMBER>;

        $r4[1] = $r6;

        $r7 = <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy FARTHEST_POINT>;

        $r4[2] = $r7;

        $r8 = <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy ERROR>;

        $r4[3] = $r8;

        <org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy: org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy[] $VALUES> = $r4;

        return;
    }
}
