public class org.apache.commons.math.analysis.solvers.NewtonSolver extends org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl
{

    public void <init>(org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction)
    {
        org.apache.commons.math.analysis.solvers.NewtonSolver r0;
        org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction r1;

        r0 := @this: org.apache.commons.math.analysis.solvers.NewtonSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction;

        specialinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void <init>(org.apache.commons.math.analysis.UnivariateRealFunction,int,double)>(r1, 100, 1.0E-6);

        return;
    }

    public void <init>()
    {
        org.apache.commons.math.analysis.solvers.NewtonSolver r0;

        r0 := @this: org.apache.commons.math.analysis.solvers.NewtonSolver;

        specialinvoke r0.<org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl: void <init>(int,double)>(100, 1.0E-6);

        return;
    }

    public double solve(double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.NewtonSolver r0;
        double d0, d1, $d2;
        org.apache.commons.math.analysis.UnivariateRealFunction $r1;

        r0 := @this: org.apache.commons.math.analysis.solvers.NewtonSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: org.apache.commons.math.analysis.UnivariateRealFunction f>;

        $d2 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>($r1, d0, d1);

        return $d2;
    }

    public double solve(double, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.NewtonSolver r0;
        double d0, d1, d2, $d3;
        org.apache.commons.math.analysis.UnivariateRealFunction $r1;

        r0 := @this: org.apache.commons.math.analysis.solvers.NewtonSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: org.apache.commons.math.analysis.UnivariateRealFunction f>;

        $d3 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double)>($r1, d0, d1, d2);

        return $d3;
    }

    public double solve(int, org.apache.commons.math.analysis.UnivariateRealFunction, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.NewtonSolver r0;
        int i0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, $d2;

        r0 := @this: org.apache.commons.math.analysis.solvers.NewtonSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: void setMaximalIterationCount(int)>(i0);

        $d2 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>(r1, d0, d1);

        return $d2;
    }

    public double solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.NewtonSolver r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, $d2, $d3;

        r0 := @this: org.apache.commons.math.analysis.solvers.NewtonSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $d2 = staticinvoke <org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils: double midpoint(double,double)>(d0, d1);

        $d3 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double)>(r1, d0, d1, $d2);

        return $d3;
    }

    public double solve(int, org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.NewtonSolver r0;
        int i0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, $d3;

        r0 := @this: org.apache.commons.math.analysis.solvers.NewtonSolver;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: void setMaximalIterationCount(int)>(i0);

        $d3 = virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,double)>(r1, d0, d1, d2);

        return $d3;
    }

    public double solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double) throws org.apache.commons.math.MaxIterationsExceededException, org.apache.commons.math.FunctionEvaluationException
    {
        org.apache.commons.math.analysis.solvers.NewtonSolver r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1, r8;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, d10;
        org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction $r2;
        int $i0, $i1, i3;
        org.apache.commons.math.MaxIterationsExceededException $r3;
        byte $b2;
        java.lang.ClassCastException $r4;
        java.lang.Object[] $r5;
        org.apache.commons.math.exception.util.LocalizedFormats $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.apache.commons.math.analysis.solvers.NewtonSolver;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

     label1:
        $r2 = (org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction) r1;

        r8 = interfaceinvoke $r2.<org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction: org.apache.commons.math.analysis.UnivariateRealFunction derivative()>();

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: void clearResult()>();

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: void verifySequence(double,double,double)>(d0, d2, d1);

        d10 = d2;

        i3 = 0;

     label2:
        $i0 = r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: int maximalIterationCount>;

        if i3 >= $i0 goto label5;

        $d4 = interfaceinvoke r1.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d10);

        $d5 = interfaceinvoke r8.<org.apache.commons.math.analysis.UnivariateRealFunction: double value(double)>(d10);

        $d6 = $d4 / $d5;

        d3 = d10 - $d6;

        $d7 = d3 - d10;

        $d8 = staticinvoke <org.apache.commons.math.util.FastMath: double abs(double)>($d7);

        $d9 = r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: double absoluteAccuracy>;

        $b2 = $d8 cmpg $d9;

        if $b2 > 0 goto label4;

        virtualinvoke r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: void setResult(double,int)>(d3, i3);

     label3:
        return d3;

     label4:
        d10 = d3;

        i3 = i3 + 1;

        goto label2;

     label5:
        $r3 = new org.apache.commons.math.MaxIterationsExceededException;

        $i1 = r0.<org.apache.commons.math.analysis.solvers.NewtonSolver: int maximalIterationCount>;

        specialinvoke $r3.<org.apache.commons.math.MaxIterationsExceededException: void <init>(int)>($i1);

        throw $r3;

     label6:
        $r4 := @caughtexception;

        $r6 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats FUNCTION_NOT_DIFFERENTIABLE>;

        $r5 = newarray (java.lang.Object)[0];

        $r7 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r6, $r5);

        throw $r7;

        catch java.lang.ClassCastException from label1 to label3 with label6;
        catch java.lang.ClassCastException from label4 to label6 with label6;
    }
}
