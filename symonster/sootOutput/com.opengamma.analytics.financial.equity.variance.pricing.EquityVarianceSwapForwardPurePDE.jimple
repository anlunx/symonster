public class com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE extends java.lang.Object
{
    private static final double DEFAULT_THETA;
    private static final com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider PDE_PROVIDER;
    private static final com.opengamma.analytics.financial.model.finitedifference.applications.InitialConditionsProvider INITIAL_COND_PROVIDER;
    private final int _nTimeSteps;
    private final int _nSpaceSteps;
    private final int _minStepsBetweenDividends;
    private final com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver _solver;

    public void <init>()
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE r0;
        com.opengamma.analytics.financial.model.finitedifference.ThetaMethodFiniteDifference $r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _nTimeSteps> = 100;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _nSpaceSteps> = 100;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _minStepsBetweenDividends> = 5;

        $r1 = new com.opengamma.analytics.financial.model.finitedifference.ThetaMethodFiniteDifference;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.finitedifference.ThetaMethodFiniteDifference: void <init>(double,boolean)>(0.5, 0);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver _solver> = $r1;

        return;
    }

    public void <init>(int, int, int, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE r0;
        int i0, i1, i2;
        double d0;
        com.opengamma.analytics.financial.model.finitedifference.ThetaMethodFiniteDifference $r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        d0 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: int notNegativeOrZero(int,java.lang.String)>(i0, "number of time steps");

        staticinvoke <com.opengamma.util.ArgumentChecker: int notNegativeOrZero(int,java.lang.String)>(i1, "number of space steps");

        staticinvoke <com.opengamma.util.ArgumentChecker: int notNegativeOrZero(int,java.lang.String)>(i2, "minimum number of steps between dividends");

        staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeInclusive(double,double,double)>(0.0, 1.0, d0);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _nTimeSteps> = i0;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _nSpaceSteps> = i1;

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _minStepsBetweenDividends> = i2;

        $r1 = new com.opengamma.analytics.financial.model.finitedifference.ThetaMethodFiniteDifference;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.finitedifference.ThetaMethodFiniteDifference: void <init>(double,boolean)>(d0, 0);

        r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver _solver> = $r1;

        return;
    }

    public double[] expectedVariance(double, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends, double, com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE r0;
        double d0, d1, d2, d3, d4, d6, d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, d45, d46, d47;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r1;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r2;
        com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface r3;
        com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDE1DStandardCoefficients r5;
        com.opengamma.analytics.math.function.Function1D r6, $r36, $r39, $r41, $r43, $r45;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i30, $i31, i32, i33, i34, i35, i36;
        boolean z0, $z1, $z2, $z3;
        int[] r8;
        com.opengamma.analytics.financial.model.finitedifference.MeshingFunction[] r12;
        com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D[] r13;
        byte $b2, $b3, $b28, $b29;
        com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness $r17;
        com.opengamma.analytics.math.surface.Surface $r18;
        com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve $r19;
        com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider $r20;
        com.opengamma.analytics.financial.model.finitedifference.applications.InitialConditionsProvider $r21;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle $r22;
        java.lang.Double $r23;
        com.opengamma.analytics.financial.model.finitedifference.DirichletBoundaryCondition $r24;
        com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition $r25;
        com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing $r26;
        com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing $r27, $r28, $r56, $r57;
        com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D $r29, $r32, $r47, $r52;
        com.opengamma.analytics.financial.model.finitedifference.MeshingFunction $r30, $r48;
        com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle $r31, $r49;
        com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver $r33, $r53;
        com.opengamma.analytics.financial.model.finitedifference.PDEResults1D $r34, $r54;
        com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D $r35, $r37, $r40, $r42, $r44, $r46, $r50, $r55;
        double[] $r38, $r51;
        long $l26, $l27;
        com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D[] r59;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        d0 := @parameter0: double;

        r1 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        r2 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        d1 := @parameter3: double;

        r3 := @parameter4: com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface;

        $b2 = d0 cmpl 0.0;

        if $b2 <= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "spot > 0");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "discount curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "dividends");

        $b3 = d1 cmpl 0.0;

        if $b3 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "expiry > 0");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "pure local volatility surface");

        $r17 = new com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness;

        $r18 = virtualinvoke r3.<com.opengamma.analytics.financial.model.volatility.local.PureLocalVolatilitySurface: com.opengamma.analytics.math.surface.Surface getSurface()>();

        $r19 = new com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve;

        specialinvoke $r19.<com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve: void <init>(double)>(1.0);

        specialinvoke $r17.<com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness: void <init>(com.opengamma.analytics.math.surface.Surface,com.opengamma.analytics.financial.model.interestrate.curve.ForwardCurve)>($r18, $r19);

        $r20 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider PDE_PROVIDER>;

        r5 = virtualinvoke $r20.<com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDE1DStandardCoefficients getForwardLocalVol(com.opengamma.analytics.financial.model.volatility.local.LocalVolatilitySurfaceMoneyness)>($r17);

        $r21 = <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.financial.model.finitedifference.applications.InitialConditionsProvider INITIAL_COND_PROVIDER>;

        r6 = virtualinvoke $r21.<com.opengamma.analytics.financial.model.finitedifference.applications.InitialConditionsProvider: com.opengamma.analytics.math.function.Function1D getForwardCallPut(boolean)>(1);

        $r22 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        specialinvoke $r22.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: void <init>(double,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d0, r1, r2);

        d2 = virtualinvoke $r22.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d1);

        $d10 = staticinvoke <java.lang.Math: double log(double)>(d0);

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getInterestRate(java.lang.Object)>($r23);

        $d12 = $d11 * d1;

        d3 = $d10 + $d12;

        i0 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: int getNumberOfDividends()>();

        $i4 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _nTimeSteps>;

        $d13 = (double) $i4;

        d4 = d1 / $d13;

        i30 = 0;

     label05:
        if i0 <= 0 goto label06;

        if i30 >= i0 goto label06;

        $d42 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i30);

        $b29 = $d42 cmpg d1;

        if $b29 >= 0 goto label06;

        i30 = i30 + 1;

        goto label05;

     label06:
        if i0 <= 0 goto label07;

        if i30 >= i0 goto label07;

        $d41 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i30);

        $l26 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d41);

        $l27 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d1);

        $b28 = $l26 cmp $l27;

        if $b28 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        z0 = $z3;

        i1 = i30;

        $i31 = i30 + 1;

        r8 = newarray (int)[$i31];

        i32 = 0;

        i33 = 0;

     label09:
        if i33 >= i1 goto label12;

        $i25 = i33;

        $i21 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _minStepsBetweenDividends>;

        $d36 = (double) $i21;

        $d37 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i33);

        if i33 != 0 goto label10;

        $d43 = 0.0;

        goto label11;

     label10:
        $i22 = i33 - 1;

        $d43 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>($i22);

     label11:
        $d38 = $d37 - $d43;

        $d39 = $d38 / d4;

        $d40 = staticinvoke <java.lang.Math: double max(double,double)>($d36, $d39);

        $i23 = (int) $d40;

        r8[$i25] = $i23;

        $i24 = r8[i33];

        i32 = i32 + $i24;

        i33 = i33 + 1;

        goto label09;

     label12:
        $i7 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _minStepsBetweenDividends>;

        $i5 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _nTimeSteps>;

        $i6 = $i5 - i32;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i6);

        r8[i1] = $i8;

        $r24 = new com.opengamma.analytics.financial.model.finitedifference.DirichletBoundaryCondition;

        specialinvoke $r24.<com.opengamma.analytics.financial.model.finitedifference.DirichletBoundaryCondition: void <init>(double,double)>(1.0, 0.0);

        $r25 = new com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition;

        specialinvoke $r25.<com.opengamma.analytics.financial.model.finitedifference.NeumannBoundaryCondition: void <init>(double,double,boolean)>(0.0, 6.0, 0);

        $r26 = new com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing;

        $i9 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _nSpaceSteps>;

        $i10 = $i9 + 1;

        specialinvoke $r26.<com.opengamma.analytics.financial.model.finitedifference.HyperbolicMeshing: void <init>(double,double,double,int,double)>(0.0, 6.0, 1.0, $i10, 0.001);

        $i11 = i1 + 1;

        r12 = newarray (com.opengamma.analytics.financial.model.finitedifference.MeshingFunction)[$i11];

        $i12 = i1 + 1;

        r13 = newarray (com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D)[$i12];

        if i1 != 0 goto label13;

        $r57 = new com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing;

        $i20 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: int _nTimeSteps>;

        specialinvoke $r57.<com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing: void <init>(double,double,int,double)>(0.0, d1, $i20, 5.0);

        r12[0] = $r57;

        goto label16;

     label13:
        $r27 = new com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing;

        $d14 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(0);

        $i13 = r8[0];

        specialinvoke $r27.<com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing: void <init>(double,double,int,double)>(0.0, $d14, $i13, 5.0);

        r12[0] = $r27;

        i34 = 1;

     label14:
        if i34 >= i1 goto label15;

        $r56 = new com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing;

        $i18 = i34 - 1;

        $d34 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>($i18);

        $d35 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i34);

        $i19 = r8[i34];

        specialinvoke $r56.<com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing: void <init>(double,double,int,double)>($d34, $d35, $i19, 0.0);

        r12[i34] = $r56;

        i34 = i34 + 1;

        goto label14;

     label15:
        $r28 = new com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing;

        $i14 = i1 - 1;

        $d15 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>($i14);

        $i15 = r8[i1];

        specialinvoke $r28.<com.opengamma.analytics.financial.model.finitedifference.ExponentialMeshing: void <init>(double,double,int,double)>($d15, d1, $i15, 0.0);

        r12[i1] = $r28;

     label16:
        $i16 = i1 + 1;

        r59 = newarray (com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D)[$i16];

        $r29 = new com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D;

        $r30 = r12[0];

        specialinvoke $r29.<com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D: void <init>(com.opengamma.analytics.financial.model.finitedifference.MeshingFunction,com.opengamma.analytics.financial.model.finitedifference.MeshingFunction)>($r30, $r26);

        r13[0] = $r29;

        $r31 = new com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle;

        $r32 = r13[0];

        specialinvoke $r31.<com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle: void <init>(com.opengamma.analytics.financial.model.finitedifference.PDE1DCoefficients,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.finitedifference.BoundaryCondition,com.opengamma.analytics.financial.model.finitedifference.BoundaryCondition,com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D)>(r5, r6, $r24, $r25, $r32);

        $r33 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver _solver>;

        $r34 = interfaceinvoke $r33.<com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver: com.opengamma.analytics.financial.model.finitedifference.PDEResults1D solve(com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle)>($r31);

        $r35 = (com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D) $r34;

        r59[0] = $r35;

        i35 = 1;

     label17:
        if i35 > i1 goto label18;

        $r47 = new com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D;

        $r48 = r12[i35];

        specialinvoke $r47.<com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D: void <init>(com.opengamma.analytics.financial.model.finitedifference.MeshingFunction,com.opengamma.analytics.financial.model.finitedifference.MeshingFunction)>($r48, $r26);

        r13[i35] = $r47;

        $r49 = new com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle;

        $i17 = i35 - 1;

        $r50 = r59[$i17];

        $r51 = virtualinvoke $r50.<com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D: double[] getTerminalResults()>();

        $r52 = r13[i35];

        specialinvoke $r49.<com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle: void <init>(com.opengamma.analytics.financial.model.finitedifference.PDE1DCoefficients,double[],com.opengamma.analytics.financial.model.finitedifference.BoundaryCondition,com.opengamma.analytics.financial.model.finitedifference.BoundaryCondition,com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D)>(r5, $r51, $r24, $r25, $r52);

        $r53 = r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver _solver>;

        $r54 = interfaceinvoke $r53.<com.opengamma.analytics.financial.model.finitedifference.ConvectionDiffusionPDESolver: com.opengamma.analytics.financial.model.finitedifference.PDEResults1D solve(com.opengamma.analytics.financial.model.finitedifference.PDE1DDataBundle)>($r49);

        $r55 = (com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D) $r54;

        r59[i35] = $r55;

        i35 = i35 + 1;

        goto label17;

     label18:
        d45 = 0.0;

        d46 = 0.0;

        i36 = 0;

     label19:
        if i36 >= i1 goto label20;

        $d27 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i36);

        d6 = virtualinvoke $r22.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>($d27);

        $r43 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.math.function.Function1D getCorrectedDividendAdjustmentWeight(int,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(i36, $r22, r2);

        $r44 = r59[i36];

        $d28 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double integrate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D)>($r43, $r44);

        $d29 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double getCorrectedDividendAdjustment(double,int,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d6, i36, r2);

        $d30 = $d28 + $d29;

        d45 = d45 + $d30;

        $r45 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.math.function.Function1D getUncorrectedDividendAdjustmentWeight(int,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(i36, $r22, r2);

        $r46 = r59[i36];

        $d31 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double integrate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D)>($r45, $r46);

        $d32 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double getUncorrectedDividendAdjustment(double,int,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d6, i36, r2);

        $d33 = $d31 + $d32;

        d46 = d46 + $d33;

        i36 = i36 + 1;

        goto label19;

     label20:
        if z0 == 0 goto label21;

        $r39 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.math.function.Function1D getCorrectedDividendAdjustmentWeight(int,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(i1, $r22, r2);

        $r40 = r59[i1];

        $d21 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double integrate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D)>($r39, $r40);

        $d22 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double getCorrectedDividendAdjustment(double,int,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d2, i1, r2);

        $d23 = $d21 + $d22;

        d45 = d45 + $d23;

        $r41 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.math.function.Function1D getUncorrectedDividendAdjustmentWeight(int,com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(i1, $r22, r2);

        $r42 = r59[i1];

        $d24 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double integrate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D)>($r41, $r42);

        $d25 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double getUncorrectedDividendAdjustment(double,int,com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)>(d2, i1, r2);

        $d26 = $d24 + $d25;

        d46 = d46 + $d26;

     label21:
        $r36 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.math.function.Function1D getLogContractWeight(com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle,double)>($r22, d1);

        $r37 = r59[i1];

        $d16 = specialinvoke r0.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double integrate(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D)>($r36, $r37);

        $d17 = staticinvoke <java.lang.Math: double log(double)>(d2);

        d47 = $d16 + $d17;

        $d18 = d47 - d3;

        d7 = -2.0 * $d18;

        $d19 = 2.0 * d45;

        d8 = d7 + $d19;

        $d20 = 2.0 * d46;

        d9 = d7 + $d20;

        $r38 = newarray (double)[2];

        $r38[0] = d8;

        $r38[1] = d9;

        return $r38;
    }

    private double integrate(com.opengamma.analytics.math.function.Function1D, com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE r0;
        com.opengamma.analytics.math.function.Function1D r1;
        com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D r2;
        int i0, $i1, $i3, $i4, i5;
        double[] r3;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d12, $d13, d14;
        com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D $r4;
        byte $b2;
        java.lang.Double $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D;

        i0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D: int getNumberSpaceNodes()>();

        $r4 = virtualinvoke r2.<com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D: com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D getGrid()>();

        r3 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.finitedifference.PDEGrid1D: double[] getSpaceNodes()>();

        d12 = 0.0;

        i5 = 1;

     label1:
        $i1 = i0 - 1;

        if i5 >= $i1 goto label4;

        d0 = virtualinvoke r2.<com.opengamma.analytics.financial.model.finitedifference.PDETerminalResults1D: double getFunctionValue(int)>(i5);

        $d3 = r3[i5];

        $b2 = $d3 cmpg 1.0;

        if $b2 >= 0 goto label2;

        $d10 = r3[i5];

        $d13 = 1.0 - $d10;

        goto label3;

     label2:
        $d13 = 0.0;

     label3:
        d1 = d0 - $d13;

        $d4 = r3[i5];

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r6 = virtualinvoke r1.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r5);

        $r7 = (java.lang.Double) $r6;

        d2 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $d8 = d2 * d1;

        $i3 = i5 + 1;

        $d6 = r3[$i3];

        $i4 = i5 - 1;

        $d5 = r3[$i4];

        $d7 = $d6 - $d5;

        $d9 = $d8 * $d7;

        d12 = d12 + $d9;

        i5 = i5 + 1;

        goto label1;

     label4:
        d14 = d12 / 2.0;

        return d14;
    }

    private com.opengamma.analytics.math.function.Function1D getLogContractWeight(com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle, double)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE r0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r1;
        double d0, d1, d2;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE$1 $r2;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        r1 := @parameter0: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        d0 := @parameter1: double;

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d0);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d0);

        $r2 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE$1;

        specialinvoke $r2.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE$1: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE,double,double)>(r0, d1, d2);

        return $r2;
    }

    private com.opengamma.analytics.math.function.Function1D getCorrectedDividendAdjustmentWeight(int, com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE r0;
        int i0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r1;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r2;
        double d0, d1, d2, d3, d4, $d5;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE$2 $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        r2 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        d0 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i0);

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d0);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d0);

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i0);

        $d5 = d1 - d2;

        d4 = staticinvoke <com.opengamma.analytics.math.FunctionUtils: double square(double)>($d5);

        $r3 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE$2;

        specialinvoke $r3.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE$2: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE,double,double,double,double)>(r0, d1, d2, d3, d4);

        return $r3;
    }

    private com.opengamma.analytics.math.function.Function1D getUncorrectedDividendAdjustmentWeight(int, com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE r0;
        int i0;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle r1;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r2;
        double d0, d1, d2, d3, d4, d5, $d6;
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE$3 $r3;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        i0 := @parameter0: int;

        r1 := @parameter1: com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle;

        r2 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        d0 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getTau(int)>(i0);

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getF(double)>(d0);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.EquityDividendsCurvesBundle: double getD(double)>(d0);

        d3 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i0);

        d4 = virtualinvoke r2.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i0);

        $d6 = d1 - d2;

        d5 = staticinvoke <com.opengamma.analytics.math.FunctionUtils: double square(double)>($d6);

        $r3 = new com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE$3;

        specialinvoke $r3.<com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE$3: void <init>(com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE,double,double,double,double,double)>(r0, d1, d2, d3, d4, d5);

        return $r3;
    }

    private double getCorrectedDividendAdjustment(double, int, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7;
        int i0;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        r1 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i0);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i0);

        $d4 = 1.0 - d2;

        $d6 = d0 * $d4;

        $d5 = d0 + d1;

        $d7 = $d6 / $d5;

        d3 = staticinvoke <java.lang.Math: double log(double)>($d7);

        return d3;
    }

    private double getUncorrectedDividendAdjustment(double, int, com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends)
    {
        com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        int i0;
        com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends r1;

        r0 := @this: com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        r1 := @parameter2: com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends;

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getAlpha(int)>(i0);

        d2 = virtualinvoke r1.<com.opengamma.analytics.financial.equity.variance.pricing.AffineDividends: double getBeta(int)>(i0);

        $d4 = 1.0 - d2;

        $d6 = d0 * $d4;

        $d5 = d0 + d1;

        $d7 = $d6 / $d5;

        d3 = staticinvoke <java.lang.Math: double log(double)>($d7);

        $d8 = 0.5 * d3;

        $d9 = $d8 * d3;

        $d10 = d3 + $d9;

        return $d10;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider $r0;
        com.opengamma.analytics.financial.model.finitedifference.applications.InitialConditionsProvider $r1;

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: double DEFAULT_THETA> = 0.5;

        $r0 = new com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider;

        specialinvoke $r0.<com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider: void <init>()>();

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.financial.model.finitedifference.applications.PDE1DCoefficientsProvider PDE_PROVIDER> = $r0;

        $r1 = new com.opengamma.analytics.financial.model.finitedifference.applications.InitialConditionsProvider;

        specialinvoke $r1.<com.opengamma.analytics.financial.model.finitedifference.applications.InitialConditionsProvider: void <init>()>();

        <com.opengamma.analytics.financial.equity.variance.pricing.EquityVarianceSwapForwardPurePDE: com.opengamma.analytics.financial.model.finitedifference.applications.InitialConditionsProvider INITIAL_COND_PROVIDER> = $r1;

        return;
    }
}
