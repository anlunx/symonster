public class com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider extends com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider
{
    private double _upperBarrier;
    private com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker _checkerDouble;

    public void <init>(double, double, int, boolean, double, double, com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        double d0, d1, d2, d3;
        int i0, $i3, $i4;
        boolean z0, $z1, $z2, $z3;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes r1, $r2;
        byte $b1, $b2;
        int[] $r3;
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider$DoubleBarrier $r4;
        org.apache.commons.lang.NotImplementedException $r5;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        r1 := @parameter6: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes;

        $r2 = <com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes DownAndOut>;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider: void <init>(double,double,int,boolean,double,com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes)>(d0, d1, i0, z0, d2, $r2);

        $b1 = d3 cmpl 0.0;

        if $b1 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "upperBarrier should be positive");

        $z1 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d3);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "upperBarrier should be finite");

        $b2 = d3 cmpl d2;

        if $b2 <= 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "upperBarrier should be greater than lowerBarrier");

        $r3 = <com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider$1: int[] $SwitchMap$com$opengamma$analytics$financial$model$option$pricing$tree$BarrierOptionFunctionProvider$BarrierTypes>;

        $i3 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes: int ordinal()>();

        $i4 = $r3[$i3];

        lookupswitch($i4)
        {
            case 1: goto label5;
            default: goto label6;
        };

     label5:
        $r4 = new com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider$DoubleBarrier;

        specialinvoke $r4.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider$DoubleBarrier: void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider)>(r0);

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker _checkerDouble> = $r4;

        goto label7;

     label6:
        $r5 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r5.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r5;

     label7:
        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double _upperBarrier> = d3;

        return;
    }

    public double[] getPayoffAtExpiry(double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, d9, $d10;
        int i0, i1, $i2, i3;
        double[] r1;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker $r2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double getStrike()>();

        i0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: int getNumberOfSteps()>();

        i1 = i0 + 1;

        d4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double getSign()>();

        r1 = newarray (double)[i1];

        $d5 = (double) i0;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, $d5);

        d9 = d0 * $d6;

        i3 = 0;

     label1:
        if i3 >= i1 goto label4;

        $i2 = i3;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker _checkerDouble>;

        $z0 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker: boolean checkOut(double)>(d9);

        if $z0 == 0 goto label2;

        $d10 = 0.0;

        goto label3;

     label2:
        $d7 = d9 - d3;

        $d8 = d4 * $d7;

        $d10 = staticinvoke <java.lang.Math: double max(double,double)>($d8, 0.0);

     label3:
        r1[$i2] = $d10;

        d9 = d9 * d2;

        i3 = i3 + 1;

        goto label1;

     label4:
        return r1;
    }

    public double[] getNextOptionValues(double, double, double, double[], double, double, double, double, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, $d16;
        double[] r1, r2;
        int i0, i1, $i2, $i3, i4;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r1 := @parameter3: double[];

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        i0 := @parameter8: int;

        i1 = i0 + 1;

        r2 = newarray (double)[i1];

        $d7 = (double) i0;

        $d8 = staticinvoke <java.lang.Math: double pow(double,double)>(d5, $d7);

        d15 = d3 * $d8;

        i4 = 0;

     label1:
        if i4 >= i1 goto label4;

        $i3 = i4;

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker _checkerDouble>;

        $d9 = d15 + d4;

        $z0 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker: boolean checkOut(double)>($d9);

        if $z0 == 0 goto label2;

        $d16 = 0.0;

        goto label3;

     label2:
        $i2 = i4 + 1;

        $d10 = r1[$i2];

        $d13 = d1 * $d10;

        $d11 = r1[i4];

        $d12 = d2 * $d11;

        $d14 = $d13 + $d12;

        $d16 = d0 * $d14;

     label3:
        r2[$i3] = $d16;

        d15 = d15 * d6;

        i4 = i4 + 1;

        goto label1;

     label4:
        return r2;
    }

    public double[] getPayoffAtExpiryTrinomial(double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, d9, $d10;
        int i0, i1, $i2, $i3, $i4, i5;
        double[] r1;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker $r2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double getStrike()>();

        i0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: int getNumberOfSteps()>();

        $i2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: int getNumberOfSteps()>();

        $i3 = 2 * $i2;

        i1 = $i3 + 1;

        d4 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double getSign()>();

        r1 = newarray (double)[i1];

        $d5 = (double) i0;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, $d5);

        d9 = d0 * $d6;

        i5 = 0;

     label1:
        if i5 >= i1 goto label4;

        $i4 = i5;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker _checkerDouble>;

        $z0 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker: boolean checkOut(double)>(d9);

        if $z0 == 0 goto label2;

        $d10 = 0.0;

        goto label3;

     label2:
        $d7 = d9 - d3;

        $d8 = d4 * $d7;

        $d10 = staticinvoke <java.lang.Math: double max(double,double)>($d8, 0.0);

     label3:
        r1[$i4] = $d10;

        d9 = d9 * d2;

        i5 = i5 + 1;

        goto label1;

     label4:
        return r1;
    }

    public double[] getNextOptionValues(double, double, double, double, double[], double, double, double, double, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, $d20;
        double[] r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker $r3;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        r1 := @parameter4: double[];

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        d7 := @parameter8: double;

        i0 := @parameter9: int;

        $i2 = 2 * i0;

        i1 = $i2 + 1;

        r2 = newarray (double)[i1];

        $d8 = (double) i0;

        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>(d6, $d8);

        d19 = d4 * $d9;

        i6 = 0;

     label1:
        if i6 >= i1 goto label4;

        $i5 = i6;

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker _checkerDouble>;

        $d10 = d19 + d5;

        $z0 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker: boolean checkOut(double)>($d10);

        if $z0 == 0 goto label2;

        $d20 = 0.0;

        goto label3;

     label2:
        $i3 = i6 + 2;

        $d11 = r1[$i3];

        $d14 = d1 * $d11;

        $i4 = i6 + 1;

        $d12 = r1[$i4];

        $d13 = d2 * $d12;

        $d17 = $d14 + $d13;

        $d15 = r1[i6];

        $d16 = d3 * $d15;

        $d18 = $d17 + $d16;

        $d20 = d0 * $d18;

     label3:
        r2[$i5] = $d20;

        d19 = d19 * d7;

        i6 = i6 + 1;

        goto label1;

     label4:
        return r2;
    }

    public com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker getChecker()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        $r1 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker _checkerDouble>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes getBarrierType()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        $r1 = <com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$BarrierTypes DoubleKnockOut>;

        return $r1;
    }

    private com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker getSuperclassChecker()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        $r1 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker getChecker()>();

        return $r1;
    }

    public double getLowerBarrier()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        $d0 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider: double getBarrier()>();

        return $d0;
    }

    public double getUpperBarrier()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double _upperBarrier>;

        return $d0;
    }

    public double getBarrier()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specify lower barrier or upper barrier");

        throw $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        long l1, $l2, $l3;
        double $d0;
        int $i4, $i5, i6, i7;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        i6 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider: int hashCode()>();

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double _upperBarrier>;

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i5 = 31 * i6;

        $l2 = l1 >>> 32;

        $l3 = l1 ^ $l2;

        $i4 = (int) $l3;

        i7 = $i5 + $i4;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        double $d0, $d1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $z1 = r1 instanceof com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        if $z1 != 0 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider) r1;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double _upperBarrier>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double _upperBarrier>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    static double access$000(com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        double $d0;

        r0 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        $d0 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: double _upperBarrier>;

        return $d0;
    }

    static com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker access$100(com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider r0;
        com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker $r1;

        r0 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider;

        $r1 = specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.DoubleBarrierOptionFunctionProvider: com.opengamma.analytics.financial.model.option.pricing.tree.BarrierOptionFunctionProvider$CrossBarrierChecker getSuperclassChecker()>();

        return $r1;
    }
}
