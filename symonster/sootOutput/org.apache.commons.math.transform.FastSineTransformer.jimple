public class org.apache.commons.math.transform.FastSineTransformer extends java.lang.Object implements org.apache.commons.math.transform.RealTransformer
{

    public void <init>()
    {
        org.apache.commons.math.transform.FastSineTransformer r0;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double[] transform(double[]) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastSineTransformer r0;
        double[] r1, $r2;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        r1 := @parameter0: double[];

        $r2 = virtualinvoke r0.<org.apache.commons.math.transform.FastSineTransformer: double[] fst(double[])>(r1);

        return $r2;
    }

    public double[] transform(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, int) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastSineTransformer r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1;
        int i0;
        double[] r2, $r3;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        r2 = staticinvoke <org.apache.commons.math.transform.FastFourierTransformer: double[] sample(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)>(r1, d0, d1, i0);

        r2[0] = 0.0;

        $r3 = virtualinvoke r0.<org.apache.commons.math.transform.FastSineTransformer: double[] fst(double[])>(r2);

        return $r3;
    }

    public double[] transform2(double[]) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastSineTransformer r0;
        double[] r1, $r2, $r3;
        double d0, $d1, $d2;
        int $i0;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        r1 := @parameter0: double[];

        $i0 = lengthof r1;

        $d1 = (double) $i0;

        $d2 = 2.0 / $d1;

        d0 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d2);

        $r2 = virtualinvoke r0.<org.apache.commons.math.transform.FastSineTransformer: double[] fst(double[])>(r1);

        $r3 = staticinvoke <org.apache.commons.math.transform.FastFourierTransformer: double[] scaleArray(double[],double)>($r2, d0);

        return $r3;
    }

    public double[] transform2(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, int) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastSineTransformer r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, $d3, $d4;
        int i0;
        double[] r2, $r3, $r4;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        r2 = staticinvoke <org.apache.commons.math.transform.FastFourierTransformer: double[] sample(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)>(r1, d0, d1, i0);

        r2[0] = 0.0;

        $d3 = (double) i0;

        $d4 = 2.0 / $d3;

        d2 = staticinvoke <org.apache.commons.math.util.FastMath: double sqrt(double)>($d4);

        $r3 = virtualinvoke r0.<org.apache.commons.math.transform.FastSineTransformer: double[] fst(double[])>(r2);

        $r4 = staticinvoke <org.apache.commons.math.transform.FastFourierTransformer: double[] scaleArray(double[],double)>($r3, d2);

        return $r4;
    }

    public double[] inversetransform(double[]) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastSineTransformer r0;
        double[] r1, $r2, $r3;
        double d0, $d1;
        int $i0;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        r1 := @parameter0: double[];

        $i0 = lengthof r1;

        $d1 = (double) $i0;

        d0 = 2.0 / $d1;

        $r2 = virtualinvoke r0.<org.apache.commons.math.transform.FastSineTransformer: double[] fst(double[])>(r1);

        $r3 = staticinvoke <org.apache.commons.math.transform.FastFourierTransformer: double[] scaleArray(double[],double)>($r2, d0);

        return $r3;
    }

    public double[] inversetransform(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, int) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastSineTransformer r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1, d2, $d3;
        int i0;
        double[] r2, $r3, $r4;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        r2 = staticinvoke <org.apache.commons.math.transform.FastFourierTransformer: double[] sample(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)>(r1, d0, d1, i0);

        r2[0] = 0.0;

        $d3 = (double) i0;

        d2 = 2.0 / $d3;

        $r3 = virtualinvoke r0.<org.apache.commons.math.transform.FastSineTransformer: double[] fst(double[])>(r2);

        $r4 = staticinvoke <org.apache.commons.math.transform.FastFourierTransformer: double[] scaleArray(double[],double)>($r3, d2);

        return $r4;
    }

    public double[] inversetransform2(double[]) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastSineTransformer r0;
        double[] r1, $r2;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        r1 := @parameter0: double[];

        $r2 = virtualinvoke r0.<org.apache.commons.math.transform.FastSineTransformer: double[] transform2(double[])>(r1);

        return $r2;
    }

    public double[] inversetransform2(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, int) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastSineTransformer r0;
        org.apache.commons.math.analysis.UnivariateRealFunction r1;
        double d0, d1;
        int i0;
        double[] $r2;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        r1 := @parameter0: org.apache.commons.math.analysis.UnivariateRealFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 := @parameter3: int;

        $r2 = virtualinvoke r0.<org.apache.commons.math.transform.FastSineTransformer: double[] transform2(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)>(r1, d0, d1, i0);

        return $r2;
    }

    protected double[] fst(double[]) throws java.lang.IllegalArgumentException
    {
        org.apache.commons.math.transform.FastSineTransformer r0;
        double[] r1, r2, r3;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25;
        byte $b2;
        org.apache.commons.math.transform.FastFourierTransformer $r4;
        org.apache.commons.math.complex.Complex $r5, $r6, $r7;
        java.lang.Object[] $r8;
        org.apache.commons.math.exception.util.LocalizedFormats $r9;
        java.lang.Double $r10;
        java.lang.IllegalArgumentException $r11;
        org.apache.commons.math.complex.Complex[] r13;

        r0 := @this: org.apache.commons.math.transform.FastSineTransformer;

        r1 := @parameter0: double[];

        $i1 = lengthof r1;

        r2 = newarray (double)[$i1];

        staticinvoke <org.apache.commons.math.transform.FastFourierTransformer: void verifyDataSet(double[])>(r1);

        $d1 = r1[0];

        $b2 = $d1 cmpl 0.0;

        if $b2 == 0 goto label1;

        $r9 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats FIRST_ELEMENT_NOT_ZERO>;

        $r8 = newarray (java.lang.Object)[1];

        $d24 = r1[0];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d24);

        $r8[0] = $r10;

        $r11 = staticinvoke <org.apache.commons.math.MathRuntimeException: java.lang.IllegalArgumentException createIllegalArgumentException(org.apache.commons.math.exception.util.Localizable,java.lang.Object[])>($r9, $r8);

        throw $r11;

     label1:
        i0 = lengthof r1;

        if i0 != 1 goto label2;

        r2[0] = 0.0;

        return r2;

     label2:
        r3 = newarray (double)[i0];

        r3[0] = 0.0;

        $i4 = i0 >> 1;

        $i3 = i0 >> 1;

        $d2 = r1[$i3];

        $d3 = 2.0 * $d2;

        r3[$i4] = $d3;

        i15 = 1;

     label3:
        $i5 = i0 >> 1;

        if i15 >= $i5 goto label4;

        $d11 = (double) i15;

        $d13 = $d11 * 3.141592653589793;

        $d12 = (double) i0;

        $d14 = $d13 / $d12;

        $d15 = staticinvoke <org.apache.commons.math.util.FastMath: double sin(double)>($d14);

        $d17 = r1[i15];

        $i12 = i0 - i15;

        $d16 = r1[$i12];

        $d18 = $d17 + $d16;

        d25 = $d15 * $d18;

        $d20 = r1[i15];

        $i13 = i0 - i15;

        $d19 = r1[$i13];

        $d21 = $d20 - $d19;

        d0 = 0.5 * $d21;

        $d22 = d25 + d0;

        r3[i15] = $d22;

        $i14 = i0 - i15;

        $d23 = d25 - d0;

        r3[$i14] = $d23;

        i15 = i15 + 1;

        goto label3;

     label4:
        $r4 = new org.apache.commons.math.transform.FastFourierTransformer;

        specialinvoke $r4.<org.apache.commons.math.transform.FastFourierTransformer: void <init>()>();

        r13 = virtualinvoke $r4.<org.apache.commons.math.transform.FastFourierTransformer: org.apache.commons.math.complex.Complex[] transform(double[])>(r3);

        r2[0] = 0.0;

        $r5 = r13[0];

        $d4 = virtualinvoke $r5.<org.apache.commons.math.complex.Complex: double getReal()>();

        $d5 = 0.5 * $d4;

        r2[1] = $d5;

        i16 = 1;

     label5:
        $i6 = i0 >> 1;

        if i16 >= $i6 goto label6;

        $i7 = 2 * i16;

        $r6 = r13[i16];

        $d6 = virtualinvoke $r6.<org.apache.commons.math.complex.Complex: double getImaginary()>();

        $d7 = neg $d6;

        r2[$i7] = $d7;

        $i8 = 2 * i16;

        $i9 = $i8 + 1;

        $r7 = r13[i16];

        $d8 = virtualinvoke $r7.<org.apache.commons.math.complex.Complex: double getReal()>();

        $i10 = 2 * i16;

        $i11 = $i10 - 1;

        $d9 = r2[$i11];

        $d10 = $d8 + $d9;

        r2[$i9] = $d10;

        i16 = i16 + 1;

        goto label5;

     label6:
        return r2;
    }
}
