class com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1 extends com.opengamma.analytics.math.function.Function1D
{
    final double val$forward;
    final com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle val$data;
    final com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline this$0;

    void <init>(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline, double, com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1 r0;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline r1;
        double d0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline this$0> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1: double val$forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle val$data> = r2;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1 r0;
        java.lang.Double r1, $r5, $r6;
        double d0, $d1, $d2, $d3;
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline $r2;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1;

        r1 := @parameter0: java.lang.Double;

        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1: double val$forward>;

        $d3 = $d1 / $d2;

        d0 = staticinvoke <java.lang.Math: double log(double)>($d3);

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline this$0>;

        $r3 = staticinvoke <com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline: com.opengamma.analytics.math.interpolation.Interpolator1D access$000(com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline)>($r2);

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle val$data>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r6 = virtualinvoke $r3.<com.opengamma.analytics.math.interpolation.Interpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r4, $r5);

        return $r6;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1 r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.SmileInterpolatorSpline$1: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
