public class com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator extends java.lang.Object
{
    private final com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator;
    private final double _shift;

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Calculator");

        r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator> = r1;

        r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift> = d0;

        return;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount r2, $r28, $r41, $r67, $r80, $r106, $r119;
        com.opengamma.util.money.MultipleCurrencyAmount r3, $r47, $r86, $r125, r143, r147, r148, r160, r164, r165, r177, r181, r182;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity $r5, r132;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor $r6, $r32, $r45, $r71, $r84, $r110, $r123;
        java.lang.Object $r7, $r12, $r17, $r22, $r33, $r35, $r46, $r49, $r51, $r56, $r61, $r72, $r74, $r85, $r88, $r90, $r95, $r100, $r111, $r113, $r124, $r127;
        java.util.ArrayList $r8;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount $r9, $r10, $r11, $r16, $r29, $r30, $r42, $r43, $r55, $r68, $r69, $r81, $r82, $r94, $r107, $r108, $r120, $r121;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.opengamma.analytics.math.curve.DoublesCurve $r13, $r14, $r52, $r53, $r91, $r92;
        double[] $r15, $r20, $r21, $r26, $r34, $r39, $r48, $r54, $r59, $r60, $r65, $r73, $r78, $r87, $r93, $r98, $r99, $r104, $r112, $r117, $r126, r140, r144, r157, r161, r174, r178;
        com.opengamma.util.tuple.Pair $r18, $r57, $r96;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r19, $r58, $r97;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve $r23, $r36, $r62, $r75, $r101, $r114, r137, r154, r171;
        java.lang.String $r24, $r37, $r63, $r76, $r102, $r115, r149, r166, r183;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r25, $r38, $r64, $r77, $r103, $r116, r138, r155, r172;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r27, $r40, $r66, $r79, $r105, $r118;
        com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters $r31, $r44, $r70, $r83, $r109, $r122;
        com.opengamma.util.money.Currency $r50, $r89, $r128, $r131, r135;
        com.opengamma.util.money.CurrencyAmount[] $r129;
        com.opengamma.util.money.CurrencyAmount $r130;
        java.util.Set r133, r150, r167;
        java.util.Iterator r134, r151, r168;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r136, r153, r170;
        double[][] r139, r156, r173;
        com.opengamma.analytics.financial.instrument.index.IndexON r152;
        com.opengamma.analytics.financial.instrument.index.IborIndex r169;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount;

        $r5 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity;

        specialinvoke $r5.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: void <init>()>();

        r132 = $r5;

        $r6 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r7 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r6, r2);

        r3 = (com.opengamma.util.money.MultipleCurrencyAmount) $r7;

        i0 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: int size()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $r129 = virtualinvoke r3.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.CurrencyAmount[] getCurrencyAmounts()>();

        $r130 = $r129[i1];

        $r131 = virtualinvoke $r130.<com.opengamma.util.money.CurrencyAmount: com.opengamma.util.money.Currency getCurrency()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r131);

        i1 = i1 + 1;

        goto label01;

     label02:
        $r9 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r133 = virtualinvoke $r9.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getCurrencies()>();

        r134 = interfaceinvoke r133.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r134.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r90 = interfaceinvoke r134.<java.util.Iterator: java.lang.Object next()>();

        r135 = (com.opengamma.util.money.Currency) $r90;

        r136 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.util.money.Currency)>(r135);

        $z7 = r136 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z7, "Curve should be a YieldCurve");

        r137 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r136;

        $r91 = virtualinvoke r137.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z8 = $r91 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z8, "Yield curve should be based on InterpolatedDoublesCurve");

        $r92 = virtualinvoke r137.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r138 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r92;

        $r93 = virtualinvoke r138.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i2 = lengthof $r93;

        r139 = newmultiarray (double)[i0][i2];

        i3 = 0;

     label04:
        if i3 >= i2 goto label07;

        $r99 = virtualinvoke r138.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r100 = virtualinvoke $r99.<java.lang.Object: java.lang.Object clone()>();

        r140 = (double[]) $r100;

        $d21 = r140[i3];

        $d20 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift>;

        $d22 = $d21 + $d20;

        r140[i3] = $d22;

        $r101 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r102 = virtualinvoke r138.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r103 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r104 = virtualinvoke r138.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r105 = virtualinvoke r138.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r103.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r104, r140, $r105, 1);

        specialinvoke $r101.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r102, $r103);

        $r106 = new com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount;

        $r107 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r108 = virtualinvoke $r107.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withDiscountFactor(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r135, $r101);

        $r109 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        specialinvoke $r106.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters)>($r108, $r109);

        $r110 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r111 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r110, $r106);

        r143 = (com.opengamma.util.money.MultipleCurrencyAmount) $r111;

        $r112 = virtualinvoke r138.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r113 = virtualinvoke $r112.<java.lang.Object: java.lang.Object clone()>();

        r144 = (double[]) $r113;

        $d24 = r144[i3];

        $d23 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift>;

        $d25 = $d24 - $d23;

        r144[i3] = $d25;

        $r114 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r115 = virtualinvoke r138.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r116 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r117 = virtualinvoke r138.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r118 = virtualinvoke r138.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r116.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r117, r144, $r118, 1);

        specialinvoke $r114.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r115, $r116);

        $r119 = new com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount;

        $r120 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r121 = virtualinvoke $r120.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withDiscountFactor(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r135, $r114);

        $r122 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        specialinvoke $r119.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters)>($r121, $r122);

        $r123 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r124 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r123, $r119);

        r147 = (com.opengamma.util.money.MultipleCurrencyAmount) $r124;

        $r125 = virtualinvoke r147.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>(-1.0);

        r148 = virtualinvoke r143.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>($r125);

        i4 = 0;

     label05:
        if i4 >= i0 goto label06;

        $r126 = r139[i4];

        $r127 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i4);

        $r128 = (com.opengamma.util.money.Currency) $r127;

        $d26 = virtualinvoke r148.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r128);

        $d27 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift>;

        $d28 = 2.0 * $d27;

        $d29 = $d26 / $d28;

        $r126[i3] = $d29;

        i4 = i4 + 1;

        goto label05;

     label06:
        i3 = i3 + 1;

        goto label04;

     label07:
        $r94 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r149 = virtualinvoke $r94.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.util.money.Currency)>(r135);

        i5 = 0;

     label08:
        if i5 >= i0 goto label09;

        $r95 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i5);

        $r96 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r149, $r95);

        $r97 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r98 = r139[i5];

        specialinvoke $r97.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r98);

        r132 = virtualinvoke r132.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r96, $r97);

        i5 = i5 + 1;

        goto label08;

     label09:
        goto label03;

     label10:
        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r150 = virtualinvoke $r10.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesON()>();

        r151 = interfaceinvoke r150.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r151.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r51 = interfaceinvoke r151.<java.util.Iterator: java.lang.Object next()>();

        r152 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r51;

        r153 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IndexON)>(r152);

        $z5 = r153 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z5, "Curve should be a YieldCurve");

        r154 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r153;

        $r52 = virtualinvoke r154.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z6 = $r52 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z6, "Yield curve should be based on InterpolatedDoublesCurve");

        $r53 = virtualinvoke r154.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r155 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r53;

        $r54 = virtualinvoke r155.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i6 = lengthof $r54;

        r156 = newmultiarray (double)[i0][i6];

        i7 = 0;

     label12:
        if i7 >= i6 goto label15;

        $r60 = virtualinvoke r155.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r61 = virtualinvoke $r60.<java.lang.Object: java.lang.Object clone()>();

        r157 = (double[]) $r61;

        $d11 = r157[i7];

        $d10 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift>;

        $d12 = $d11 + $d10;

        r157[i7] = $d12;

        $r62 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r63 = virtualinvoke r155.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r64 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r65 = virtualinvoke r155.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r66 = virtualinvoke r155.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r64.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r65, r157, $r66, 1);

        specialinvoke $r62.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r63, $r64);

        $r67 = new com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount;

        $r68 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r69 = virtualinvoke $r68.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r152, $r62);

        $r70 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        specialinvoke $r67.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters)>($r69, $r70);

        $r71 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r72 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r71, $r67);

        r160 = (com.opengamma.util.money.MultipleCurrencyAmount) $r72;

        $r73 = virtualinvoke r155.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r74 = virtualinvoke $r73.<java.lang.Object: java.lang.Object clone()>();

        r161 = (double[]) $r74;

        $d14 = r161[i7];

        $d13 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift>;

        $d15 = $d14 - $d13;

        r161[i7] = $d15;

        $r75 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r76 = virtualinvoke r155.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r77 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r78 = virtualinvoke r155.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r79 = virtualinvoke r155.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r77.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r78, r161, $r79, 1);

        specialinvoke $r75.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r76, $r77);

        $r80 = new com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount;

        $r81 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r82 = virtualinvoke $r81.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IndexON,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r152, $r75);

        $r83 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        specialinvoke $r80.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters)>($r82, $r83);

        $r84 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r85 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r84, $r80);

        r164 = (com.opengamma.util.money.MultipleCurrencyAmount) $r85;

        $r86 = virtualinvoke r164.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>(-1.0);

        r165 = virtualinvoke r160.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>($r86);

        i8 = 0;

     label13:
        if i8 >= i0 goto label14;

        $r87 = r156[i8];

        $r88 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i8);

        $r89 = (com.opengamma.util.money.Currency) $r88;

        $d16 = virtualinvoke r165.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r89);

        $d17 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift>;

        $d18 = 2.0 * $d17;

        $d19 = $d16 / $d18;

        $r87[i7] = $d19;

        i8 = i8 + 1;

        goto label13;

     label14:
        i7 = i7 + 1;

        goto label12;

     label15:
        $r55 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r166 = virtualinvoke $r55.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)>(r152);

        i9 = 0;

     label16:
        if i9 >= i0 goto label17;

        $r56 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i9);

        $r57 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r166, $r56);

        $r58 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r59 = r156[i9];

        specialinvoke $r58.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r59);

        r132 = virtualinvoke r132.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r57, $r58);

        i9 = i9 + 1;

        goto label16;

     label17:
        goto label11;

     label18:
        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r167 = virtualinvoke $r11.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getIndexesIbor()>();

        r168 = interfaceinvoke r167.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z2 = interfaceinvoke r168.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label26;

        $r12 = interfaceinvoke r168.<java.util.Iterator: java.lang.Object next()>();

        r169 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r12;

        r170 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r169);

        $z3 = r170 instanceof com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "Curve should be a YieldCurve");

        r171 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve) r170;

        $r13 = virtualinvoke r171.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        $z4 = $r13 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z4, "Yield curve should be based on InterpolatedDoublesCurve");

        $r14 = virtualinvoke r171.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: com.opengamma.analytics.math.curve.DoublesCurve getCurve()>();

        r172 = (com.opengamma.analytics.math.curve.InterpolatedDoublesCurve) $r14;

        $r15 = virtualinvoke r172.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        i10 = lengthof $r15;

        r173 = newmultiarray (double)[i0][i10];

        i11 = 0;

     label20:
        if i11 >= i10 goto label23;

        $r21 = virtualinvoke r172.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.Object clone()>();

        r174 = (double[]) $r22;

        $d1 = r174[i11];

        $d0 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift>;

        $d2 = $d1 + $d0;

        r174[i11] = $d2;

        $r23 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r24 = virtualinvoke r172.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r25 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r26 = virtualinvoke r172.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r27 = virtualinvoke r172.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r25.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r26, r174, $r27, 1);

        specialinvoke $r23.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r24, $r25);

        $r28 = new com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount;

        $r29 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r30 = virtualinvoke $r29.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r169, $r23);

        $r31 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        specialinvoke $r28.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters)>($r30, $r31);

        $r32 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r33 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r32, $r28);

        r177 = (com.opengamma.util.money.MultipleCurrencyAmount) $r33;

        $r34 = virtualinvoke r172.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getYDataAsPrimitive()>();

        $r35 = virtualinvoke $r34.<java.lang.Object: java.lang.Object clone()>();

        r178 = (double[]) $r35;

        $d4 = r178[i11];

        $d3 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift>;

        $d5 = $d4 - $d3;

        r178[i11] = $d5;

        $r36 = new com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve;

        $r37 = virtualinvoke r172.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: java.lang.String getName()>();

        $r38 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r39 = virtualinvoke r172.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: double[] getXDataAsPrimitive()>();

        $r40 = virtualinvoke r172.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        specialinvoke $r38.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r39, r178, $r40, 1);

        specialinvoke $r36.<com.opengamma.analytics.financial.model.interestrate.curve.YieldCurve: void <init>(java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve)>($r37, $r38);

        $r41 = new com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount;

        $r42 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        $r43 = virtualinvoke $r42.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IborIndex,com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)>(r169, $r36);

        $r44 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters getBlackParameters()>();

        specialinvoke $r41.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount,com.opengamma.analytics.financial.model.option.parameters.BlackFlatSwaptionParameters)>($r43, $r44);

        $r45 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor _valueCalculator>;

        $r46 = interfaceinvoke r1.<com.opengamma.analytics.financial.interestrate.InstrumentDerivative: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r45, $r41);

        r181 = (com.opengamma.util.money.MultipleCurrencyAmount) $r46;

        $r47 = virtualinvoke r181.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount multipliedBy(double)>(-1.0);

        r182 = virtualinvoke r177.<com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount plus(com.opengamma.util.money.MultipleCurrencyAmount)>($r47);

        i12 = 0;

     label21:
        if i12 >= i0 goto label22;

        $r48 = r173[i12];

        $r49 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i12);

        $r50 = (com.opengamma.util.money.Currency) $r49;

        $d6 = virtualinvoke r182.<com.opengamma.util.money.MultipleCurrencyAmount: double getAmount(com.opengamma.util.money.Currency)>($r50);

        $d7 = r0.<com.opengamma.analytics.financial.provider.sensitivity.blackswaption.ParameterSensitivityBlackSwaptionDiscountInterpolatedFDCalculator: double _shift>;

        $d8 = 2.0 * $d7;

        $d9 = $d6 / $d8;

        $r48[i11] = $d9;

        i12 = i12 + 1;

        goto label21;

     label22:
        i11 = i11 + 1;

        goto label20;

     label23:
        $r16 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.BlackSwaptionFlatProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount getMulticurveProvider()>();

        r183 = virtualinvoke $r16.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>(r169);

        i13 = 0;

     label24:
        if i13 >= i0 goto label25;

        $r17 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i13);

        $r18 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r183, $r17);

        $r19 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r20 = r173[i13];

        specialinvoke $r19.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r20);

        r132 = virtualinvoke r132.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyParameterSensitivity plus(com.opengamma.util.tuple.Pair,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r18, $r19);

        i13 = i13 + 1;

        goto label24;

     label25:
        goto label19;

     label26:
        return r132;
    }
}
