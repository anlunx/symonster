public class org.apache.commons.math.exception.NumberIsTooSmallException extends org.apache.commons.math.exception.MathIllegalNumberException
{
    private static final long serialVersionUID;
    private final java.lang.Number min;
    private final boolean boundIsAllowed;

    public void <init>(java.lang.Number, java.lang.Number, boolean)
    {
        org.apache.commons.math.exception.NumberIsTooSmallException r0;
        java.lang.Number r1, r2;
        boolean z0;

        r0 := @this: org.apache.commons.math.exception.NumberIsTooSmallException;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.math.exception.NumberIsTooSmallException: void <init>(org.apache.commons.math.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>(null, r1, r2, z0);

        return;
    }

    public void <init>(org.apache.commons.math.exception.util.Localizable, java.lang.Number, java.lang.Number, boolean)
    {
        org.apache.commons.math.exception.NumberIsTooSmallException r0;
        org.apache.commons.math.exception.util.Localizable r1;
        java.lang.Number r2, r3;
        boolean z0;
        java.lang.Object[] $r4;
        org.apache.commons.math.exception.util.LocalizedFormats $r7;

        r0 := @this: org.apache.commons.math.exception.NumberIsTooSmallException;

        r1 := @parameter0: org.apache.commons.math.exception.util.Localizable;

        r2 := @parameter1: java.lang.Number;

        r3 := @parameter2: java.lang.Number;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r7 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NUMBER_TOO_SMALL>;

        goto label2;

     label1:
        $r7 = <org.apache.commons.math.exception.util.LocalizedFormats: org.apache.commons.math.exception.util.LocalizedFormats NUMBER_TOO_SMALL_BOUND_EXCLUDED>;

     label2:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r3;

        specialinvoke r0.<org.apache.commons.math.exception.MathIllegalNumberException: void <init>(org.apache.commons.math.exception.util.Localizable,org.apache.commons.math.exception.util.Localizable,java.lang.Number,java.lang.Object[])>(r1, $r7, r2, $r4);

        r0.<org.apache.commons.math.exception.NumberIsTooSmallException: java.lang.Number min> = r3;

        r0.<org.apache.commons.math.exception.NumberIsTooSmallException: boolean boundIsAllowed> = z0;

        return;
    }

    public boolean getBoundIsAllowed()
    {
        org.apache.commons.math.exception.NumberIsTooSmallException r0;
        boolean $z0;

        r0 := @this: org.apache.commons.math.exception.NumberIsTooSmallException;

        $z0 = r0.<org.apache.commons.math.exception.NumberIsTooSmallException: boolean boundIsAllowed>;

        return $z0;
    }

    public java.lang.Number getMin()
    {
        org.apache.commons.math.exception.NumberIsTooSmallException r0;
        java.lang.Number $r1;

        r0 := @this: org.apache.commons.math.exception.NumberIsTooSmallException;

        $r1 = r0.<org.apache.commons.math.exception.NumberIsTooSmallException: java.lang.Number min>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math.exception.NumberIsTooSmallException: long serialVersionUID> = -6100997100383932834L;

        return;
    }
}
