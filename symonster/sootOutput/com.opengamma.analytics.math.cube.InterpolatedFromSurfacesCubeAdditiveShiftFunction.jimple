public class com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction extends java.lang.Object implements com.opengamma.analytics.math.cube.CubeShiftFunction
{

    public void <init>()
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube, double)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube r1, $r7;
        double d0;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        d0 := @parameter1: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARALLEL_SHIFT_");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double,java.lang.String)>(r1, d0, $r6);

        return $r7;
    }

    public com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube, double, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube r1, $r8;
        double d0;
        java.lang.String r2;
        double[] r3;
        com.opengamma.analytics.math.surface.Surface[] r4, r5;
        int i0, $i1, i2;
        com.opengamma.analytics.math.Plane $r6;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r7;
        com.opengamma.analytics.math.surface.Surface $r9, $r10;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "cube");

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: double[] getPoints()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        i0 = lengthof r4;

        $i1 = lengthof r4;

        r5 = newarray (com.opengamma.analytics.math.surface.Surface)[$i1];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r9 = r4[i2];

        $r10 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,boolean)>($r9, d0, 1);

        r5[i2] = $r10;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r8 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube 'from'(com.opengamma.analytics.math.Plane,double[],com.opengamma.analytics.math.surface.Surface[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>($r6, r3, r5, $r7, r2);

        return $r8;
    }

    public com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube, double, double, double, double)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube r1, $r7;
        double d0, d1, d2, d3;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SINGLE_SHIFT_");

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double,double,double,double,java.lang.String)>(r1, d0, d1, d2, d3, $r6);

        return $r7;
    }

    public com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube, double, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube r1, $r19, $r31, $r43;
        double d0, d1, d2, d3;
        java.lang.String r2, $r12, $r24, $r36;
        double[] r3;
        com.opengamma.analytics.math.Plane $r4, $r5, $r6, $r7, $r17, $r29, $r41;
        java.lang.UnsupportedOperationException $r8, $r20, $r32;
        java.lang.StringBuilder $r9, $r10, $r11, $r21, $r22, $r23, $r33, $r34, $r35;
        com.opengamma.analytics.math.surface.Surface[] $r13, $r25, $r37, r44, r45, r46, r47, r48, r49;
        int $i0, $i1, $i2, i3, i4, i5;
        java.lang.Object[] $r14, $r26, $r38;
        com.opengamma.analytics.math.surface.Surface $r15, $r16, $r27, $r28, $r39, $r40;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r18, $r30, $r42;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        r2 := @parameter5: java.lang.String;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "cube");

        r3 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: double[] getPoints()>();

        $r4 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r5 = <com.opengamma.analytics.math.Plane: com.opengamma.analytics.math.Plane ZX>;

        if $r4 != $r5 goto label2;

        i3 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r3, d1);

        r44 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        if i3 < 0 goto label1;

        $r37 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        $i2 = lengthof r3;

        $r38 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r37, $i2);

        r45 = (com.opengamma.analytics.math.surface.Surface[]) $r38;

        $r39 = r44[i3];

        $r40 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,double,double,boolean)>($r39, d0, d2, d3, 1);

        r45[i3] = $r40;

        $r41 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r42 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r43 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube fromSorted(com.opengamma.analytics.math.Plane,double[],com.opengamma.analytics.math.surface.Surface[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>($r41, r3, r45, $r42, r2);

        return $r43;

     label1:
        $r32 = new java.lang.UnsupportedOperationException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for y-value not in original list of curves: asked for ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r36);

        throw $r32;

     label2:
        $r6 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r7 = <com.opengamma.analytics.math.Plane: com.opengamma.analytics.math.Plane XY>;

        if $r6 != $r7 goto label4;

        i4 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r3, d2);

        r46 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        if i4 < 0 goto label3;

        $r25 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        $i1 = lengthof r3;

        $r26 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r25, $i1);

        r47 = (com.opengamma.analytics.math.surface.Surface[]) $r26;

        $r27 = r46[i4];

        $r28 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,double,double,boolean)>($r27, d0, d1, d3, 1);

        r47[i4] = $r28;

        $r29 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r30 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r31 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube fromSorted(com.opengamma.analytics.math.Plane,double[],com.opengamma.analytics.math.surface.Surface[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>($r29, r3, r47, $r30, r2);

        return $r31;

     label3:
        $r20 = new java.lang.UnsupportedOperationException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for z-value not in original list of curves: asked for ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label4:
        i5 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r3, d0);

        r48 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        if i5 < 0 goto label5;

        $r13 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        $i0 = lengthof r3;

        $r14 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r13, $i0);

        r49 = (com.opengamma.analytics.math.surface.Surface[]) $r14;

        $r15 = r48[i5];

        $r16 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,double,double,boolean)>($r15, d1, d2, d3, 1);

        r49[i5] = $r16;

        $r17 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r19 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube fromSorted(com.opengamma.analytics.math.Plane,double[],com.opengamma.analytics.math.surface.Surface[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>($r17, r3, r49, $r18, r2);

        return $r19;

     label5:
        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for x-value not in original list of curves: asked for ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r12);

        throw $r8;
    }

    public com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube, double[], double[], double[], double[])
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube r1, $r11;
        double[] r2, r3, r4, r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MULTIPLE_SHIFT_");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double[],double[],double[],double[],java.lang.String)>(r1, r2, r3, r4, r5, $r10);

        return $r11;
    }

    public com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube, double[], double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube r1, $r14, $r26, $r38, $r50;
        double[] r2, r3, r4, r5, r7, $r47;
        java.lang.String r6, $r19, $r31, $r43;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;
        com.opengamma.analytics.math.Plane $r8, $r9, $r12, $r24, $r36, $r46, $r51, $r52;
        com.opengamma.analytics.math.surface.Surface[] $r10, $r22, $r34, $r48, r53, r54, r55;
        java.lang.Object[] $r11, $r23, $r35;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r13, $r25, $r37, $r49;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        java.lang.UnsupportedOperationException $r15, $r27, $r39;
        java.lang.StringBuilder $r16, $r17, $r18, $r28, $r29, $r30, $r40, $r41, $r42;
        com.opengamma.analytics.math.surface.Surface $r20, $r21, $r32, $r33, $r44, $r45;
        boolean $z0, z1, z2, z3;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: java.lang.String;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "x shifts");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "y shifts");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r3, "z shifts");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r5, "shifts");

        i0 = lengthof r2;

        if i0 != 0 goto label01;

        $r46 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r47 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: double[] getPoints()>();

        $r48 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        $r49 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r50 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube 'from'(com.opengamma.analytics.math.Plane,double[],com.opengamma.analytics.math.surface.Surface[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>($r46, $r47, $r48, $r49, r6);

        return $r50;

     label01:
        $i1 = lengthof r3;

        if i0 != $i1 goto label02;

        $i5 = lengthof r5;

        if i0 != $i5 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r7 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: double[] getPoints()>();

        $r51 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r52 = <com.opengamma.analytics.math.Plane: com.opengamma.analytics.math.Plane ZX>;

        if $r51 != $r52 goto label08;

        $r34 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        $i4 = lengthof r7;

        $r35 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r34, $i4);

        r53 = (com.opengamma.analytics.math.surface.Surface[]) $r35;

        i6 = 0;

     label04:
        if i6 >= i0 goto label07;

        $d10 = r3[i6];

        i7 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r7, $d10);

        z1 = 0;

        if i7 < 0 goto label05;

        $r44 = r53[i7];

        $d14 = r2[i6];

        $d13 = r4[i6];

        $d12 = r5[i6];

        $r45 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,double,double,boolean)>($r44, $d14, $d13, $d12, 1);

        r53[i7] = $r45;

        z1 = 1;

     label05:
        if z1 != 0 goto label06;

        $r39 = new java.lang.UnsupportedOperationException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for y-value not in original list of curves: asked for ");

        $d11 = r3[i6];

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d11);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r43);

        throw $r39;

     label06:
        i6 = i6 + 1;

        goto label04;

     label07:
        $r36 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r37 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r38 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube fromSorted(com.opengamma.analytics.math.Plane,double[],com.opengamma.analytics.math.surface.Surface[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>($r36, r7, r53, $r37, r6);

        return $r38;

     label08:
        $r8 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r9 = <com.opengamma.analytics.math.Plane: com.opengamma.analytics.math.Plane XY>;

        if $r8 != $r9 goto label13;

        $r22 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        $i3 = lengthof r7;

        $r23 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r22, $i3);

        r54 = (com.opengamma.analytics.math.surface.Surface[]) $r23;

        i8 = 0;

     label09:
        if i8 >= i0 goto label12;

        $d5 = r4[i8];

        i9 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r7, $d5);

        z2 = 0;

        if i9 < 0 goto label10;

        $r32 = r54[i9];

        $d9 = r2[i8];

        $d8 = r3[i8];

        $d7 = r5[i8];

        $r33 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,double,double,boolean)>($r32, $d9, $d8, $d7, 1);

        r54[i9] = $r33;

        z2 = 1;

     label10:
        if z2 != 0 goto label11;

        $r27 = new java.lang.UnsupportedOperationException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for z-value not in original list of curves: asked for ");

        $d6 = r4[i8];

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d6);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r31);

        throw $r27;

     label11:
        i8 = i8 + 1;

        goto label09;

     label12:
        $r24 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r26 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube fromSorted(com.opengamma.analytics.math.Plane,double[],com.opengamma.analytics.math.surface.Surface[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>($r24, r7, r54, $r25, r6);

        return $r26;

     label13:
        $r10 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.surface.Surface[] getSurfaces()>();

        $i2 = lengthof r7;

        $r11 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r10, $i2);

        r55 = (com.opengamma.analytics.math.surface.Surface[]) $r11;

        i10 = 0;

     label14:
        if i10 >= i0 goto label17;

        $d0 = r2[i10];

        i11 = staticinvoke <java.util.Arrays: int binarySearch(double[],double)>(r7, $d0);

        z3 = 0;

        if i11 < 0 goto label15;

        $r20 = r55[i11];

        $d4 = r3[i10];

        $d3 = r4[i10];

        $d2 = r5[i10];

        $r21 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,double,double,boolean)>($r20, $d4, $d3, $d2, 1);

        r55[i11] = $r21;

        z3 = 1;

     label15:
        if z3 != 0 goto label16;

        $r15 = new java.lang.UnsupportedOperationException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get shift for x-value not in original list of curves: asked for ");

        $d1 = r2[i10];

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label16:
        i10 = i10 + 1;

        goto label14;

     label17:
        $r12 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.Plane getPlane()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.interpolation.Interpolator1D getInterpolator()>();

        $r14 = staticinvoke <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube fromSorted(com.opengamma.analytics.math.Plane,double[],com.opengamma.analytics.math.surface.Surface[],com.opengamma.analytics.math.interpolation.Interpolator1D,java.lang.String)>($r12, r7, r55, $r13, r6);

        return $r14;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double[], double[], double[], double[], java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double[] r2, r3, r4, r5;
        java.lang.String r6;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r7, $r8;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        r6 := @parameter5: java.lang.String;

        $r7 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r1;

        $r8 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double[],double[],double[],double[],java.lang.String)>($r7, r2, r3, r4, r5, r6);

        return $r8;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double[], double[], double[], double[])
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double[] r2, r3, r4, r5;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r6, $r7;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: double[];

        r5 := @parameter4: double[];

        $r6 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r1;

        $r7 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double[],double[],double[],double[])>($r6, r2, r3, r4, r5);

        return $r7;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double, double, double, double, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double d0, d1, d2, d3;
        java.lang.String r2;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        r2 := @parameter5: java.lang.String;

        $r3 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double,double,double,double,java.lang.String)>($r3, d0, d1, d2, d3, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double, double, double, double)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double d0, d1, d2, d3;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        $r2 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double,double,double,double)>($r2, d0, d1, d2, d3);

        return $r3;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double, java.lang.String)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double d0;
        java.lang.String r2;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        r2 := @parameter2: java.lang.String;

        $r3 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double,java.lang.String)>($r3, d0, r2);

        return $r4;
    }

    public volatile com.opengamma.analytics.math.cube.Cube evaluate(com.opengamma.analytics.math.cube.Cube, double)
    {
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction r0;
        com.opengamma.analytics.math.cube.Cube r1;
        double d0;
        com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction;

        r1 := @parameter0: com.opengamma.analytics.math.cube.Cube;

        d0 := @parameter1: double;

        $r2 = (com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction: com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube evaluate(com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,double)>($r2, d0);

        return $r3;
    }
}
