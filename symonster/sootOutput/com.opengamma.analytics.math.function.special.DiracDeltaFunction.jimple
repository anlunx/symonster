public class com.opengamma.analytics.math.function.special.DiracDeltaFunction extends com.opengamma.analytics.math.function.Function1D
{

    public void <init>()
    {
        com.opengamma.analytics.math.function.special.DiracDeltaFunction r0;

        r0 := @this: com.opengamma.analytics.math.function.special.DiracDeltaFunction;

        specialinvoke r0.<com.opengamma.analytics.math.function.Function1D: void <init>()>();

        return;
    }

    public java.lang.Double evaluate(java.lang.Double)
    {
        com.opengamma.analytics.math.function.special.DiracDeltaFunction r0;
        java.lang.Double r1, $r2;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.function.special.DiracDeltaFunction;

        r1 := @parameter0: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "x");

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $z0 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double,double)>($d0, 0.0, 1.0E-16);

        if $z0 == 0 goto label1;

        $d1 = #Infinity;

        goto label2;

     label1:
        $d1 = 0.0;

     label2:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        return $r2;
    }

    public volatile java.lang.Object evaluate(java.lang.Object)
    {
        com.opengamma.analytics.math.function.special.DiracDeltaFunction r0;
        java.lang.Object r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.function.special.DiracDeltaFunction;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.function.special.DiracDeltaFunction: java.lang.Double evaluate(java.lang.Double)>($r2);

        return $r3;
    }
}
