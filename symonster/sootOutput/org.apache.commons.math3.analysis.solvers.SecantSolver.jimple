public class org.apache.commons.math3.analysis.solvers.SecantSolver extends org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver
{
    protected static final double DEFAULT_ABSOLUTE_ACCURACY;

    public void <init>()
    {
        org.apache.commons.math3.analysis.solvers.SecantSolver r0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.SecantSolver;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver: void <init>(double)>(1.0E-6);

        return;
    }

    public void <init>(double)
    {
        org.apache.commons.math3.analysis.solvers.SecantSolver r0;
        double d0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.SecantSolver;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver: void <init>(double)>(d0);

        return;
    }

    public void <init>(double, double)
    {
        org.apache.commons.math3.analysis.solvers.SecantSolver r0;
        double d0, d1;

        r0 := @this: org.apache.commons.math3.analysis.solvers.SecantSolver;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver: void <init>(double,double)>(d0, d1);

        return;
    }

    protected final double doSolve() throws org.apache.commons.math3.exception.TooManyEvaluationsException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.solvers.SecantSolver r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17, d18;
        byte $b0, $b1, $b2, $b3, $b4;

        r0 := @this: org.apache.commons.math3.analysis.solvers.SecantSolver;

        d15 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.SecantSolver: double getMin()>();

        d16 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.SecantSolver: double getMax()>();

        d17 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.SecantSolver: double computeObjectiveValue(double)>(d15);

        d18 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.SecantSolver: double computeObjectiveValue(double)>(d16);

        $b0 = d17 cmpl 0.0;

        if $b0 != 0 goto label1;

        return d15;

     label1:
        $b1 = d18 cmpl 0.0;

        if $b1 != 0 goto label2;

        return d16;

     label2:
        virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.SecantSolver: void verifyBracketing(double,double)>(d15, d16);

        d0 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.SecantSolver: double getFunctionValueAccuracy()>();

        d1 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.SecantSolver: double getAbsoluteAccuracy()>();

        d2 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.SecantSolver: double getRelativeAccuracy()>();

     label3:
        $d5 = d16 - d15;

        $d7 = d18 * $d5;

        $d6 = d18 - d17;

        $d8 = $d7 / $d6;

        d3 = d16 - $d8;

        d4 = virtualinvoke r0.<org.apache.commons.math3.analysis.solvers.SecantSolver: double computeObjectiveValue(double)>(d3);

        $b2 = d4 cmpl 0.0;

        if $b2 != 0 goto label4;

        return d3;

     label4:
        d15 = d16;

        d17 = d18;

        d16 = d3;

        d18 = d4;

        $d9 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d4);

        $b3 = $d9 cmpg d0;

        if $b3 > 0 goto label5;

        return d3;

     label5:
        $d10 = d3 - d15;

        $d11 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d10);

        $d12 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>(d3);

        $d13 = d2 * $d12;

        $d14 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d13, d1);

        $b4 = $d11 cmpg $d14;

        if $b4 >= 0 goto label6;

        return d3;

     label6:
        goto label3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.analysis.solvers.SecantSolver: double DEFAULT_ABSOLUTE_ACCURACY> = 1.0E-6;

        return;
    }
}
