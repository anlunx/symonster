public class org.apache.commons.math3.analysis.function.Logistic$Parametric extends java.lang.Object implements org.apache.commons.math3.analysis.ParametricUnivariateFunction
{

    public void <init>()
    {
        org.apache.commons.math3.analysis.function.Logistic$Parametric r0;

        r0 := @this: org.apache.commons.math3.analysis.function.Logistic$Parametric;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public transient double value(double, double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.analysis.function.Logistic$Parametric r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        double[] r1;

        r0 := @this: org.apache.commons.math3.analysis.function.Logistic$Parametric;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        specialinvoke r0.<org.apache.commons.math3.analysis.function.Logistic$Parametric: void validateParameters(double[])>(r1);

        $d1 = r1[1];

        $d8 = $d1 - d0;

        $d7 = r1[0];

        $d6 = r1[2];

        $d5 = r1[3];

        $d4 = r1[4];

        $d2 = r1[5];

        $d3 = 1.0 / $d2;

        $d9 = staticinvoke <org.apache.commons.math3.analysis.function.Logistic: double access$000(double,double,double,double,double,double)>($d8, $d7, $d6, $d5, $d4, $d3);

        return $d9;
    }

    public transient double[] gradient(double, double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.analysis.function.Logistic$Parametric r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28;
        double[] r1, $r2;

        r0 := @this: org.apache.commons.math3.analysis.function.Logistic$Parametric;

        d0 := @parameter0: double;

        r1 := @parameter1: double[];

        specialinvoke r0.<org.apache.commons.math3.analysis.function.Logistic$Parametric: void validateParameters(double[])>(r1);

        d1 = r1[2];

        d2 = r1[3];

        $d16 = r1[1];

        d3 = $d16 - d0;

        $d17 = r1[5];

        d4 = 1.0 / $d17;

        $d18 = d1 * d3;

        d5 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double)>($d18);

        d6 = d2 * d5;

        d7 = d6 + 1.0;

        $d20 = r1[0];

        $d19 = r1[4];

        $d21 = $d20 - $d19;

        $d22 = $d21 * d4;

        $d23 = staticinvoke <org.apache.commons.math3.util.FastMath: double pow(double,double)>(d7, d4);

        d8 = $d22 / $d23;

        $d24 = neg d8;

        d9 = $d24 / d7;

        d10 = staticinvoke <org.apache.commons.math3.analysis.function.Logistic: double access$000(double,double,double,double,double,double)>(d3, 1.0, d1, d2, 0.0, d4);

        $d25 = d9 * d1;

        d11 = $d25 * d6;

        $d26 = d9 * d3;

        d12 = $d26 * d6;

        d13 = d9 * d5;

        d14 = staticinvoke <org.apache.commons.math3.analysis.function.Logistic: double access$000(double,double,double,double,double,double)>(d3, 0.0, d1, d2, 1.0, d4);

        $d27 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>(d7);

        $d28 = d8 * $d27;

        d15 = $d28 * d4;

        $r2 = newarray (double)[6];

        $r2[0] = d10;

        $r2[1] = d11;

        $r2[2] = d12;

        $r2[3] = d13;

        $r2[4] = d14;

        $r2[5] = d15;

        return $r2;
    }

    private void validateParameters(double[]) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NotStrictlyPositiveException
    {
        org.apache.commons.math3.analysis.function.Logistic$Parametric r0;
        double[] r1;
        int $i0, $i2;
        double $d0, $d1;
        byte $b1;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r2;
        java.lang.Double $r3;
        org.apache.commons.math3.exception.DimensionMismatchException $r4;
        org.apache.commons.math3.exception.NullArgumentException $r5;

        r0 := @this: org.apache.commons.math3.analysis.function.Logistic$Parametric;

        r1 := @parameter0: double[];

        if r1 != null goto label1;

        $r5 = new org.apache.commons.math3.exception.NullArgumentException;

        specialinvoke $r5.<org.apache.commons.math3.exception.NullArgumentException: void <init>()>();

        throw $r5;

     label1:
        $i0 = lengthof r1;

        if $i0 == 6 goto label2;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i2 = lengthof r1;

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i2, 6);

        throw $r4;

     label2:
        $d0 = r1[5];

        $b1 = $d0 cmpg 0.0;

        if $b1 > 0 goto label3;

        $r2 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $d1 = r1[5];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        specialinvoke $r2.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r3);

        throw $r2;

     label3:
        return;
    }
}
