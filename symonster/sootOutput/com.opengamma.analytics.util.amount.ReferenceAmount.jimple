public class com.opengamma.analytics.util.amount.ReferenceAmount extends org.joda.beans.impl.direct.DirectBean
{
    private final java.util.HashMap _data;

    public void <init>()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        java.util.HashMap $r1;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        specialinvoke r0.<org.joda.beans.impl.direct.DirectBean: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data> = $r1;

        return;
    }

    private void <init>(java.util.HashMap)
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        java.util.HashMap r1;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        r1 := @parameter0: java.util.HashMap;

        specialinvoke r0.<org.joda.beans.impl.direct.DirectBean: void <init>()>();

        r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data> = r1;

        return;
    }

    public java.util.HashMap getMap()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        java.util.HashMap $r1;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r1 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        return $r1;
    }

    public void add(java.lang.Object, java.lang.Double)
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        java.lang.Object r1, $r9;
        java.lang.Double r2, $r10, $r11;
        java.util.HashMap $r4, $r5, $r7, $r8;
        boolean $z0;
        double $d0, $d1, $d2;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Point");

        $r4 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r8 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (java.lang.Double) $r9;

        $d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $d2 = $d0 + $d1;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

        goto label2;

     label1:
        $r5 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        return;
    }

    public com.opengamma.analytics.util.amount.ReferenceAmount plus(com.opengamma.analytics.util.amount.ReferenceAmount)
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0, r1, $r8;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.util.HashMap $r6, $r7, $r9;
        java.util.Set $r10;
        boolean $z0;
        java.lang.Object $r11, $r12, $r13;
        java.lang.Double $r14;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        r1 := @parameter0: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r6 = new java.util.HashMap;

        $r7 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        specialinvoke $r6.<java.util.HashMap: void <init>(java.util.Map)>($r7);

        $r8 = new com.opengamma.analytics.util.amount.ReferenceAmount;

        specialinvoke $r8.<com.opengamma.analytics.util.amount.ReferenceAmount: void <init>(java.util.HashMap)>($r6);

        $r9 = r1.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.Double) $r13;

        virtualinvoke $r8.<com.opengamma.analytics.util.amount.ReferenceAmount: void add(java.lang.Object,java.lang.Double)>($r12, $r14);

        goto label1;

     label2:
        return $r8;
    }

    public com.opengamma.analytics.util.amount.ReferenceAmount multiplyBy(double)
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0, $r7;
        double d0, $d1, $d2;
        java.util.Iterator r2;
        java.lang.Object r3, $r9;
        java.util.HashMap $r4, $r5, $r8;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Double $r10, $r11;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        d0 := @parameter0: double;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r10 = (java.lang.Double) $r9;

        $d1 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $d2 = $d1 * d0;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r11);

        goto label1;

     label2:
        $r7 = new com.opengamma.analytics.util.amount.ReferenceAmount;

        specialinvoke $r7.<com.opengamma.analytics.util.amount.ReferenceAmount: void <init>(java.util.HashMap)>($r4);

        return $r7;
    }

    public static com.opengamma.analytics.util.amount.ReferenceAmount$Meta meta()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount$Meta $r0;

        $r0 = <com.opengamma.analytics.util.amount.ReferenceAmount$Meta: com.opengamma.analytics.util.amount.ReferenceAmount$Meta INSTANCE>;

        return $r0;
    }

    public static com.opengamma.analytics.util.amount.ReferenceAmount$Meta metaReferenceAmount(java.lang.Class)
    {
        java.lang.Class r0;
        com.opengamma.analytics.util.amount.ReferenceAmount$Meta $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = <com.opengamma.analytics.util.amount.ReferenceAmount$Meta: com.opengamma.analytics.util.amount.ReferenceAmount$Meta INSTANCE>;

        return $r1;
    }

    public com.opengamma.analytics.util.amount.ReferenceAmount$Meta metaBean()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        com.opengamma.analytics.util.amount.ReferenceAmount$Meta $r1;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r1 = <com.opengamma.analytics.util.amount.ReferenceAmount$Meta: com.opengamma.analytics.util.amount.ReferenceAmount$Meta INSTANCE>;

        return $r1;
    }

    public java.util.HashMap getData()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        java.util.HashMap $r1;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r1 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        return $r1;
    }

    public void setData(java.util.HashMap)
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        java.util.HashMap r1, $r2, $r3;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        r1 := @parameter0: java.util.HashMap;

        staticinvoke <org.joda.beans.JodaBeanUtils: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        $r2 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        virtualinvoke $r2.<java.util.HashMap: void clear()>();

        $r3 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        virtualinvoke $r3.<java.util.HashMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public final org.joda.beans.Property data()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        com.opengamma.analytics.util.amount.ReferenceAmount$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;
        org.joda.beans.Bean r4;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.util.amount.ReferenceAmount: com.opengamma.analytics.util.amount.ReferenceAmount$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.util.amount.ReferenceAmount$Meta: org.joda.beans.MetaProperty data()>();

        r4 = (org.joda.beans.Bean) r0;

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r4);

        return $r3;
    }

    public com.opengamma.analytics.util.amount.ReferenceAmount clone()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0, $r2;
        org.joda.beans.Bean $r1, r3;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        r3 = (org.joda.beans.Bean) r0;

        $r1 = staticinvoke <org.joda.beans.JodaBeanUtils: org.joda.beans.Bean cloneAlways(org.joda.beans.Bean)>(r3);

        $r2 = (com.opengamma.analytics.util.amount.ReferenceAmount) $r1;

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.HashMap $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != $r4 goto label2;

        r2 = (com.opengamma.analytics.util.amount.ReferenceAmount) r1;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap getData()>();

        $r6 = virtualinvoke r2.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap getData()>();

        $z0 = staticinvoke <org.joda.beans.JodaBeanUtils: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        return $z0;

     label2:
        return 0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        java.lang.Class $r1;
        int $i0, $i1, i2, i3;
        java.util.HashMap $r2;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        i2 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = i2 * 31;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap getData()>();

        $i1 = staticinvoke <org.joda.beans.JodaBeanUtils: int hashCode(java.lang.Object)>($r2);

        i3 = $i0 + $i1;

        return i3;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ReferenceAmount{");

        i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r0.<com.opengamma.analytics.util.amount.ReferenceAmount: void toString(java.lang.StringBuilder)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label1;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void toString(java.lang.StringBuilder)
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r7;
        java.util.HashMap $r4;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        r1 := @parameter0: java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r4 = virtualinvoke r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap getData()>();

        $r5 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        return;
    }

    public volatile org.joda.beans.impl.direct.DirectBean clone()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0, $r1;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.util.amount.ReferenceAmount: com.opengamma.analytics.util.amount.ReferenceAmount clone()>();

        return $r1;
    }

    public volatile org.joda.beans.MetaBean metaBean()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        com.opengamma.analytics.util.amount.ReferenceAmount$Meta $r1;
        org.joda.beans.MetaBean r2;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.util.amount.ReferenceAmount: com.opengamma.analytics.util.amount.ReferenceAmount$Meta metaBean()>();

        r2 = (org.joda.beans.MetaBean) $r1;

        return r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0, $r1;

        r0 := @this: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.util.amount.ReferenceAmount: com.opengamma.analytics.util.amount.ReferenceAmount clone()>();

        return $r1;
    }

    static java.util.HashMap access$000(com.opengamma.analytics.util.amount.ReferenceAmount)
    {
        com.opengamma.analytics.util.amount.ReferenceAmount r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.opengamma.analytics.util.amount.ReferenceAmount;

        $r1 = r0.<com.opengamma.analytics.util.amount.ReferenceAmount: java.util.HashMap _data>;

        return $r1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.util.amount.ReferenceAmount$Meta $r0;
        org.joda.beans.MetaBean r1;

        $r0 = <com.opengamma.analytics.util.amount.ReferenceAmount$Meta: com.opengamma.analytics.util.amount.ReferenceAmount$Meta INSTANCE>;

        r1 = (org.joda.beans.MetaBean) $r0;

        staticinvoke <org.joda.beans.JodaBeanUtils: void registerMetaBean(org.joda.beans.MetaBean)>(r1);

        return;
    }
}
