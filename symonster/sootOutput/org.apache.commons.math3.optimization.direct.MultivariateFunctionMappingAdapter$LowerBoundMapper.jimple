class org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper extends java.lang.Object implements org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$Mapper
{
    private final double lower;

    public void <init>(double)
    {
        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper r0;
        double d0;

        r0 := @this: org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper: double lower> = d0;

        return;
    }

    public double unboundedToBounded(double)
    {
        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper r0;
        double d0, $d1, $d2, $d3;

        r0 := @this: org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper;

        d0 := @parameter0: double;

        $d1 = r0.<org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper: double lower>;

        $d2 = staticinvoke <org.apache.commons.math3.util.FastMath: double exp(double)>(d0);

        $d3 = $d1 + $d2;

        return $d3;
    }

    public double boundedToUnbounded(double)
    {
        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper r0;
        double d0, $d1, $d2, $d3;

        r0 := @this: org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper;

        d0 := @parameter0: double;

        $d1 = r0.<org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper: double lower>;

        $d2 = d0 - $d1;

        $d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double log(double)>($d2);

        return $d3;
    }
}
