public class com.opengamma.analytics.math.curve.SpreadDoublesCurve extends com.opengamma.analytics.math.curve.DoublesCurve
{
    private com.opengamma.analytics.math.curve.CurveSpreadFunction _spreadFunction;
    private com.opengamma.analytics.math.function.Function _f;
    private com.opengamma.analytics.math.curve.DoublesCurve[] _curves;

    public static transient com.opengamma.analytics.math.curve.SpreadDoublesCurve 'from'(com.opengamma.analytics.math.curve.CurveSpreadFunction, com.opengamma.analytics.math.curve.DoublesCurve[])
    {
        com.opengamma.analytics.math.curve.CurveSpreadFunction r0;
        com.opengamma.analytics.math.curve.DoublesCurve[] r1;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r2;

        r0 := @parameter0: com.opengamma.analytics.math.curve.CurveSpreadFunction;

        r1 := @parameter1: com.opengamma.analytics.math.curve.DoublesCurve[];

        $r2 = new com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        specialinvoke $r2.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: void <init>(com.opengamma.analytics.math.curve.CurveSpreadFunction,com.opengamma.analytics.math.curve.DoublesCurve[])>(r0, r1);

        return $r2;
    }

    public static transient com.opengamma.analytics.math.curve.SpreadDoublesCurve 'from'(com.opengamma.analytics.math.curve.CurveSpreadFunction, java.lang.String, com.opengamma.analytics.math.curve.DoublesCurve[])
    {
        com.opengamma.analytics.math.curve.CurveSpreadFunction r0;
        java.lang.String r1;
        com.opengamma.analytics.math.curve.DoublesCurve[] r2;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve $r3;

        r0 := @parameter0: com.opengamma.analytics.math.curve.CurveSpreadFunction;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.opengamma.analytics.math.curve.DoublesCurve[];

        $r3 = new com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        specialinvoke $r3.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: void <init>(com.opengamma.analytics.math.curve.CurveSpreadFunction,java.lang.String,com.opengamma.analytics.math.curve.DoublesCurve[])>(r0, r1, r2);

        return $r3;
    }

    protected void <init>()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>()>();

        return;
    }

    public transient void <init>(com.opengamma.analytics.math.curve.CurveSpreadFunction, com.opengamma.analytics.math.curve.DoublesCurve[])
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.CurveSpreadFunction r1;
        com.opengamma.analytics.math.curve.DoublesCurve[] r2;
        int $i0;
        java.lang.Object $r5;
        com.opengamma.analytics.math.function.Function $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.curve.CurveSpreadFunction;

        r2 := @parameter1: com.opengamma.analytics.math.curve.DoublesCurve[];

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curves");

        $i0 = lengthof r2;

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "curves");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "spread operator");

        r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves> = r2;

        r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction _spreadFunction> = r1;

        $r5 = interfaceinvoke r1.<com.opengamma.analytics.math.curve.CurveSpreadFunction: java.lang.Object evaluate(java.lang.Object[])>(r2);

        $r6 = (com.opengamma.analytics.math.function.Function) $r5;

        r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.function.Function _f> = $r6;

        return;
    }

    public transient void <init>(com.opengamma.analytics.math.curve.CurveSpreadFunction, java.lang.String, com.opengamma.analytics.math.curve.DoublesCurve[])
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.CurveSpreadFunction r1;
        java.lang.String r2;
        com.opengamma.analytics.math.curve.DoublesCurve[] r3;
        int $i0;
        java.lang.Object $r6;
        com.opengamma.analytics.math.function.Function $r7;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.curve.CurveSpreadFunction;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.opengamma.analytics.math.curve.DoublesCurve[];

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void <init>(java.lang.String)>(r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "curves");

        $i0 = lengthof r3;

        if $i0 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "curves");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "spread operator");

        r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves> = r3;

        r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction _spreadFunction> = r1;

        $r6 = interfaceinvoke r1.<com.opengamma.analytics.math.curve.CurveSpreadFunction: java.lang.Object evaluate(java.lang.Object[])>(r3);

        $r7 = (com.opengamma.analytics.math.function.Function) $r6;

        r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.function.Function _f> = $r7;

        return;
    }

    public java.util.Set getUnderlyingNames()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0, $r6;
        com.opengamma.analytics.math.curve.DoublesCurve[] r2;
        int i0, i1;
        com.opengamma.analytics.math.curve.DoublesCurve r3;
        java.util.HashSet $r4;
        boolean $z0;
        java.lang.String $r5;
        java.util.Set $r7;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z0 = r3 instanceof com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        if $z0 == 0 goto label2;

        $r6 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r3;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: java.util.Set getUnderlyingNames()>();

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r7);

        goto label3;

     label2:
        $r5 = virtualinvoke r3.<com.opengamma.analytics.math.curve.Curve: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return $r4;
    }

    public java.lang.String getLongName()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0, $r16;
        com.opengamma.analytics.math.curve.DoublesCurve[] r2, $r12;
        int i0, $i1, $i2, i3, i4;
        com.opengamma.analytics.math.curve.DoublesCurve r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r9, $r10, $r14, $r17, $r18;
        boolean $z0;
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r13;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r4 = new java.lang.StringBuilder;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: java.lang.String getName()>();

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        i3 = 0;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        r2 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        i0 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label5;

        r3 = r2[i4];

        $z0 = r3 instanceof com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        if $z0 == 0 goto label2;

        $r16 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r3;

        $r17 = virtualinvoke $r16.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: java.lang.String getLongName()>();

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int)>(2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        goto label3;

     label2:
        $r10 = virtualinvoke r3.<com.opengamma.analytics.math.curve.Curve: java.lang.String getName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label3:
        $r12 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $i1 = lengthof $r12;

        $i2 = $i1 - 1;

        if i3 == $i2 goto label4;

        $r13 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction _spreadFunction>;

        $r14 = interfaceinvoke $r13.<com.opengamma.analytics.math.curve.CurveSpreadFunction: java.lang.String getOperationName()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label4:
        i3 = i3 + 1;

        i4 = i4 + 1;

        goto label1;

     label5:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public com.opengamma.analytics.math.curve.DoublesCurve[] getUnderlyingCurves()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        return $r1;
    }

    public java.lang.Double[] getXData()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public java.lang.Double[] getYData()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public java.lang.Double getYValue(java.lang.Double)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        java.lang.Double r1, $r6;
        java.lang.Double[] $r3;
        com.opengamma.analytics.math.function.Function $r4;
        java.lang.Object $r5;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: java.lang.Double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x");

        $r4 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.function.Function _f>;

        $r3 = newarray (java.lang.Double)[1];

        $r3[0] = r1;

        $r5 = interfaceinvoke $r4.<com.opengamma.analytics.math.function.Function: java.lang.Object evaluate(java.lang.Object[])>($r3);

        $r6 = (java.lang.Double) $r5;

        return $r6;
    }

    public java.lang.Double[] getYValueParameterSensitivity(java.lang.Double)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        java.lang.Double r1;
        com.opengamma.analytics.math.curve.DoublesCurve[] $r2, $r3, $r5, $r7, $r9, $r12, $r14;
        int $i0;
        com.opengamma.analytics.math.curve.DoublesCurve $r4, $r6, $r8, $r10, $r13, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Double[] $r11, $r16;
        java.lang.UnsupportedOperationException $r17;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: java.lang.Double;

        $r2 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $i0 = lengthof $r2;

        if $i0 != 2 goto label2;

        $r3 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $r4 = $r3[0];

        $z0 = $r4 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        if $z0 == 0 goto label1;

        $r12 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $r13 = $r12[1];

        $z3 = $r13 instanceof com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        if $z3 == 0 goto label1;

        $r14 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $r15 = $r14[0];

        $r16 = virtualinvoke $r15.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Double[] getYValueParameterSensitivity(java.lang.Double)>(r1);

        return $r16;

     label1:
        $r5 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $r6 = $r5[1];

        $z1 = $r6 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        if $z1 == 0 goto label2;

        $r7 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $r8 = $r7[0];

        $z2 = $r8 instanceof com.opengamma.analytics.math.curve.ConstantDoublesCurve;

        if $z2 == 0 goto label2;

        $r9 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $r10 = $r9[1];

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.math.curve.DoublesCurve: java.lang.Double[] getYValueParameterSensitivity(java.lang.Double)>(r1);

        return $r11;

     label2:
        $r17 = new java.lang.UnsupportedOperationException;

        specialinvoke $r17.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Parameter sensitivity not supported yet for SpreadDoublesCurve");

        throw $r17;
    }

    public double getDyDx(double)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        double d0;
        org.apache.commons.lang.NotImplementedException $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        d0 := @parameter0: double;

        $r1 = new org.apache.commons.lang.NotImplementedException;

        specialinvoke $r1.<org.apache.commons.lang.NotImplementedException: void <init>()>();

        throw $r1;
    }

    public int size()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve[] r1;
        int i0, i1, i2, $i3;
        com.opengamma.analytics.math.curve.DoublesCurve r2;
        java.lang.UnsupportedOperationException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        i1 = 0;

        r1 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        r2 = r1[i2];

        $z0 = r2 instanceof com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        if $z0 != 0 goto label2;

        $z1 = r2 instanceof com.opengamma.analytics.math.curve.NodalDoublesCurve;

        if $z1 != 0 goto label2;

        $z2 = r2 instanceof com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        if $z2 == 0 goto label3;

     label2:
        $i3 = virtualinvoke r2.<com.opengamma.analytics.math.curve.DoublesCurve: int size()>();

        i1 = i1 + $i3;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        if i1 == 0 goto label5;

        return i1;

     label5:
        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size not supported for SpreadDoublesCurve ");

        $r6 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: java.lang.String getLongName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.curve.DoublesCurve[] $r5, $r6;
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r7, $r8;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) r1;

        $r6 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $r5 = r2.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r6, $r5);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction _spreadFunction>;

        $r7 = r2.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction _spreadFunction>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        return $z2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve[] $r1;
        int $i1, $i2, $i3, $i4, i5, i6, i7;
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r2;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        i5 = specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: int hashCode()>();

        $i1 = 31 * i5;

        $r1 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        i6 = $i1 + $i2;

        $i3 = 31 * i6;

        $r2 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction _spreadFunction>;

        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i7 = $i3 + $i4;

        return i7;
    }

    public static com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta meta()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta $r0;

        $r0 = <com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta: com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta INSTANCE>;

        return $r0;
    }

    public com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = <com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta: com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta INSTANCE>;

        return $r1;
    }

    private com.opengamma.analytics.math.curve.CurveSpreadFunction getSpreadFunction()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction _spreadFunction>;

        return $r1;
    }

    private void setSpreadFunction(com.opengamma.analytics.math.curve.CurveSpreadFunction)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.CurveSpreadFunction r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.curve.CurveSpreadFunction;

        r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction _spreadFunction> = r1;

        return;
    }

    public final org.joda.beans.Property spreadFunction()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta: org.joda.beans.MetaProperty spreadFunction()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    private com.opengamma.analytics.math.function.Function getF()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.function.Function $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.function.Function _f>;

        return $r1;
    }

    private void setF(com.opengamma.analytics.math.function.Function)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.function.Function r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function;

        r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.function.Function _f> = r1;

        return;
    }

    public final org.joda.beans.Property f()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta: org.joda.beans.MetaProperty f()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    private com.opengamma.analytics.math.curve.DoublesCurve[] getCurves()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves>;

        return $r1;
    }

    private void setCurves(com.opengamma.analytics.math.curve.DoublesCurve[])
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve[] r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: com.opengamma.analytics.math.curve.DoublesCurve[];

        r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] _curves> = r1;

        return;
    }

    public final org.joda.beans.Property curves()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta $r1;
        org.joda.beans.MetaProperty $r2;
        org.joda.beans.Property $r3;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta metaBean()>();

        $r2 = virtualinvoke $r1.<com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta: org.joda.beans.MetaProperty curves()>();

        $r3 = interfaceinvoke $r2.<org.joda.beans.MetaProperty: org.joda.beans.Property createProperty(org.joda.beans.Bean)>(r0);

        return $r3;
    }

    public com.opengamma.analytics.math.curve.SpreadDoublesCurve clone()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0, $r2;
        org.joda.beans.Bean $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = staticinvoke <org.joda.beans.JodaBeanUtils: org.joda.beans.Bean cloneAlways(org.joda.beans.Bean)>(r0);

        $r2 = (com.opengamma.analytics.math.curve.SpreadDoublesCurve) $r1;

        return $r2;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SpreadDoublesCurve{");

        i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: void toString(java.lang.StringBuilder)>($r2);

        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i1 <= i0 goto label1;

        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 2;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>($i3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void toString(java.lang.StringBuilder)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r7, $r9, $r10, $r13, $r14, $r16, $r17, $r20, $r21;
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r4;
        java.lang.String $r5, $r12, $r19;
        com.opengamma.analytics.math.function.Function $r11;
        com.opengamma.analytics.math.curve.DoublesCurve[] $r18;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: java.lang.StringBuilder;

        specialinvoke r0.<com.opengamma.analytics.math.curve.DoublesCurve: void toString(java.lang.StringBuilder)>(r1);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("spreadFunction");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r4 = specialinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction getSpreadFunction()>();

        $r5 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r11 = specialinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.function.Function getF()>();

        $r12 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("curves");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r18 = specialinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] getCurves()>();

        $r19 = staticinvoke <org.joda.beans.JodaBeanUtils: java.lang.String toString(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        return;
    }

    public volatile com.opengamma.analytics.math.curve.DoublesCurve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta metaBean()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.Curve clone()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.SpreadDoublesCurve clone()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.math.curve.Curve$Meta metaBean()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta metaBean()>();

        return $r1;
    }

    public volatile java.lang.Object getYValue(java.lang.Comparable)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        java.lang.Comparable r1;
        java.lang.Double $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter0: java.lang.Comparable;

        $r2 = (java.lang.Double) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: java.lang.Double getYValue(java.lang.Double)>($r2);

        return $r3;
    }

    public volatile java.lang.Object[] getYData()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: java.lang.Double[] getYData()>();

        return $r1;
    }

    public volatile java.lang.Comparable[] getXData()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        java.lang.Double[] $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: java.lang.Double[] getXData()>();

        return $r1;
    }

    public volatile org.joda.beans.MetaBean metaBean()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta $r1;
        org.joda.beans.MetaBean r2;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta metaBean()>();

        r2 = (org.joda.beans.MetaBean) $r1;

        return r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0, $r1;

        r0 := @this: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.SpreadDoublesCurve clone()>();

        return $r1;
    }

    static com.opengamma.analytics.math.curve.CurveSpreadFunction access$000(com.opengamma.analytics.math.curve.SpreadDoublesCurve)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.CurveSpreadFunction $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = specialinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.CurveSpreadFunction getSpreadFunction()>();

        return $r1;
    }

    static com.opengamma.analytics.math.function.Function access$100(com.opengamma.analytics.math.curve.SpreadDoublesCurve)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.function.Function $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = specialinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.function.Function getF()>();

        return $r1;
    }

    static com.opengamma.analytics.math.curve.DoublesCurve[] access$200(com.opengamma.analytics.math.curve.SpreadDoublesCurve)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve[] $r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        $r1 = specialinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: com.opengamma.analytics.math.curve.DoublesCurve[] getCurves()>();

        return $r1;
    }

    static void access$300(com.opengamma.analytics.math.curve.SpreadDoublesCurve, com.opengamma.analytics.math.curve.CurveSpreadFunction)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.CurveSpreadFunction r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter1: com.opengamma.analytics.math.curve.CurveSpreadFunction;

        specialinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: void setSpreadFunction(com.opengamma.analytics.math.curve.CurveSpreadFunction)>(r1);

        return;
    }

    static void access$400(com.opengamma.analytics.math.curve.SpreadDoublesCurve, com.opengamma.analytics.math.function.Function)
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.function.Function r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter1: com.opengamma.analytics.math.function.Function;

        specialinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: void setF(com.opengamma.analytics.math.function.Function)>(r1);

        return;
    }

    static void access$500(com.opengamma.analytics.math.curve.SpreadDoublesCurve, com.opengamma.analytics.math.curve.DoublesCurve[])
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve r0;
        com.opengamma.analytics.math.curve.DoublesCurve[] r1;

        r0 := @parameter0: com.opengamma.analytics.math.curve.SpreadDoublesCurve;

        r1 := @parameter1: com.opengamma.analytics.math.curve.DoublesCurve[];

        specialinvoke r0.<com.opengamma.analytics.math.curve.SpreadDoublesCurve: void setCurves(com.opengamma.analytics.math.curve.DoublesCurve[])>(r1);

        return;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta $r0;
        org.joda.beans.MetaBean r1;

        $r0 = <com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta: com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta INSTANCE>;

        r1 = (org.joda.beans.MetaBean) $r0;

        staticinvoke <org.joda.beans.JodaBeanUtils: void registerMetaBean(org.joda.beans.MetaBean)>(r1);

        return;
    }
}
