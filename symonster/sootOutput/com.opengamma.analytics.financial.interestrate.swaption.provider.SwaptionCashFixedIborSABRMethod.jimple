public final class com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod INSTANCE;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC;
    private static final com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP;

    public static com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.analytics.math.function.Function1D r5;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r8, $r14;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r9;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r10, $r17;
        java.lang.Object $r11, $r21;
        java.lang.Double $r12, $r19, $r22;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r13;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r15;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters $r16;
        com.opengamma.util.money.Currency $r18, $r23;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r20;
        boolean $z0;
        com.opengamma.util.money.MultipleCurrencyAmount $r24;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r9 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r10 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r11 = virtualinvoke $r8.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r9, $r10);

        $r12 = (java.lang.Double) $r11;

        d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $r13 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d1 = virtualinvoke $r13.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCash(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r14, d0);

        $r15 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r15.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r16 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters getSABRParameter()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getMaturityTime()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getStrike()>();

        d2 = virtualinvoke $r16.<com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters: double getVolatility(double,double,double,double)>($d5, $d6, $d7, d0);

        $r17 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r18 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        d3 = interfaceinvoke $r17.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r18, $r19);

        $r20 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d9 = d3 * d1;

        specialinvoke $r20.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d0, $d9, d2);

        r5 = virtualinvoke $r15.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: com.opengamma.analytics.math.function.Function1D getPriceFunction(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption)>(r1);

        $r21 = virtualinvoke r5.<com.opengamma.analytics.math.function.Function1D: java.lang.Object evaluate(java.lang.Object)>($r20);

        $r22 = (java.lang.Double) $r21;

        $d10 = virtualinvoke $r22.<java.lang.Double: double doubleValue()>();

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d11 = 1.0;

        goto label2;

     label1:
        $d11 = -1.0;

     label2:
        d4 = $d10 * $d11;

        $r23 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r24 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r23, d4);

        return $r24;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        com.opengamma.util.money.Currency r4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed r5;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r6, $r38, r40, r41;
        double[] r8, r10;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r15, $r16, $r20, $r24, $r26;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r17;
        java.lang.Object $r18, $r22;
        java.lang.Double $r19, $r31;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r21;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r23, $r25;
        int $i0, $i1;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r27;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r28;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r29;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters $r30;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r32;
        java.util.ArrayList $r33;
        com.opengamma.util.tuple.DoublesPair $r34;
        java.util.HashMap $r35;
        java.lang.String $r36;
        boolean $z1;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r39;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        r5 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed getFixedLeg()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r17 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r18 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r17, r3);

        $r19 = (java.lang.Double) $r18;

        d0 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $r20 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r21 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC>;

        $r22 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r21, r3);

        r6 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity) $r22;

        $r23 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d1 = virtualinvoke $r23.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCash(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r24, d0);

        $r25 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r26 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d2 = virtualinvoke $r25.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCashDerivative(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r26, d0);

        $i0 = virtualinvoke r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed: int getNumberOfPayments()>();

        $i1 = $i0 - 1;

        $r27 = virtualinvoke r5.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>($i1);

        $r28 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r27;

        $d6 = virtualinvoke $r28.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentTime()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        d3 = $d6 - $d7;

        $r29 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r29.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r30 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters getSABRParameter()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getStrike()>();

        r8 = virtualinvoke $r30.<com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters: double[] getVolatilityAdjoint(double,double,double,double)>($d8, d3, $d9, d0);

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d10);

        d4 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r4, $r31);

        $r32 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d11 = r8[0];

        specialinvoke $r32.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d0, 1.0, $d11);

        r10 = virtualinvoke $r29.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>(r1, $r32);

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $d13 = neg $d12;

        $d14 = $d13 * d4;

        $d16 = $d14 * d1;

        $d15 = r10[0];

        d5 = $d16 * $d15;

        $r33 = new java.util.ArrayList;

        specialinvoke $r33.<java.util.ArrayList: void <init>()>();

        $d17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $r34 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d17, d5);

        interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r35 = new java.util.HashMap;

        specialinvoke $r35.<java.util.HashMap: void <init>()>();

        $r36 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>(r4);

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r33);

        r40 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r35);

        $d18 = r10[0];

        $d25 = d2 * $d18;

        $d22 = r10[1];

        $d20 = r10[2];

        $d19 = r8[1];

        $d21 = $d20 * $d19;

        $d23 = $d22 + $d21;

        $d24 = d1 * $d23;

        $d26 = $d25 + $d24;

        $d27 = d4 * $d26;

        $r38 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d27);

        r41 = virtualinvoke r40.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r38);

        $z1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: boolean isLong()>();

        if $z1 != 0 goto label1;

        r41 = virtualinvoke r41.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>(-1.0);

     label1:
        $r39 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>(r4, r41);

        return $r39;
    }

    public com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle presentValueSABRSensitivity(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r3;
        com.opengamma.util.money.Currency r4;
        com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed r6;
        double d0, d1, d2, d3, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36;
        com.opengamma.util.tuple.DoublesPair r7;
        double[] r9, r11;
        com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle $r14;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r15, $r16, $r21;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r17;
        java.lang.Object $r18;
        java.lang.Double $r19, $r27;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r20;
        int $i0, $i1;
        com.opengamma.analytics.financial.interestrate.payments.derivative.Payment $r22;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed $r23;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction $r24;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters $r25;
        com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData $r26;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        r3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r14 = new com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle;

        specialinvoke $r14.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void <init>()>();

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        r6 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed getFixedLeg()>();

        $r16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r17 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r18 = virtualinvoke $r16.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r17, r3);

        $r19 = (java.lang.Double) $r18;

        d0 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $r20 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP>;

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        d1 = virtualinvoke $r20.<com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: double getAnnuityCash(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,double)>($r21, d0);

        $i0 = virtualinvoke r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed: int getNumberOfPayments()>();

        $i1 = $i0 - 1;

        $r22 = virtualinvoke r6.<com.opengamma.analytics.financial.interestrate.annuity.derivative.AnnuityCouponFixed: com.opengamma.analytics.financial.interestrate.payments.derivative.Payment getNthPayment(int)>($i1);

        $r23 = (com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed) $r22;

        $d5 = virtualinvoke $r23.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixed: double getPaymentTime()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        d2 = $d5 - $d6;

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        r7 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d7, d2);

        $r24 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction;

        specialinvoke $r24.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: void <init>()>();

        $r25 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters getSABRParameter()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getStrike()>();

        r9 = virtualinvoke $r25.<com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters: double[] getVolatilityAdjoint(double,double,double,double)>($d8, d2, $d9, d0);

        $r26 = new com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData;

        $d10 = r9[0];

        specialinvoke $r26.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData: void <init>(double,double,double)>(d0, 1.0, $d10);

        r11 = virtualinvoke $r24.<com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackPriceFunction: double[] getPriceAdjoint(com.opengamma.analytics.financial.model.option.pricing.analytic.formula.EuropeanVanillaOption,com.opengamma.analytics.financial.model.option.pricing.analytic.formula.BlackFunctionData)>(r1, $r26);

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getSettlementTime()>();

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11);

        d3 = interfaceinvoke r3.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>(r4, $r27);

        $z0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: boolean isLong()>();

        if $z0 == 0 goto label1;

        $d36 = 1.0;

        goto label2;

     label1:
        $d36 = -1.0;

     label2:
        $d12 = $d36 * d3;

        $d14 = $d12 * d1;

        $d13 = r11[2];

        $d16 = $d14 * $d13;

        $d15 = r9[3];

        $d17 = $d16 * $d15;

        virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addAlpha(com.opengamma.util.tuple.DoublesPair,double)>(r7, $d17);

        $d18 = $d36 * d3;

        $d20 = $d18 * d1;

        $d19 = r11[2];

        $d22 = $d20 * $d19;

        $d21 = r9[4];

        $d23 = $d22 * $d21;

        virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addBeta(com.opengamma.util.tuple.DoublesPair,double)>(r7, $d23);

        $d24 = $d36 * d3;

        $d26 = $d24 * d1;

        $d25 = r11[2];

        $d28 = $d26 * $d25;

        $d27 = r9[5];

        $d29 = $d28 * $d27;

        virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addRho(com.opengamma.util.tuple.DoublesPair,double)>(r7, $d29);

        $d30 = $d36 * d3;

        $d32 = $d30 * d1;

        $d31 = r11[2];

        $d34 = $d32 * $d31;

        $d33 = r9[6];

        $d35 = $d34 * $d33;

        virtualinvoke $r14.<com.opengamma.analytics.financial.interestrate.PresentValueSABRSensitivityDataBundle: void addNu(com.opengamma.util.tuple.DoublesPair,double)>(r7, $d35);

        return $r14;
    }

    public double impliedVolatility(com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor, com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod r0;
        com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface r2;
        double d0, d1, $d2, $d3, $d4;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r5;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r6;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface $r7;
        java.lang.Object $r8;
        java.lang.Double $r9;
        com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters $r10;

        r0 := @this: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Swaption");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "SABR swaption provider");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r6 = <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r7 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()>();

        $r8 = virtualinvoke $r5.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r6, $r7);

        $r9 = (java.lang.Double) $r8;

        d0 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        $r10 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.SABRSwaptionProviderInterface: com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters getSABRParameter()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getTimeToExpiry()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getMaturityTime()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.swaption.derivative.SwaptionCashFixedIbor: double getStrike()>();

        d1 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.option.definition.SABRInterestRateParameters: double getVolatility(double,double,double,double)>($d2, $d3, $d4, d0);

        return d1;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod $r0;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r1;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r2;
        com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod $r3;

        $r0 = new com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC> = $r2;

        $r3 = staticinvoke <com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod getInstance()>();

        <com.opengamma.analytics.financial.interestrate.swaption.provider.SwaptionCashFixedIborSABRMethod: com.opengamma.analytics.financial.interestrate.swap.provider.SwapFixedCouponDiscountingMethod METHOD_SWAP> = $r3;

        return;
    }
}
