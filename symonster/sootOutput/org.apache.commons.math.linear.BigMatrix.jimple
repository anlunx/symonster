public interface  org.apache.commons.math.linear.BigMatrix extends java.lang.Object implements org.apache.commons.math.linear.AnyMatrix
{

    public abstract org.apache.commons.math.linear.BigMatrix copy();

    public abstract org.apache.commons.math.linear.BigMatrix add(org.apache.commons.math.linear.BigMatrix) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.BigMatrix subtract(org.apache.commons.math.linear.BigMatrix) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.BigMatrix scalarAdd(java.math.BigDecimal);

    public abstract org.apache.commons.math.linear.BigMatrix scalarMultiply(java.math.BigDecimal);

    public abstract org.apache.commons.math.linear.BigMatrix multiply(org.apache.commons.math.linear.BigMatrix) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.BigMatrix preMultiply(org.apache.commons.math.linear.BigMatrix) throws java.lang.IllegalArgumentException;

    public abstract java.math.BigDecimal[][] getData();

    public abstract double[][] getDataAsDoubleArray();

    public abstract int getRoundingMode();

    public abstract java.math.BigDecimal getNorm();

    public abstract org.apache.commons.math.linear.BigMatrix getSubMatrix(int, int, int, int) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract org.apache.commons.math.linear.BigMatrix getSubMatrix(int[], int[]) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract org.apache.commons.math.linear.BigMatrix getRowMatrix(int) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract org.apache.commons.math.linear.BigMatrix getColumnMatrix(int) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract java.math.BigDecimal[] getRow(int) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract double[] getRowAsDoubleArray(int) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract java.math.BigDecimal[] getColumn(int) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract double[] getColumnAsDoubleArray(int) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract java.math.BigDecimal getEntry(int, int) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract double getEntryAsDouble(int, int) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract org.apache.commons.math.linear.BigMatrix transpose();

    public abstract org.apache.commons.math.linear.BigMatrix inverse() throws org.apache.commons.math.linear.InvalidMatrixException;

    public abstract java.math.BigDecimal getDeterminant() throws org.apache.commons.math.linear.InvalidMatrixException;

    public abstract java.math.BigDecimal getTrace();

    public abstract java.math.BigDecimal[] operate(java.math.BigDecimal[]) throws java.lang.IllegalArgumentException;

    public abstract java.math.BigDecimal[] preMultiply(java.math.BigDecimal[]) throws java.lang.IllegalArgumentException;

    public abstract java.math.BigDecimal[] solve(java.math.BigDecimal[]) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException;

    public abstract org.apache.commons.math.linear.BigMatrix solve(org.apache.commons.math.linear.BigMatrix) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException;
}
