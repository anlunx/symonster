public abstract class org.apache.commons.math3.linear.IterativeLinearSolver extends java.lang.Object
{
    private final org.apache.commons.math3.util.IterationManager manager;

    public void <init>(int)
    {
        org.apache.commons.math3.linear.IterativeLinearSolver r0;
        int i0;
        org.apache.commons.math3.util.IterationManager $r1;

        r0 := @this: org.apache.commons.math3.linear.IterativeLinearSolver;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.commons.math3.util.IterationManager;

        specialinvoke $r1.<org.apache.commons.math3.util.IterationManager: void <init>(int)>(i0);

        r0.<org.apache.commons.math3.linear.IterativeLinearSolver: org.apache.commons.math3.util.IterationManager manager> = $r1;

        return;
    }

    public void <init>(org.apache.commons.math3.util.IterationManager) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.linear.IterativeLinearSolver r0;
        org.apache.commons.math3.util.IterationManager r1;

        r0 := @this: org.apache.commons.math3.linear.IterativeLinearSolver;

        r1 := @parameter0: org.apache.commons.math3.util.IterationManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        r0.<org.apache.commons.math3.linear.IterativeLinearSolver: org.apache.commons.math3.util.IterationManager manager> = r1;

        return;
    }

    protected static void checkParameters(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.linear.RealLinearOperator r0;
        org.apache.commons.math3.linear.RealVector r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.commons.math3.exception.DimensionMismatchException $r3, $r4;
        org.apache.commons.math3.linear.NonSquareOperatorException $r5;

        r0 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r1 := @parameter1: org.apache.commons.math3.linear.RealVector;

        r2 := @parameter2: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r0);

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r2);

        $i0 = virtualinvoke r0.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        $i1 = virtualinvoke r0.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        if $i0 == $i1 goto label1;

        $r5 = new org.apache.commons.math3.linear.NonSquareOperatorException;

        $i10 = virtualinvoke r0.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        $i11 = virtualinvoke r0.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        specialinvoke $r5.<org.apache.commons.math3.linear.NonSquareOperatorException: void <init>(int,int)>($i10, $i11);

        throw $r5;

     label1:
        $i2 = virtualinvoke r1.<org.apache.commons.math3.linear.RealVector: int getDimension()>();

        $i3 = virtualinvoke r0.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        if $i2 == $i3 goto label2;

        $r4 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i8 = virtualinvoke r1.<org.apache.commons.math3.linear.RealVector: int getDimension()>();

        $i9 = virtualinvoke r0.<org.apache.commons.math3.linear.RealLinearOperator: int getRowDimension()>();

        specialinvoke $r4.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i8, $i9);

        throw $r4;

     label2:
        $i4 = virtualinvoke r2.<org.apache.commons.math3.linear.RealVector: int getDimension()>();

        $i5 = virtualinvoke r0.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        if $i4 == $i5 goto label3;

        $r3 = new org.apache.commons.math3.exception.DimensionMismatchException;

        $i6 = virtualinvoke r2.<org.apache.commons.math3.linear.RealVector: int getDimension()>();

        $i7 = virtualinvoke r0.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        specialinvoke $r3.<org.apache.commons.math3.exception.DimensionMismatchException: void <init>(int,int)>($i6, $i7);

        throw $r3;

     label3:
        return;
    }

    public org.apache.commons.math3.util.IterationManager getIterationManager()
    {
        org.apache.commons.math3.linear.IterativeLinearSolver r0;
        org.apache.commons.math3.util.IterationManager $r1;

        r0 := @this: org.apache.commons.math3.linear.IterativeLinearSolver;

        $r1 = r0.<org.apache.commons.math3.linear.IterativeLinearSolver: org.apache.commons.math3.util.IterationManager manager>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.IterativeLinearSolver r0;
        org.apache.commons.math3.linear.RealLinearOperator r1;
        org.apache.commons.math3.linear.RealVector r2, $r5;
        org.apache.commons.math3.linear.ArrayRealVector $r4;
        int $i0;

        r0 := @this: org.apache.commons.math3.linear.IterativeLinearSolver;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r1);

        $r4 = new org.apache.commons.math3.linear.ArrayRealVector;

        $i0 = virtualinvoke r1.<org.apache.commons.math3.linear.RealLinearOperator: int getColumnDimension()>();

        specialinvoke $r4.<org.apache.commons.math3.linear.ArrayRealVector: void <init>(int)>($i0);

        virtualinvoke $r4.<org.apache.commons.math3.linear.RealVector: void set(double)>(0.0);

        $r5 = virtualinvoke r0.<org.apache.commons.math3.linear.IterativeLinearSolver: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>(r1, r2, $r4);

        return $r5;
    }

    public org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException
    {
        org.apache.commons.math3.linear.IterativeLinearSolver r0;
        org.apache.commons.math3.linear.RealLinearOperator r1;
        org.apache.commons.math3.linear.RealVector r2, r3, $r4, $r5;

        r0 := @this: org.apache.commons.math3.linear.IterativeLinearSolver;

        r1 := @parameter0: org.apache.commons.math3.linear.RealLinearOperator;

        r2 := @parameter1: org.apache.commons.math3.linear.RealVector;

        r3 := @parameter2: org.apache.commons.math3.linear.RealVector;

        staticinvoke <org.apache.commons.math3.util.MathUtils: void checkNotNull(java.lang.Object)>(r3);

        $r4 = virtualinvoke r3.<org.apache.commons.math3.linear.RealVector: org.apache.commons.math3.linear.RealVector copy()>();

        $r5 = virtualinvoke r0.<org.apache.commons.math3.linear.IterativeLinearSolver: org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)>(r1, r2, $r4);

        return $r5;
    }

    public abstract org.apache.commons.math3.linear.RealVector solveInPlace(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.linear.NonSquareOperatorException, org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.MaxCountExceededException;
}
