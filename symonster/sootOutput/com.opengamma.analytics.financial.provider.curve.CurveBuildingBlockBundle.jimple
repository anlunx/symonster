public class com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle extends java.lang.Object
{
    private final java.util.LinkedHashMap _bundle;

    public void <init>()
    {
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r0;
        java.util.LinkedHashMap $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle> = $r1;

        return;
    }

    public void <init>(java.util.LinkedHashMap)
    {
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r0;
        java.util.LinkedHashMap r1, $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r1 := @parameter0: java.util.LinkedHashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle> = $r2;

        $r3 = r0.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle>;

        virtualinvoke $r3.<java.util.LinkedHashMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public void addAll(com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle)
    {
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r0, r1;
        java.util.LinkedHashMap $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        $r3 = r0.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle>;

        $r2 = r1.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle>;

        virtualinvoke $r3.<java.util.LinkedHashMap: void putAll(java.util.Map)>($r2);

        return;
    }

    public void add(java.lang.String, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock, com.opengamma.analytics.math.matrix.DoubleMatrix2D)
    {
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r0;
        java.lang.String r1;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock r2;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r3;
        java.util.LinkedHashMap $r4;
        com.opengamma.util.tuple.Pair $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock;

        r3 := @parameter2: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $r4 = r0.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle>;

        $r5 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r2, r3);

        virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        return;
    }

    public com.opengamma.util.tuple.Pair getBlock(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r0;
        java.lang.String r1, $r9;
        com.opengamma.util.tuple.Pair r2;
        java.util.LinkedHashMap $r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle>;

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.opengamma.util.tuple.Pair) $r4;

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no block for the curve: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    public java.util.Map getData()
    {
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r0;
        java.util.LinkedHashMap $r1;
        java.util.Map $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        $r1 = r0.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r0;
        java.util.LinkedHashMap $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle>;

        $i2 = virtualinvoke $r1.<java.util.LinkedHashMap: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.util.LinkedHashMap $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle) r1;

        $r6 = r0.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle>;

        $r5 = r2.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.LinkedHashMap _bundle>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }
}
