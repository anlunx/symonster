public class com.opengamma.analytics.math.surface.InterpolatedDoublesSurface extends com.opengamma.analytics.math.surface.DoublesSurface
{
    private final com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator;
    private java.util.Map _data;

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(double[], double[], double[], com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        double[] r0, r1, r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r4;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        $r4 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r4.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(double[],double[],double[],com.opengamma.analytics.math.interpolation.Interpolator2D)>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.lang.Double[], java.lang.Double[], java.lang.Double[], com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        java.lang.Double[] r0, r1, r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r4;

        r0 := @parameter0: java.lang.Double[];

        r1 := @parameter1: java.lang.Double[];

        r2 := @parameter2: java.lang.Double[];

        r3 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        $r4 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r4.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.lang.Double[],java.lang.Double[],java.lang.Double[],com.opengamma.analytics.math.interpolation.Interpolator2D)>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.util.List, java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        java.util.List r0, r1, r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        $r4 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r4.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.util.List,java.util.List,java.util.List,com.opengamma.analytics.math.interpolation.Interpolator2D)>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(com.opengamma.util.tuple.DoublesPair[], java.lang.Double[], com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.util.tuple.DoublesPair[] r0;
        java.lang.Double[] r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r3;

        r0 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r1 := @parameter1: java.lang.Double[];

        r2 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        $r3 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r3.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(com.opengamma.util.tuple.DoublesPair[],java.lang.Double[],com.opengamma.analytics.math.interpolation.Interpolator2D)>(r0, r1, r2);

        return $r3;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(com.opengamma.util.tuple.DoublesPair[], double[], com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.util.tuple.DoublesPair[] r0;
        double[] r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r3;

        r0 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r1 := @parameter1: double[];

        r2 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        $r3 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r3.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(com.opengamma.util.tuple.DoublesPair[],double[],com.opengamma.analytics.math.interpolation.Interpolator2D)>(r0, r1, r2);

        return $r3;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        java.util.List r0, r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        $r3 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r3.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.util.List,java.util.List,com.opengamma.analytics.math.interpolation.Interpolator2D)>(r0, r1, r2);

        return $r3;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.util.Map, com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        java.util.Map r0;
        com.opengamma.analytics.math.interpolation.Interpolator2D r1;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r2;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator2D;

        $r2 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r2.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.util.Map,com.opengamma.analytics.math.interpolation.Interpolator2D)>(r0, r1);

        return $r2;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        java.util.List r0;
        com.opengamma.analytics.math.interpolation.Interpolator2D r1;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator2D;

        $r2 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r2.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.util.List,com.opengamma.analytics.math.interpolation.Interpolator2D)>(r0, r1);

        return $r2;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(double[], double[], double[], com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        double[] r0, r1, r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        java.lang.String r4;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r5;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r4 := @parameter4: java.lang.String;

        $r5 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r5.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(double[],double[],double[],com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.lang.Double[], java.lang.Double[], java.lang.Double[], com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        java.lang.Double[] r0, r1, r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        java.lang.String r4;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r5;

        r0 := @parameter0: java.lang.Double[];

        r1 := @parameter1: java.lang.Double[];

        r2 := @parameter2: java.lang.Double[];

        r3 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r4 := @parameter4: java.lang.String;

        $r5 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r5.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.lang.Double[],java.lang.Double[],java.lang.Double[],com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.util.List, java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        java.util.List r0, r1, r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        java.lang.String r4;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r4 := @parameter4: java.lang.String;

        $r5 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r5.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.util.List,java.util.List,java.util.List,com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r0, r1, r2, r3, r4);

        return $r5;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(com.opengamma.util.tuple.DoublesPair[], java.lang.Double[], com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.util.tuple.DoublesPair[] r0;
        java.lang.Double[] r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        java.lang.String r3;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r4;

        r0 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r1 := @parameter1: java.lang.Double[];

        r2 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r3 := @parameter3: java.lang.String;

        $r4 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r4.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(com.opengamma.util.tuple.DoublesPair[],java.lang.Double[],com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(com.opengamma.util.tuple.DoublesPair[], double[], com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.util.tuple.DoublesPair[] r0;
        double[] r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        java.lang.String r3;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r4;

        r0 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r1 := @parameter1: double[];

        r2 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r3 := @parameter3: java.lang.String;

        $r4 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r4.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(com.opengamma.util.tuple.DoublesPair[],double[],com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        java.util.List r0, r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        java.lang.String r3;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r3 := @parameter3: java.lang.String;

        $r4 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r4.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.util.List,java.util.List,com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r0, r1, r2, r3);

        return $r4;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.util.Map, com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        java.util.Map r0;
        com.opengamma.analytics.math.interpolation.Interpolator2D r1;
        java.lang.String r2;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r2 := @parameter2: java.lang.String;

        $r3 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r3.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.util.Map,com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        java.util.List r0;
        com.opengamma.analytics.math.interpolation.Interpolator2D r1;
        java.lang.String r2;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r2 := @parameter2: java.lang.String;

        $r3 = new com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        specialinvoke $r3.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void <init>(java.util.List,com.opengamma.analytics.math.interpolation.Interpolator2D,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    public static com.opengamma.analytics.math.surface.InterpolatedDoublesSurface fromGrid(double[], double[], double[], com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        double[] r0, r1, r2, r4, r5;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11;
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface $r6;
        double $d0;
        boolean $z0;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        r2 := @parameter2: double[];

        r3 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        i0 = lengthof r0;

        i1 = lengthof r1;

        $i3 = lengthof r2;

        $i2 = i0 * i1;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Sizes not compatible");

        $i4 = i0 * i1;

        r4 = newarray (double)[$i4];

        $i5 = i0 * i1;

        r5 = newarray (double)[$i5];

        i9 = 0;

     label3:
        if i9 >= i1 goto label4;

        $i8 = i9 * i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r4, $i8, i0);

        i9 = i9 + 1;

        goto label3;

     label4:
        i10 = 0;

     label5:
        if i10 >= i0 goto label8;

        i11 = 0;

     label6:
        if i11 >= i1 goto label7;

        $i6 = i11 * i0;

        $i7 = i10 + $i6;

        $d0 = r1[i11];

        r5[$i7] = $d0;

        i11 = i11 + 1;

        goto label6;

     label7:
        i10 = i10 + 1;

        goto label5;

     label8:
        $r6 = staticinvoke <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface 'from'(double[],double[],double[],com.opengamma.analytics.math.interpolation.Interpolator2D)>(r4, r5, r2, r3);

        return $r6;
    }

    public void <init>(double[], double[], double[], com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        double[] r1, r2, r3;
        com.opengamma.analytics.math.interpolation.Interpolator2D r4;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(double[],double[],double[])>(r1, r2, r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "interpolator");

        $z0 = r4 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r6 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r4;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r6;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.lang.Double[], java.lang.Double[], java.lang.Double[], com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.lang.Double[] r1, r2, r3;
        com.opengamma.analytics.math.interpolation.Interpolator2D r4;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.lang.Double[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.Double[];

        r4 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.lang.Double[],java.lang.Double[],java.lang.Double[])>(r1, r2, r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "interpolator");

        $z0 = r4 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r6 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r4;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r6;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.util.List r1, r2, r3;
        com.opengamma.analytics.math.interpolation.Interpolator2D r4;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.util.List,java.util.List,java.util.List)>(r1, r2, r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "interpolator");

        $z0 = r4 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r6 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r4;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r6;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(com.opengamma.util.tuple.DoublesPair[], double[], com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        com.opengamma.util.tuple.DoublesPair[] r1;
        double[] r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r5;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r2 := @parameter1: double[];

        r3 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(com.opengamma.util.tuple.DoublesPair[],double[])>(r1, r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "interpolator");

        $z0 = r3 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r5 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r3;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r5;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(com.opengamma.util.tuple.DoublesPair[], java.lang.Double[], com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        com.opengamma.util.tuple.DoublesPair[] r1;
        java.lang.Double[] r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r5;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(com.opengamma.util.tuple.DoublesPair[],java.lang.Double[])>(r1, r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "interpolator");

        $z0 = r3 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r5 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r3;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r5;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.util.List r1, r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r5;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.util.List,java.util.List)>(r1, r2);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "interpolator");

        $z0 = r3 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r5 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r3;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r5;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.util.Map, com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.util.Map r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r4;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator2D;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.util.Map)>(r1);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "interpolator");

        $z0 = r2 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r4 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r2;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r4;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.util.List r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r4;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator2D;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.util.List)>(r1);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "interpolator");

        $z0 = r2 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r4 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r2;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r4;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(double[], double[], double[], com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        double[] r1, r2, r3;
        com.opengamma.analytics.math.interpolation.Interpolator2D r4;
        java.lang.String r5;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r7;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        r4 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(double[],double[],double[],java.lang.String)>(r1, r2, r3, r5);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "interpolator");

        $z0 = r4 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r7 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r4;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r7;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.lang.Double[], java.lang.Double[], java.lang.Double[], com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.lang.Double[] r1, r2, r3;
        com.opengamma.analytics.math.interpolation.Interpolator2D r4;
        java.lang.String r5;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r7;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.lang.Double[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: java.lang.Double[];

        r4 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.lang.Double[],java.lang.Double[],java.lang.Double[],java.lang.String)>(r1, r2, r3, r5);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "interpolator");

        $z0 = r4 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r7 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r4;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r7;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.util.List, java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.util.List r1, r2, r3;
        com.opengamma.analytics.math.interpolation.Interpolator2D r4;
        java.lang.String r5;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r7;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.util.List,java.util.List,java.util.List,java.lang.String)>(r1, r2, r3, r5);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "interpolator");

        $z0 = r4 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r7 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r4;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r7;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(com.opengamma.util.tuple.DoublesPair[], double[], com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        com.opengamma.util.tuple.DoublesPair[] r1;
        double[] r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        java.lang.String r4;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r2 := @parameter1: double[];

        r3 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(com.opengamma.util.tuple.DoublesPair[],double[],java.lang.String)>(r1, r2, r4);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "interpolator");

        $z0 = r3 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r6 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r3;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r6;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(com.opengamma.util.tuple.DoublesPair[], java.lang.Double[], com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        com.opengamma.util.tuple.DoublesPair[] r1;
        java.lang.Double[] r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        java.lang.String r4;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair[];

        r2 := @parameter1: java.lang.Double[];

        r3 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(com.opengamma.util.tuple.DoublesPair[],java.lang.Double[],java.lang.String)>(r1, r2, r4);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "interpolator");

        $z0 = r3 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r6 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r3;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r6;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.util.List, java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.util.List r1, r2;
        com.opengamma.analytics.math.interpolation.Interpolator2D r3;
        java.lang.String r4;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.util.List,java.util.List,java.lang.String)>(r1, r2, r4);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "interpolator");

        $z0 = r3 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r6 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r3;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r6;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.util.Map, com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.util.Map r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        java.lang.String r3;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r5;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.util.Map,java.lang.String)>(r1, r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "interpolator");

        $z0 = r2 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r5 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r2;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r5;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    public void <init>(java.util.List, com.opengamma.analytics.math.interpolation.Interpolator2D, java.lang.String)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.util.List r1;
        com.opengamma.analytics.math.interpolation.Interpolator2D r2;
        java.lang.String r3;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r5;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator2D;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: void <init>(java.util.List,java.lang.String)>(r1, r3);

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "interpolator");

        $z0 = r2 instanceof com.opengamma.analytics.math.interpolation.GridInterpolator2D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "Interpolator must be a GridInterpolator2D");

        $r5 = (com.opengamma.analytics.math.interpolation.GridInterpolator2D) r2;

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator> = $r5;

        specialinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: void init()>();

        return;
    }

    private void init()
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        double[] r2, r3, r4;
        int $i0, i1;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r7;
        java.util.Map $r8;
        double $d0, $d1, $d2;
        com.opengamma.util.tuple.DoublesPair $r9;
        java.lang.Double $r10;
        com.opengamma.util.tuple.FirstThenSecondDoublesPairComparator r12;
        java.util.TreeMap r13;
        java.util.Comparator r14;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r13 = new java.util.TreeMap;

        r12 = new com.opengamma.util.tuple.FirstThenSecondDoublesPairComparator;

        specialinvoke r12.<com.opengamma.util.tuple.FirstThenSecondDoublesPairComparator: void <init>()>();

        r14 = (java.util.Comparator) r12;

        specialinvoke r13.<java.util.TreeMap: void <init>(java.util.Comparator)>(r14);

        r2 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getXDataAsPrimitive()>();

        r3 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getYDataAsPrimitive()>();

        r4 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: double[] getZDataAsPrimitive()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: int size()>();

        if i1 >= $i0 goto label2;

        $d1 = r2[i1];

        $d0 = r3[i1];

        $r9 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d1, $d0);

        $d2 = r4[i1];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator>;

        $r8 = virtualinvoke $r7.<com.opengamma.analytics.math.interpolation.GridInterpolator2D: java.util.Map getDataBundle(java.util.Map)>(r13);

        r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.util.Map _data> = $r8;

        return;
    }

    public java.lang.Double getZValue(java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.lang.Double r1, r2, $r8;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r5;
        java.util.Map $r6;
        double $d0, $d1;
        com.opengamma.util.tuple.DoublesPair $r7;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.lang.Double;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "x");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "y");

        $r5 = r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator>;

        $r6 = r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.util.Map _data>;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r7 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d0, $d1);

        $r8 = virtualinvoke $r5.<com.opengamma.analytics.math.interpolation.GridInterpolator2D: java.lang.Double interpolate(java.util.Map,com.opengamma.util.tuple.DoublesPair)>($r6, $r7);

        return $r8;
    }

    public java.lang.Double getZValue(com.opengamma.util.tuple.Pair)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        com.opengamma.util.tuple.Pair r1;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r3;
        java.util.Map $r4;
        com.opengamma.util.tuple.DoublesPair $r5;
        java.lang.Double $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.Pair;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "xy");

        $r3 = r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator>;

        $r4 = r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.util.Map _data>;

        $r5 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(com.opengamma.util.tuple.Pair)>(r1);

        $r6 = virtualinvoke $r3.<com.opengamma.analytics.math.interpolation.GridInterpolator2D: java.lang.Double interpolate(java.util.Map,com.opengamma.util.tuple.DoublesPair)>($r4, $r5);

        return $r6;
    }

    public com.opengamma.analytics.math.interpolation.Interpolator2D getInterpolator()
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r1;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        $r1 = r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator>;

        return $r1;
    }

    public java.util.Map getInterpolatorData()
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.util.Map $r1;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        $r1 = r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.util.Map _data>;

        return $r1;
    }

    public int hashCode()
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r1;
        int $i1, $i2, i3, i4;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        i3 = specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: int hashCode()>();

        $i1 = 31 * i3;

        $r1 = r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator>;

        $i2 = virtualinvoke $r1.<com.opengamma.analytics.math.interpolation.GridInterpolator2D: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.interpolation.GridInterpolator2D $r5, $r6;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.opengamma.analytics.math.surface.DoublesSurface: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.math.surface.InterpolatedDoublesSurface) r1;

        $r6 = r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator>;

        $r5 = r2.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: com.opengamma.analytics.math.interpolation.GridInterpolator2D _interpolator>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z1;
    }

    public volatile java.lang.Object getZValue(com.opengamma.util.tuple.Pair)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        com.opengamma.util.tuple.Pair r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: com.opengamma.util.tuple.Pair;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.Double getZValue(com.opengamma.util.tuple.Pair)>(r1);

        return $r2;
    }

    public volatile java.lang.Object getZValue(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.surface.InterpolatedDoublesSurface r0;
        java.lang.Object r1, r2;
        java.lang.Double $r3, $r4, $r5;

        r0 := @this: com.opengamma.analytics.math.surface.InterpolatedDoublesSurface;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Double) r1;

        $r3 = (java.lang.Double) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface: java.lang.Double getZValue(java.lang.Double,java.lang.Double)>($r4, $r3);

        return $r5;
    }
}
