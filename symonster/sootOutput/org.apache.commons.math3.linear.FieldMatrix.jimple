public interface  org.apache.commons.math3.linear.FieldMatrix extends java.lang.Object implements org.apache.commons.math3.linear.AnyMatrix
{

    public abstract org.apache.commons.math3.Field getField();

    public abstract org.apache.commons.math3.linear.FieldMatrix createMatrix(int, int) throws org.apache.commons.math3.exception.NotStrictlyPositiveException;

    public abstract org.apache.commons.math3.linear.FieldMatrix copy();

    public abstract org.apache.commons.math3.linear.FieldMatrix add(org.apache.commons.math3.linear.FieldMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;

    public abstract org.apache.commons.math3.linear.FieldMatrix subtract(org.apache.commons.math3.linear.FieldMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException;

    public abstract org.apache.commons.math3.linear.FieldMatrix scalarAdd(org.apache.commons.math3.FieldElement);

    public abstract org.apache.commons.math3.linear.FieldMatrix scalarMultiply(org.apache.commons.math3.FieldElement);

    public abstract org.apache.commons.math3.linear.FieldMatrix multiply(org.apache.commons.math3.linear.FieldMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;

    public abstract org.apache.commons.math3.linear.FieldMatrix preMultiply(org.apache.commons.math3.linear.FieldMatrix) throws org.apache.commons.math3.exception.DimensionMismatchException;

    public abstract org.apache.commons.math3.linear.FieldMatrix power(int) throws org.apache.commons.math3.linear.NonSquareMatrixException, org.apache.commons.math3.exception.NotPositiveException;

    public abstract org.apache.commons.math3.FieldElement[][] getData();

    public abstract org.apache.commons.math3.linear.FieldMatrix getSubMatrix(int, int, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.linear.FieldMatrix getSubMatrix(int[], int[]) throws org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void copySubMatrix(int, int, int, int, org.apache.commons.math3.FieldElement[][]) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void copySubMatrix(int[], int[], org.apache.commons.math3.FieldElement[][]) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void setSubMatrix(org.apache.commons.math3.FieldElement[][], int, int) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NoDataException, org.apache.commons.math3.exception.NullArgumentException;

    public abstract org.apache.commons.math3.linear.FieldMatrix getRowMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void setRowMatrix(int, org.apache.commons.math3.linear.FieldMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.linear.FieldMatrix getColumnMatrix(int) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void setColumnMatrix(int, org.apache.commons.math3.linear.FieldMatrix) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.linear.FieldVector getRowVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void setRowVector(int, org.apache.commons.math3.linear.FieldVector) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.linear.FieldVector getColumnVector(int) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void setColumnVector(int, org.apache.commons.math3.linear.FieldVector) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.FieldElement[] getRow(int) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void setRow(int, org.apache.commons.math3.FieldElement[]) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.FieldElement[] getColumn(int) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void setColumn(int, org.apache.commons.math3.FieldElement[]) throws org.apache.commons.math3.linear.MatrixDimensionMismatchException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.FieldElement getEntry(int, int) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void setEntry(int, int, org.apache.commons.math3.FieldElement) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void addToEntry(int, int, org.apache.commons.math3.FieldElement) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract void multiplyEntry(int, int, org.apache.commons.math3.FieldElement) throws org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.linear.FieldMatrix transpose();

    public abstract org.apache.commons.math3.FieldElement getTrace() throws org.apache.commons.math3.linear.NonSquareMatrixException;

    public abstract org.apache.commons.math3.FieldElement[] operate(org.apache.commons.math3.FieldElement[]) throws org.apache.commons.math3.exception.DimensionMismatchException;

    public abstract org.apache.commons.math3.linear.FieldVector operate(org.apache.commons.math3.linear.FieldVector) throws org.apache.commons.math3.exception.DimensionMismatchException;

    public abstract org.apache.commons.math3.FieldElement[] preMultiply(org.apache.commons.math3.FieldElement[]) throws org.apache.commons.math3.exception.DimensionMismatchException;

    public abstract org.apache.commons.math3.linear.FieldVector preMultiply(org.apache.commons.math3.linear.FieldVector) throws org.apache.commons.math3.exception.DimensionMismatchException;

    public abstract org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor);

    public abstract org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor);

    public abstract org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;

    public abstract org.apache.commons.math3.FieldElement walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.OutOfRangeException, org.apache.commons.math3.exception.NumberIsTooSmallException;

    public abstract org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor);

    public abstract org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor);

    public abstract org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.FieldElement walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor);

    public abstract org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor);

    public abstract org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;

    public abstract org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor, int, int, int, int) throws org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.OutOfRangeException;
}
