public abstract class com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator extends java.lang.Object implements com.opengamma.analytics.financial.covariance.VolatilityCalculator
{
    private static final com.opengamma.util.CalculationMode DEFAULT_CALCULATION_MODE;
    private static final double DEFAULT_PERCENT_BAD_DATA_POINTS;
    private final com.opengamma.util.CalculationMode _mode;
    private final double _percentBadDataPoints;

    public void <init>()
    {
        com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator r0;
        com.opengamma.util.CalculationMode $r1;

        r0 := @this: com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator;

        $r1 = <com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode DEFAULT_CALCULATION_MODE>;

        specialinvoke r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: void <init>(com.opengamma.util.CalculationMode,double)>($r1, 0.0);

        return;
    }

    public void <init>(com.opengamma.util.CalculationMode)
    {
        com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator r0;
        com.opengamma.util.CalculationMode r1;

        r0 := @this: com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator;

        r1 := @parameter0: com.opengamma.util.CalculationMode;

        specialinvoke r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: void <init>(com.opengamma.util.CalculationMode,double)>(r1, 0.0);

        return;
    }

    public void <init>(com.opengamma.util.CalculationMode, double)
    {
        com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator r0;
        com.opengamma.util.CalculationMode r1;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator;

        r1 := @parameter0: com.opengamma.util.CalculationMode;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "mode");

        staticinvoke <com.opengamma.util.ArgumentChecker: boolean isInRangeInclusive(double,double,double)>(0.0, 1.0, d0);

        r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode _mode> = r1;

        r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: double _percentBadDataPoints> = d0;

        return;
    }

    protected void testTimeSeries(com.opengamma.timeseries.DoubleTimeSeries[], int)
    {
        com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator r0;
        com.opengamma.timeseries.DoubleTimeSeries[] r1;
        int i0, $i1, i2;
        com.opengamma.timeseries.DoubleTimeSeries r2, $r4, $r5, $r6;

        r0 := @this: com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator;

        r1 := @parameter0: com.opengamma.timeseries.DoubleTimeSeries[];

        i0 := @parameter1: int;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object[] notEmpty(java.lang.Object[],java.lang.String)>(r1, "array of time series");

        $r4 = r1[0];

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testNotNullOrEmpty(com.opengamma.timeseries.DoubleTimeSeries)>($r4);

        r2 = r1[0];

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testTimeSeriesSize(com.opengamma.timeseries.DoubleTimeSeries,int)>(r2, i0);

        i2 = 1;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r5 = r1[i2];

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testTimeSeriesSize(com.opengamma.timeseries.DoubleTimeSeries,int)>($r5, i0);

        $r6 = r1[i2];

        staticinvoke <com.opengamma.analytics.financial.timeseries.util.TimeSeriesDataTestUtils: void testTimeSeriesDates(com.opengamma.timeseries.DoubleTimeSeries,com.opengamma.timeseries.DoubleTimeSeries)>(r2, $r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    protected void testHighLow(com.opengamma.timeseries.DoubleTimeSeries, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator r0;
        com.opengamma.timeseries.DoubleTimeSeries r1, r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6;
        java.util.Iterator r3, r4;
        int $i0, i3;
        byte $b1, $b2;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, r20;
        java.lang.String $r11;
        java.lang.Object $r12, $r14;
        java.lang.Double $r13, $r15;
        com.opengamma.util.CalculationMode $r16, $r17;
        boolean $z1, $z2;
        com.opengamma.timeseries.TimeSeriesException r19, r21;
        java.lang.Throwable r22, r23;

        r0 := @this: com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator;

        r1 := @parameter0: com.opengamma.timeseries.DoubleTimeSeries;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        $i0 = interfaceinvoke r1.<com.opengamma.timeseries.DoubleTimeSeries: int size()>();

        d0 = (double) $i0;

        i3 = 0;

        r3 = interfaceinvoke r1.<com.opengamma.timeseries.DoubleTimeSeries: java.util.Iterator valuesIterator()>();

        r4 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.util.Iterator valuesIterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.lang.Double) $r12;

        $d5 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.Double) $r14;

        $d6 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $b2 = $d5 cmpg $d6;

        if $b2 >= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        if $z2 == 0 goto label1;

        $r17 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode _mode>;

        $r16 = <com.opengamma.util.CalculationMode: com.opengamma.util.CalculationMode STRICT>;

        if $r17 != $r16 goto label4;

        r19 = new com.opengamma.timeseries.TimeSeriesException;

        specialinvoke r19.<com.opengamma.timeseries.TimeSeriesException: void <init>(java.lang.String)>("Not all values in the high series were greater than the values in the low series");

        r22 = (java.lang.Throwable) r19;

        throw r22;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $d2 = (double) i3;

        d1 = $d2 / d0;

        $d3 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: double _percentBadDataPoints>;

        $b1 = d1 cmpl $d3;

        if $b1 <= 0 goto label6;

        r21 = new com.opengamma.timeseries.TimeSeriesException;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Percent ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of bad data points is greater than ");

        $d4 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: double _percentBadDataPoints>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<com.opengamma.timeseries.TimeSeriesException: void <init>(java.lang.String)>($r11);

        r23 = (java.lang.Throwable) r21;

        throw r23;

     label6:
        return;
    }

    protected void testHighLowClose(com.opengamma.timeseries.DoubleTimeSeries, com.opengamma.timeseries.DoubleTimeSeries, com.opengamma.timeseries.DoubleTimeSeries)
    {
        com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator r0;
        com.opengamma.timeseries.DoubleTimeSeries r1, r2, r3;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7;
        java.util.Iterator r4, r5, r6;
        int $i0, i5;
        byte $b1, $b2, $b3, $b4;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, r24;
        java.lang.String $r13;
        java.lang.Object $r14, $r16, $r18;
        java.lang.Double $r15, $r17, $r19;
        com.opengamma.util.CalculationMode $r20, $r21;
        boolean $z1, $z2;
        com.opengamma.timeseries.TimeSeriesException r23, r25;
        java.lang.Throwable r26, r27;

        r0 := @this: com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator;

        r1 := @parameter0: com.opengamma.timeseries.DoubleTimeSeries;

        r2 := @parameter1: com.opengamma.timeseries.DoubleTimeSeries;

        r3 := @parameter2: com.opengamma.timeseries.DoubleTimeSeries;

        $i0 = interfaceinvoke r1.<com.opengamma.timeseries.DoubleTimeSeries: int size()>();

        d0 = (double) $i0;

        i5 = 0;

        r4 = interfaceinvoke r1.<com.opengamma.timeseries.DoubleTimeSeries: java.util.Iterator valuesIterator()>();

        r5 = interfaceinvoke r2.<com.opengamma.timeseries.DoubleTimeSeries: java.util.Iterator valuesIterator()>();

        r6 = interfaceinvoke r3.<com.opengamma.timeseries.DoubleTimeSeries: java.util.Iterator valuesIterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.Double) $r14;

        d1 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.lang.Double) $r16;

        d2 = virtualinvoke $r17.<java.lang.Double: double doubleValue()>();

        $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (java.lang.Double) $r18;

        d3 = virtualinvoke $r19.<java.lang.Double: double doubleValue()>();

        $b2 = d1 cmpg d2;

        if $b2 < 0 goto label2;

        $b3 = d3 cmpl d1;

        if $b3 > 0 goto label2;

        $b4 = d3 cmpg d2;

        if $b4 >= 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        if $z2 == 0 goto label1;

        $r21 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode _mode>;

        $r20 = <com.opengamma.util.CalculationMode: com.opengamma.util.CalculationMode STRICT>;

        if $r21 != $r20 goto label5;

        r23 = new com.opengamma.timeseries.TimeSeriesException;

        specialinvoke r23.<com.opengamma.timeseries.TimeSeriesException: void <init>(java.lang.String)>("Not all values in the high series were greater than the values in the low series");

        r26 = (java.lang.Throwable) r23;

        throw r26;

     label5:
        i5 = i5 + 1;

        goto label1;

     label6:
        $d5 = (double) i5;

        d4 = $d5 / d0;

        $d6 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: double _percentBadDataPoints>;

        $b1 = d4 cmpl $d6;

        if $b1 <= 0 goto label7;

        r25 = new com.opengamma.timeseries.TimeSeriesException;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Percent ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of bad data points is greater than ");

        $d7 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: double _percentBadDataPoints>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r25.<com.opengamma.timeseries.TimeSeriesException: void <init>(java.lang.String)>($r13);

        r27 = (java.lang.Throwable) r25;

        throw r27;

     label7:
        return;
    }

    protected static com.opengamma.util.CalculationMode getDefaultCalculationMode()
    {
        com.opengamma.util.CalculationMode $r0;

        $r0 = <com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode DEFAULT_CALCULATION_MODE>;

        return $r0;
    }

    protected static double getDefaultBadDataPoints()
    {
        return 0.0;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator r0;
        long l1, $l3, $l4;
        com.opengamma.util.CalculationMode $r1, $r2;
        int $i2, $i5, $i6, $i8, i9, i10;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator;

        $i2 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode _mode>;

        if $r1 != null goto label1;

        $i8 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode _mode>;

        $i8 = virtualinvoke $r2.<com.opengamma.util.CalculationMode: int hashCode()>();

     label2:
        i9 = $i2 + $i8;

        $d0 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: double _percentBadDataPoints>;

        l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i6 = 31 * i9;

        $l3 = l1 >>> 32;

        $l4 = l1 ^ $l3;

        $i5 = (int) $l4;

        i10 = $i6 + $i5;

        return i10;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.util.CalculationMode $r5, $r6;
        double $d0, $d1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator) r1;

        $r6 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode _mode>;

        $r5 = r2.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode _mode>;

        if $r6 == $r5 goto label4;

        return 0;

     label4:
        $d0 = r0.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: double _percentBadDataPoints>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: double _percentBadDataPoints>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        com.opengamma.util.CalculationMode $r0;

        <com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: double DEFAULT_PERCENT_BAD_DATA_POINTS> = 0.0;

        $r0 = <com.opengamma.util.CalculationMode: com.opengamma.util.CalculationMode STRICT>;

        <com.opengamma.analytics.financial.covariance.HistoricalVolatilityCalculator: com.opengamma.util.CalculationMode DEFAULT_CALCULATION_MODE> = $r0;

        return;
    }
}
