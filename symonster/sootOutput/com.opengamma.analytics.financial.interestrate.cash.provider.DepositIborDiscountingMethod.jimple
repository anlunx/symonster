public final class com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        com.opengamma.util.money.Currency $r5, $r8;
        java.lang.Double $r6;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r7;
        com.opengamma.util.money.MultipleCurrencyAmount $r9;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Deposit");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.util.money.Currency getCurrency()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r5, $r6);

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getAccrualFactor()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getRate()>();

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getStartTime()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getAccrualFactor()>();

        $d8 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r7, $d5, $d6, $d7);

        $d9 = $d4 - $d8;

        $d10 = $d3 * $d9;

        d1 = $d10 * d0;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r9 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r8, d1);

        return $r9;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        com.opengamma.util.money.Currency $r9, $r21, $r25;
        java.lang.Double $r10;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r11, $r15;
        java.util.HashMap $r12, $r18;
        java.util.ArrayList $r13, $r19;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity $r14;
        java.lang.String $r16, $r22;
        com.opengamma.util.tuple.DoublesPair $r20;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r24, r28;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r26;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Deposit");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves");

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.util.money.Currency getCurrency()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r9, $r10);

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getStartTime()>();

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getAccrualFactor()>();

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r11, $d5, $d6, $d7);

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getAccrualFactor()>();

        d2 = $d8 * d0;

        $d9 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getAccrualFactor()>();

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getRate()>();

        $d11 = $d10 - d1;

        d3 = $d9 * $d11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r14 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        $d12 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getStartTime()>();

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getAccrualFactor()>();

        specialinvoke $r14.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: void <init>(double,double,double,double)>($d12, $d13, $d14, d2);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $r16 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>($r15);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r13);

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $d17 = neg $d16;

        $d18 = $d17 * d0;

        $d19 = $d18 * d3;

        $r20 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d15, $d19);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r22 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r21);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r19);

        $r24 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity;

        specialinvoke $r24.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: void <init>()>();

        $r25 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.util.money.Currency getCurrency()>();

        $r26 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity of(java.util.Map,java.util.Map)>($r18, $r12);

        r28 = virtualinvoke $r24.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity plus(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r25, $r26);

        return r28;
    }

    public double parRate(com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getStartTime()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getAccrualFactor()>();

        $d3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r3, $d0, $d1, $d2);

        return $d3;
    }

    public double parSpread(com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r3;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getStartTime()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getAccrualFactor()>();

        $d3 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>($r3, $d0, $d1, $d2);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getRate()>();

        $d5 = $d3 - $d4;

        return $d5;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity parSpreadCurveSensitivity(com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        java.util.HashMap $r7;
        java.util.ArrayList $r8;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity $r9;
        double $d0, $d1, $d2;
        com.opengamma.analytics.financial.instrument.index.IborIndex $r10;
        java.lang.String $r11;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r13;

        r0 := @this: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Deposit");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multicurves");

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $r9 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        $d0 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getStartTime()>();

        $d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getEndTime()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: double getAccrualFactor()>();

        specialinvoke $r9.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: void <init>(double,double,double,double)>($d0, $d1, $d2, 1.0);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.cash.derivative.DepositIbor: com.opengamma.analytics.financial.instrument.index.IborIndex getIndex()>();

        $r11 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)>($r10);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r8);

        $r13 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofForward(java.util.Map)>($r7);

        return $r13;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod: com.opengamma.analytics.financial.interestrate.cash.provider.DepositIborDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
