public final class com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod INSTANCE;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC;
    private static final com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC;

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod INSTANCE>;

        return $r0;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r5;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r6;
        java.lang.Double $r7, $r9;
        com.opengamma.util.money.Currency $r8, $r10;
        com.opengamma.util.money.MultipleCurrencyAmount $r11;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r5 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r7 = virtualinvoke $r5.<com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: java.lang.Double visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r6, r2);

        d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: com.opengamma.util.money.Currency getCurrency()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getPaymentTime()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d1 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r8, $r9);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getPaymentYearFraction()>();

        $d5 = d0 * $d4;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getNotional()>();

        $d7 = $d5 * $d6;

        d2 = $d7 * d1;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: com.opengamma.util.money.Currency getCurrency()>();

        $r11 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r10, d2);

        return $r11;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        com.opengamma.util.money.Currency r3, $r13, $r21;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r4, r7, $r24, $r25, $r26;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r10;
        com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon $r11, $r15;
        java.lang.Double $r12, $r14;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r16;
        java.lang.Object $r17;
        java.util.ArrayList $r18;
        com.opengamma.util.tuple.DoublesPair $r19;
        java.util.HashMap $r20;
        java.lang.String $r22;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r27;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        r3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: com.opengamma.util.money.Currency getCurrency()>();

        $r10 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC>;

        $r11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r12 = virtualinvoke $r10.<com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: java.lang.Double visitFixedCouponSwap(com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon,com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface)>($r11, r2);

        d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        d1 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getPaymentTime()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: com.opengamma.util.money.Currency getCurrency()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        d2 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r13, $r14);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getPaymentYearFraction()>();

        $d5 = d0 * $d4;

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getNotional()>();

        d3 = $d5 * $d6;

        $r15 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon getUnderlyingSwap()>();

        $r16 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC>;

        $r17 = virtualinvoke $r15.<com.opengamma.analytics.financial.interestrate.swap.derivative.SwapFixedCoupon: java.lang.Object accept(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,java.lang.Object)>($r16, r2);

        r4 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity) $r17;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        $d7 = neg d1;

        $d8 = $d7 * d2;

        $d9 = $d8 * d3;

        $r19 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d1, $d9);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: com.opengamma.util.money.Currency getCurrency()>();

        $r22 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r21);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r18);

        r7 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity ofYieldDiscounting(java.util.Map)>($r20);

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getPaymentYearFraction()>();

        $d11 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getNotional()>();

        $d12 = $d10 * $d11;

        $d13 = $d12 * d2;

        $r24 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d13);

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getPaymentYearFraction()>();

        $d15 = d0 * $d14;

        $d16 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponCMS: double getNotional()>();

        $d17 = $d15 * $d16;

        $r25 = virtualinvoke r7.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity multipliedBy(double)>($d17);

        $r26 = virtualinvoke $r24.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity plus(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r25);

        $r27 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>(r3, $r26);

        return $r27;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod $r0;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator $r1;
        com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator $r2;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod INSTANCE> = $r0;

        $r1 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateDiscountingCalculator PRDC> = $r1;

        $r2 = staticinvoke <com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator getInstance()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponCMSDiscountingMethod: com.opengamma.analytics.financial.provider.calculator.discounting.ParRateCurveSensitivityDiscountingCalculator PRCSDC> = $r2;

        return;
    }
}
