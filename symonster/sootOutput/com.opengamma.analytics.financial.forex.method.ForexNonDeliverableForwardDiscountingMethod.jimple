public final class com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod extends java.lang.Object implements com.opengamma.analytics.financial.forex.method.ForexPricingMethod
{
    private static final com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.lang.String $r3, $r5;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4, $r6;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r7;
        com.opengamma.util.money.Currency $r8, $r9, $r10;
        com.opengamma.util.money.MultipleCurrencyAmount $r11;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve2Name()>();

        $r4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r3);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        d0 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d4);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve1Name()>();

        $r6 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r5);

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d5);

        $r7 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        d2 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, $r9);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getExchangeRate()>();

        $d8 = $d7 / d2;

        $d9 = $d8 * d1;

        $d10 = d0 - $d9;

        d3 = $d6 * $d10;

        $r10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r11 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r10, d3);

        return $r11;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Derivative should be ForexNonDeliverableForward");

        $r3 = (com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r3, r2);

        return $r4;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.lang.String $r3, $r5;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4, $r6;
        com.opengamma.util.money.Currency[] $r7;
        com.opengamma.util.money.Currency $r8, $r9;
        double[] $r10;
        com.opengamma.util.money.MultipleCurrencyAmount $r11;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve2Name()>();

        $r4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r3);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        d0 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d4);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve1Name()>();

        $r6 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r5);

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d5);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        $d7 = neg $d6;

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getExchangeRate()>();

        $d9 = $d7 * $d8;

        d2 = $d9 * d1;

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        d3 = $d10 * d0;

        $r7 = newarray (com.opengamma.util.money.Currency)[2];

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        $r7[0] = $r8;

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r7[1] = $r9;

        $r10 = newarray (double)[2];

        $r10[0] = d2;

        $r10[1] = d3;

        $r11 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency[],double[])>($r7, $r10);

        return $r11;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward $r3;
        com.opengamma.util.money.MultipleCurrencyAmount $r4;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Derivative should be ForexNonDeliverableForward");

        $r3 = (com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod: com.opengamma.util.money.MultipleCurrencyAmount currencyExposure(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r3, r2);

        return $r4;
    }

    public double forwardForexRate(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, d2, $d3, $d4, $d5, $d6;
        java.lang.String $r3, $r5;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4, $r6;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r7;
        com.opengamma.util.money.Currency $r8, $r9;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve2Name()>();

        $r4 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r3);

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        d0 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d3);

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve1Name()>();

        $r6 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r5);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        d1 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d4);

        $r7 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        d2 = virtualinvoke $r7.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r8, $r9);

        $d5 = d2 * d0;

        $d6 = $d5 / d1;

        return $d6;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        double d0, d1, d2, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        java.lang.String $r7, $r9, $r17, $r21;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r8, $r10;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r11;
        com.opengamma.util.money.Currency $r12, $r13, $r24;
        java.util.HashMap $r14;
        java.util.ArrayList $r15, $r19;
        com.opengamma.util.tuple.DoublesPair $r16, $r20;
        com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity $r23;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r25;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve2Name()>();

        $r8 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r7);

        $d6 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        d0 = virtualinvoke $r8.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d6);

        $r9 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve1Name()>();

        $r10 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)>($r9);

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        d1 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d7);

        $r11 = virtualinvoke r2.<com.opengamma.analytics.financial.interestrate.YieldCurveBundle: com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()>();

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency1()>();

        d2 = virtualinvoke $r11.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>($r12, $r13);

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        $d9 = neg $d8;

        $d10 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getExchangeRate()>();

        $d11 = $d9 * $d10;

        $d12 = $d11 / d2;

        d4 = $d12 * 1.0;

        $d13 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getNotionalCurrency2()>();

        d5 = $d13 * 1.0;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $d14 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $d15 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $d16 = neg $d15;

        $d17 = $d16 * d1;

        $d18 = $d17 * d4;

        $r16 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d14, $d18);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve1Name()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r15);

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        $d19 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $d20 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: double getPaymentTime()>();

        $d21 = neg $d20;

        $d22 = $d21 * d0;

        $d23 = $d22 * d5;

        $r20 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d19, $d23);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: java.lang.String getDiscountingCurve2Name()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r19);

        $r23 = new com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity;

        specialinvoke $r23.<com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity: void <init>(java.util.Map)>($r14);

        $r24 = virtualinvoke r1.<com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward: com.opengamma.util.money.Currency getCurrency2()>();

        $r25 = staticinvoke <com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.interestrate.InterestRateCurveSensitivity)>($r24, $r23);

        return $r25;
    }

    public com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative, com.opengamma.analytics.financial.interestrate.YieldCurveBundle)
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative r1;
        com.opengamma.analytics.financial.interestrate.YieldCurveBundle r2;
        boolean $z0;
        com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward $r3;
        com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity $r4;

        r0 := @this: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative;

        r2 := @parameter1: com.opengamma.analytics.financial.interestrate.YieldCurveBundle;

        $z0 = r1 instanceof com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "Forex non-deliverable forward");

        $r3 = (com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward) r1;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod: com.opengamma.analytics.financial.forex.method.MultipleCurrencyInterestRateCurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.forex.derivative.ForexNonDeliverableForward,com.opengamma.analytics.financial.interestrate.YieldCurveBundle)>($r3, r2);

        return $r4;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod: com.opengamma.analytics.financial.forex.method.ForexNonDeliverableForwardDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
