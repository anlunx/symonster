class org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1 extends java.lang.Object implements java.util.Iterator
{
    int index;
    final org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet this$0;

    void <init>(org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet)
    {
        org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1 r0;
        org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1;

        r1 := @parameter0: org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet;

        r0.<org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1: org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1: int index> = 0;

        return;
    }

    public void remove()
    {
        org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public java.lang.Object next()
    {
        org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1 r0;
        boolean $z0;
        org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet $r1;
        org.w3c.dom.NodeList $r2;
        int $i0, $i1;
        org.w3c.dom.Node $r3;
        java.util.NoSuchElementException $r4;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1;

        $z0 = virtualinvoke r0.<org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1: org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet this$0>;

        $r2 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet: org.w3c.dom.NodeList access$000(org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet)>($r1);

        $i0 = r0.<org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1: int index>;

        $i1 = $i0 + 1;

        r0.<org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1: int index> = $i1;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        return $r3;
    }

    public boolean hasNext()
    {
        org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1 r0;
        org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet $r1;
        int $i0, $i1;
        org.w3c.dom.NodeList $r2;
        boolean $z0;

        r0 := @this: org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1;

        $i0 = r0.<org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1: int index>;

        $r1 = r0.<org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet$1: org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet this$0>;

        $r2 = staticinvoke <org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet: org.w3c.dom.NodeList access$000(org.jcp.xml.dsig.internal.dom.DOMUtils$NodeSet)>($r1);

        $i1 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
