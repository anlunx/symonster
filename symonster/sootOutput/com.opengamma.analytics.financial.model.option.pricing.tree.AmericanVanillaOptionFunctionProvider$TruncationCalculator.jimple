class com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator extends com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$Calculator
{
    private final double _volatility;
    private final double _interestRate;
    private final double _dividend;
    private final double _stdDiv;
    final com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0;

    public void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider, double, double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator r0;
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider r1;
        double d0, d1, d2, d3;
        byte $b0, $b1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0> = r1;

        specialinvoke r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$Calculator: void <init>(com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider,com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$1)>(r1, null);

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z2, "volatility should be positive");

        $z0 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d0);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "volatility should be finite");

        $b1 = d3 cmpl 0.0;

        if $b1 <= 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z3, "stdDiv should be positive");

        $z1 = staticinvoke <com.google.common.primitives.Doubles: boolean isFinite(double)>(d3);

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "stdDiv should be finite");

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _volatility> = d0;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate> = d1;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _dividend> = d2;

        r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _stdDiv> = d3;

        return;
    }

    public double[] payoffsAtExpiry(double, double, double)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        double[] r1;
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider $r2, $r3, $r4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r2 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        i0 = virtualinvoke $r2.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: int getNumberOfSteps()>();

        i1 = i0 + 1;

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        d3 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getStrike()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        d4 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getSign()>();

        $d6 = (double) i0;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, $d6);

        d5 = d0 * $d7;

        $d8 = d3 / d5;

        $d9 = staticinvoke <java.lang.Math: double log(double)>($d8);

        $d10 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d11 = $d9 / $d10;

        i2 = (int) $d11;

        r1 = newarray (double)[i1];

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r1, 0.0);

        $i3 = i2 - 3;

        $d12 = (double) $i3;

        $d13 = staticinvoke <java.lang.Math: double pow(double,double)>(d2, $d12);

        d17 = d5 * $d13;

        i6 = 0;

     label1:
        if i6 >= 6 goto label2;

        $i4 = i2 - 3;

        $i5 = $i4 + i6;

        $d14 = d17 - d3;

        $d15 = d4 * $d14;

        $d16 = staticinvoke <java.lang.Math: double max(double,double)>($d15, 0.0);

        r1[$i5] = $d16;

        d17 = d17 * d2;

        i6 = i6 + 1;

        goto label1;

     label2:
        return r1;
    }

    public double[] nextValues(double, double, double, double[], double, double, double, double, int)
    {
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, d79, d80, d81, d82, d83;
        double[] r1, r2;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, i16, $i17, i18, i19, $i20;
        boolean z0, $z1;
        com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider $r3, $r4, $r5, $r6, $r7;
        byte $b4;

        r0 := @this: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r1 := @parameter3: double[];

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        d5 := @parameter6: double;

        d6 := @parameter7: double;

        i0 := @parameter8: int;

        $r3 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        d7 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getStrike()>();

        $r4 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        d8 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getSign()>();

        i1 = i0 + 1;

        $d13 = (double) i0;

        $d14 = staticinvoke <java.lang.Math: double pow(double,double)>(d5, $d13);

        d9 = d4 * $d14;

        r2 = newarray (double)[i1];

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r2, 0.0);

        $r5 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        $d15 = virtualinvoke $r5.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getTimeToExpiry()>();

        $d16 = (double) i0;

        $r6 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        $d17 = virtualinvoke $r6.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: double getTimeToExpiry()>();

        $d18 = $d16 * $d17;

        $r7 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider this$0>;

        $i2 = virtualinvoke $r7.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider: int getNumberOfSteps()>();

        $d19 = (double) $i2;

        $d20 = $d18 / $d19;

        d10 = $d15 - $d20;

        $d21 = d7 / d9;

        $d22 = staticinvoke <java.lang.Math: double log(double)>($d21);

        $d24 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d23 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _dividend>;

        $d25 = $d24 - $d23;

        $d26 = $d25 * d10;

        d11 = $d22 - $d26;

        $d28 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _stdDiv>;

        $d27 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _volatility>;

        $d29 = $d28 * $d27;

        $d30 = staticinvoke <java.lang.Math: double sqrt(double)>(d10);

        d12 = $d29 * $d30;

        $d31 = d11 + d12;

        $d32 = staticinvoke <java.lang.Math: double log(double)>(d6);

        $d33 = $d31 / $d32;

        i13 = (int) $d33;

        $d34 = d11 - d12;

        $d35 = staticinvoke <java.lang.Math: double log(double)>(d6);

        $d36 = $d34 / $d35;

        $i3 = (int) $d36;

        i14 = $i3 + 1;

        if i13 <= i0 goto label01;

        $i15 = i0;

        goto label02;

     label01:
        $i15 = i13;

     label02:
        i16 = $i15;

        if i14 >= 0 goto label03;

        $i17 = 0;

        goto label04;

     label03:
        $i17 = i14;

     label04:
        i18 = $i17;

        $b4 = d8 cmpl 1.0;

        if $b4 != 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        z0 = $z1;

        $i5 = i18 - 3;

        $d37 = (double) $i5;

        $d38 = staticinvoke <java.lang.Math: double pow(double,double)>(d6, $d37);

        d79 = d9 * $d38;

        if i18 <= 2 goto label07;

        $i12 = i18 - 3;

        $d77 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _volatility>;

        $d76 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d74 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d73 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _dividend>;

        $d75 = $d74 - $d73;

        $d78 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double price(double,double,double,double,double,double,boolean)>(d79, d7, d10, $d77, $d76, $d75, $z1);

        r2[$i12] = $d78;

     label07:
        d80 = d79 * d6;

        if i18 <= 1 goto label08;

        $i11 = i18 - 2;

        $d71 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _volatility>;

        $d70 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d68 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d67 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _dividend>;

        $d69 = $d68 - $d67;

        $d72 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double price(double,double,double,double,double,double,boolean)>(d80, d7, d10, $d71, $d70, $d69, z0);

        r2[$i11] = $d72;

     label08:
        d81 = d80 * d6;

        if i18 <= 0 goto label09;

        $i10 = i18 - 1;

        $d65 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _volatility>;

        $d64 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d62 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d61 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _dividend>;

        $d63 = $d62 - $d61;

        $d66 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double price(double,double,double,double,double,double,boolean)>(d81, d7, d10, $d65, $d64, $d63, z0);

        r2[$i10] = $d66;

     label09:
        d82 = d81 * d6;

        i19 = i18;

     label10:
        $i20 = i16 + 1;

        if i19 >= $i20 goto label11;

        $i9 = i19 + 1;

        $d51 = r1[$i9];

        $d54 = d1 * $d51;

        $d52 = r1[i19];

        $d53 = d2 * $d52;

        $d55 = $d54 + $d53;

        $d59 = d0 * $d55;

        $d56 = d82 + d3;

        $d57 = $d56 - d7;

        $d58 = d8 * $d57;

        $d60 = staticinvoke <java.lang.Math: double max(double,double)>($d59, $d58);

        r2[i19] = $d60;

        d82 = d82 * d6;

        i19 = i19 + 1;

        goto label10;

     label11:
        if i16 >= i0 goto label12;

        $i8 = i16 + 1;

        $d49 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _volatility>;

        $d48 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d46 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d45 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _dividend>;

        $d47 = $d46 - $d45;

        $d50 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double price(double,double,double,double,double,double,boolean)>(d82, d7, d10, $d49, $d48, $d47, z0);

        r2[$i8] = $d50;

     label12:
        d83 = d82 * d6;

        $i6 = i0 - 1;

        if i16 >= $i6 goto label13;

        $i7 = i16 + 2;

        $d43 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _volatility>;

        $d42 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d40 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _interestRate>;

        $d39 = r0.<com.opengamma.analytics.financial.model.option.pricing.tree.AmericanVanillaOptionFunctionProvider$TruncationCalculator: double _dividend>;

        $d41 = $d40 - $d39;

        $d44 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackScholesFormulaRepository: double price(double,double,double,double,double,double,boolean)>(d83, d7, d10, $d43, $d42, $d41, z0);

        r2[$i7] = $d44;

     label13:
        return r2;
    }
}
