public class org.apache.commons.math3.stat.interval.NormalApproximationInterval extends java.lang.Object implements org.apache.commons.math3.stat.interval.BinomialConfidenceInterval
{

    public void <init>()
    {
        org.apache.commons.math3.stat.interval.NormalApproximationInterval r0;

        r0 := @this: org.apache.commons.math3.stat.interval.NormalApproximationInterval;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.stat.interval.ConfidenceInterval createInterval(int, int, double)
    {
        org.apache.commons.math3.stat.interval.NormalApproximationInterval r0;
        int i0, i1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        org.apache.commons.math3.distribution.NormalDistribution $r2;
        org.apache.commons.math3.stat.interval.ConfidenceInterval $r3;

        r0 := @this: org.apache.commons.math3.stat.interval.NormalApproximationInterval;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        staticinvoke <org.apache.commons.math3.stat.interval.IntervalUtils: void checkParameters(int,int,double)>(i0, i1, d0);

        $d5 = (double) i1;

        $d4 = (double) i0;

        d1 = $d5 / $d4;

        $d6 = 1.0 - d0;

        d2 = $d6 / 2.0;

        $r2 = new org.apache.commons.math3.distribution.NormalDistribution;

        specialinvoke $r2.<org.apache.commons.math3.distribution.NormalDistribution: void <init>()>();

        $d7 = 1.0 - d2;

        $d8 = virtualinvoke $r2.<org.apache.commons.math3.distribution.NormalDistribution: double inverseCumulativeProbability(double)>($d7);

        $d9 = (double) i0;

        $d10 = 1.0 / $d9;

        $d12 = $d10 * d1;

        $d11 = 1.0 - d1;

        $d13 = $d12 * $d11;

        $d14 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d13);

        d3 = $d8 * $d14;

        $r3 = new org.apache.commons.math3.stat.interval.ConfidenceInterval;

        $d16 = d1 - d3;

        $d15 = d1 + d3;

        specialinvoke $r3.<org.apache.commons.math3.stat.interval.ConfidenceInterval: void <init>(double,double,double)>($d16, $d15, d0);

        return $r3;
    }
}
