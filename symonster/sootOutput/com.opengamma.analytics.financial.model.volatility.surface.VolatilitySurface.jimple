public class com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.VolatilityModel
{
    private final com.opengamma.analytics.math.surface.Surface _surface;
    public static final com.opengamma.analytics.math.Axis EXPIRY_AXIS;
    public static final com.opengamma.analytics.math.Axis STRIKE_AXIS;
    private final java.util.List _expiryTenors;

    public void <init>(com.opengamma.analytics.math.surface.Surface)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        com.opengamma.analytics.math.surface.Surface r1, $r3;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableList $r4;
        java.util.List r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r3 = (com.opengamma.analytics.math.surface.Surface) $r2;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface> = $r3;

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        r5 = (java.util.List) $r4;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: java.util.List _expiryTenors> = r5;

        return;
    }

    public void <init>(com.opengamma.analytics.math.surface.Surface, java.util.List)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        com.opengamma.analytics.math.surface.Surface r1, $r4;
        java.util.List r2, r18;
        java.lang.Object $r3;
        int $i0, $i1, $i2, $i3;
        com.google.common.collect.ImmutableList $r6;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, r16;
        java.lang.String $r15;
        java.lang.IllegalArgumentException r17;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: com.opengamma.analytics.math.surface.Surface;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "surface");

        $r4 = (com.opengamma.analytics.math.surface.Surface) $r3;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface> = $r4;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "expiryTenors");

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i1 = virtualinvoke r1.<com.opengamma.analytics.math.surface.Surface: int size()>();

        if $i0 == $i1 goto label1;

        r17 = new java.lang.IllegalArgumentException;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The number of tenors (");

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") doesn\'t match ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the size of the surface(");

        $i3 = virtualinvoke r1.<com.opengamma.analytics.math.surface.Surface: int size()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw r17;

     label1:
        $r6 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>(r2);

        r18 = (java.util.List) $r6;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: java.util.List _expiryTenors> = r18;

        return;
    }

    public java.util.List getExpiryTenors()
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        java.util.List $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: java.util.List _expiryTenors>;

        return $r1;
    }

    public java.lang.Double getVolatility(com.opengamma.util.tuple.DoublesPair)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        com.opengamma.util.tuple.DoublesPair r1;
        com.opengamma.analytics.math.surface.Surface $r3;
        java.lang.Object $r4;
        java.lang.Double $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: com.opengamma.util.tuple.DoublesPair;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "xy pair");

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.surface.Surface: java.lang.Object getZValue(com.opengamma.util.tuple.Pair)>(r1);

        $r5 = (java.lang.Double) $r4;

        return $r5;
    }

    public double getVolatility(double, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        double d0, d1, $d2;
        com.opengamma.util.tuple.DoublesPair r1;
        java.lang.Double $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>(d0, d1);

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: java.lang.Double getVolatility(com.opengamma.util.tuple.DoublesPair)>(r1);

        $d2 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d2;
    }

    public com.opengamma.analytics.financial.model.volatility.curve.VolatilityCurve getSlice(com.opengamma.analytics.math.Axis, double, com.opengamma.analytics.math.interpolation.Interpolator1D)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        com.opengamma.analytics.math.Axis r1;
        double d0;
        com.opengamma.analytics.math.interpolation.Interpolator1D r2;
        com.opengamma.analytics.math.curve.Curve r3;
        com.opengamma.analytics.math.surface.Surface $r4;
        java.lang.Double $r5;
        com.opengamma.analytics.financial.model.volatility.curve.VolatilityCurve $r6;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: com.opengamma.analytics.math.Axis;

        d0 := @parameter1: double;

        r2 := @parameter2: com.opengamma.analytics.math.interpolation.Interpolator1D;

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r3 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceSliceFunction: com.opengamma.analytics.math.curve.Curve cut(com.opengamma.analytics.math.surface.Surface,com.opengamma.analytics.math.Axis,java.lang.Double,com.opengamma.analytics.math.interpolation.Interpolator1D)>($r4, r1, $r5, r2);

        $r6 = new com.opengamma.analytics.financial.model.volatility.curve.VolatilityCurve;

        specialinvoke $r6.<com.opengamma.analytics.financial.model.volatility.curve.VolatilityCurve: void <init>(com.opengamma.analytics.math.curve.Curve)>(r3);

        return $r6;
    }

    public com.opengamma.analytics.math.surface.Surface getSurface()
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        com.opengamma.analytics.math.surface.Surface $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withParallelShift(double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0, $r1;
        double d0;
        com.opengamma.analytics.math.surface.Surface $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface getParallelShiftedSurface(double)>(d0);

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r2);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withSingleAdditiveShift(double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0, $r1;
        double d0, d1, d2;
        com.opengamma.analytics.math.surface.Surface $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface getSingleAdditiveShiftSurface(double,double,double)>(d0, d1, d2);

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r2);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withMultipleAdditiveShifts(double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0, $r4;
        double[] r1, r2, r3;
        com.opengamma.analytics.math.surface.Surface $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface getMultipleAdditiveShiftsSurface(double[],double[],double[])>(r1, r2, r3);

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r5);

        return $r4;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withConstantMultiplicativeShift(double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0, $r1;
        double d0;
        com.opengamma.analytics.math.surface.Surface $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        d0 := @parameter0: double;

        $r1 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface getConstantMultiplicativeShiftSurface(double)>(d0);

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r2);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withSingleMultiplicativeShift(double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0, $r1;
        double d0, d1, d2;
        com.opengamma.analytics.math.surface.Surface $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r2 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface getSingleMultiplicativeShiftSurface(double,double,double)>(d0, d1, d2);

        specialinvoke $r1.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r2);

        return $r1;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface withMultipleMultiplicativeShifts(double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0, $r4;
        double[] r1, r2, r3;
        com.opengamma.analytics.math.surface.Surface $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface getMultipleMultiplicativeShiftsSurface(double[],double[],double[])>(r1, r2, r3);

        specialinvoke $r4.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r5);

        return $r4;
    }

    protected com.opengamma.analytics.math.surface.Surface getParallelShiftedSurface(double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        double d0;
        com.opengamma.analytics.math.surface.Surface $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        d0 := @parameter0: double;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $r2 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,boolean)>($r1, d0, 1);

        return $r2;
    }

    protected com.opengamma.analytics.math.surface.Surface getSingleAdditiveShiftSurface(double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        double d0, d1, d2;
        com.opengamma.analytics.math.surface.Surface $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $r2 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,double,double,boolean)>($r1, d0, d1, d2, 1);

        return $r2;
    }

    protected com.opengamma.analytics.math.surface.Surface getMultipleAdditiveShiftsSurface(double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        double[] r1, r2, r3;
        com.opengamma.analytics.math.surface.Surface $r4, $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $r5 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double[],double[],double[],boolean)>($r4, r1, r2, r3, 1);

        return $r5;
    }

    protected com.opengamma.analytics.math.surface.Surface getConstantMultiplicativeShiftSurface(double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        double d0;
        com.opengamma.analytics.math.surface.Surface $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        d0 := @parameter0: double;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $r2 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,boolean)>($r1, d0, 0);

        return $r2;
    }

    protected com.opengamma.analytics.math.surface.Surface getSingleMultiplicativeShiftSurface(double, double, double)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        double d0, d1, d2;
        com.opengamma.analytics.math.surface.Surface $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $r2 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double,double,double,boolean)>($r1, d0, d1, d2, 0);

        return $r2;
    }

    protected com.opengamma.analytics.math.surface.Surface getMultipleMultiplicativeShiftsSurface(double[], double[], double[])
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        double[] r1, r2, r3;
        com.opengamma.analytics.math.surface.Surface $r4, $r5;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        r3 := @parameter2: double[];

        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $r5 = staticinvoke <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory: com.opengamma.analytics.math.surface.Surface getShiftedSurface(com.opengamma.analytics.math.surface.Surface,double[],double[],double[],boolean)>($r4, r1, r2, r3, 0);

        return $r5;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        com.opengamma.analytics.math.surface.Surface $r1;
        int $i1, $i2, i4;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $i2 = virtualinvoke $r1.<com.opengamma.analytics.math.surface.Surface: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        com.opengamma.analytics.math.surface.Surface $r5, $r6;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface) r1;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $r5 = r2.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.surface.Surface _surface>;

        $z0 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        return $z0;
    }

    public volatile java.lang.Double getVolatility(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface r0;
        java.lang.Object r1;
        com.opengamma.util.tuple.DoublesPair $r2;
        java.lang.Double $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.opengamma.util.tuple.DoublesPair) r1;

        $r3 = virtualinvoke r0.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: java.lang.Double getVolatility(com.opengamma.util.tuple.DoublesPair)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.Axis $r0, $r1;

        $r0 = <com.opengamma.analytics.math.Axis: com.opengamma.analytics.math.Axis X>;

        <com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.Axis EXPIRY_AXIS> = $r0;

        $r1 = <com.opengamma.analytics.math.Axis: com.opengamma.analytics.math.Axis Y>;

        <com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: com.opengamma.analytics.math.Axis STRIKE_AXIS> = $r1;

        return;
    }
}
