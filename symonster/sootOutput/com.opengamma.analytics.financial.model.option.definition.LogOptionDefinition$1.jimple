class com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1 extends java.lang.Object implements com.opengamma.analytics.financial.model.option.definition.OptionPayoffFunction
{
    final com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition this$0;

    void <init>(com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition)
    {
        com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1 r0;
        com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition r1;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition;

        r0.<com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double getPayoff(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1 r0;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle r1;
        java.lang.Double r2, $r4;
        double d0, $d1, $d2, $d3, $d4;
        com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition $r3;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1;

        r1 := @parameter0: com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r1);

        d0 = virtualinvoke r1.<com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle: double getSpot()>();

        $r3 = r0.<com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition this$0>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition: java.lang.Double getStrike()>();

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $d2 = d0 / $d1;

        $d3 = staticinvoke <java.lang.Math: double log(double)>($d2);

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d3);

        return $d4;
    }

    public volatile double getPayoff(java.lang.Object, java.lang.Double)
    {
        com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1 r0;
        java.lang.Object r1;
        java.lang.Double r2;
        com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle $r3;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Double;

        $r3 = (com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle) r1;

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.model.option.definition.LogOptionDefinition$1: double getPayoff(com.opengamma.analytics.financial.model.option.definition.StandardOptionDataBundle,java.lang.Double)>($r3, r2);

        return $d0;
    }
}
