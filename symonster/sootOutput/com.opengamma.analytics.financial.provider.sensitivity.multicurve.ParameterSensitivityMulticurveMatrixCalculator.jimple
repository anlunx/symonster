public class com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveMatrixCalculator extends com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveMatrixAbstractCalculator
{

    public void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveMatrixCalculator r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r1;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveMatrixCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        specialinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveMatrixAbstractCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1);

        return;
    }

    public com.opengamma.analytics.math.matrix.DoubleMatrix1D pointToParameterSensitivity(com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface, java.util.Set)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveMatrixCalculator r0;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        java.util.Set r3, $r8, $r9;
        java.util.Map r4, r38;
        java.lang.String r5, $r19, $r21, $r29, $r31;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r6, $r10, $r18, $r28;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity $r7, r35;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r11, $r15, $r16, $r17, $r20, $r22, $r25, $r26, $r27, $r30, $r32;
        java.lang.Integer $r12;
        int $i0;
        double[] $r13, $r14, $r24, $r34, r41;
        java.util.List $r23, $r33;
        java.util.Iterator r36, r39, r42;
        java.util.Map$Entry r37, r40;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.ParameterSensitivityMulticurveMatrixCalculator;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        r3 := @parameter2: java.util.Set;

        $r7 = new com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity;

        specialinvoke $r7.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: void <init>()>();

        r35 = $r7;

        r4 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: java.util.Map getYieldDiscountingSensitivities()>();

        $r8 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r36 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r25 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.util.Map$Entry) $r25;

        $r26 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z4 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r26);

        if $z4 == 0 goto label02;

        $r27 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = (java.lang.String) $r27;

        $r28 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r30 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (java.lang.String) $r30;

        $r32 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (java.util.List) $r32;

        $r34 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double[] parameterSensitivity(java.lang.String,java.util.List)>($r31, $r33);

        specialinvoke $r28.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r34);

        r35 = virtualinvoke r35.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity plus(java.lang.String,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r29, $r28);

     label02:
        goto label01;

     label03:
        r38 = virtualinvoke r1.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: java.util.Map getForwardSensitivities()>();

        $r9 = interfaceinvoke r38.<java.util.Map: java.util.Set entrySet()>();

        r39 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r15 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.util.Map$Entry) $r15;

        $r16 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z3 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r16);

        if $z3 == 0 goto label05;

        $r17 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (java.lang.String) $r17;

        $r18 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        $r20 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (java.lang.String) $r20;

        $r22 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r23 = (java.util.List) $r22;

        $r24 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double[] parameterForwardSensitivity(java.lang.String,java.util.List)>($r21, $r23);

        specialinvoke $r18.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>($r24);

        r35 = virtualinvoke r35.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity plus(java.lang.String,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r19, $r18);

     label05:
        goto label04;

     label06:
        r41 = newarray (double)[0];

        r42 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r11 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r11;

        r6 = virtualinvoke r35.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimpleParameterSensitivity: com.opengamma.analytics.math.matrix.DoubleMatrix1D getSensitivity(java.lang.String)>(r5);

        if r6 == null goto label08;

        $r14 = virtualinvoke r6.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        r41 = staticinvoke <org.apache.commons.lang.ArrayUtils: double[] addAll(double[],double[])>(r41, $r14);

        goto label09;

     label08:
        $r12 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.Integer getNumberOfParameters(java.lang.String)>(r5);

        $i0 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = newarray (double)[$i0];

        r41 = staticinvoke <org.apache.commons.lang.ArrayUtils: double[] addAll(double[],double[])>(r41, $r13);

     label09:
        goto label07;

     label10:
        $r10 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r10.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r41);

        return $r10;
    }
}
