public class com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository extends java.lang.Object
{
    private final double _toleranceAbs;
    private final double _toleranceRel;
    private final int _stepMaximum;
    private final com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder _rootFinder;
    private static final com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA;

    public void <init>(double, double, int)
    {
        com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository r0;
        double d0, d1, $d2, $d3;
        int i0, $i1;
        com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder $r1;
        com.opengamma.analytics.math.linearalgebra.Decomposition $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: double _toleranceAbs> = d0;

        r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: double _toleranceRel> = d1;

        r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: int _stepMaximum> = i0;

        $r1 = new com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder;

        $d2 = r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: double _toleranceAbs>;

        $d3 = r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: double _toleranceRel>;

        $i1 = r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: int _stepMaximum>;

        $r2 = staticinvoke <com.opengamma.analytics.math.linearalgebra.DecompositionFactory: com.opengamma.analytics.math.linearalgebra.Decomposition getDecomposition(java.lang.String)>("SV_COLT");

        specialinvoke $r1.<com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder: void <init>(double,double,int,com.opengamma.analytics.math.linearalgebra.Decomposition)>($d2, $d3, $i1, $r2);

        r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder _rootFinder> = $r1;

        return;
    }

    private com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount makeUnit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[], double[], com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] r1;
        double[] r2, r15;
        com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount r3, r16;
        java.util.LinkedHashMap r4, r5, r6, r7, r8;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r9, r10;
        com.opengamma.analytics.financial.provider.curve.inflation.GeneratorInflationProviderDiscount $r17, $r25;
        com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingData $r18;
        com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountFinderFunction $r19;
        com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountFinderJacobian $r20;
        com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationMatrixCalculator $r21;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r22, $r24, $r26;
        com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder $r23;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[];

        r2 := @parameter1: double[];

        r3 := @parameter2: com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount;

        r4 := @parameter3: java.util.LinkedHashMap;

        r5 := @parameter4: java.util.LinkedHashMap;

        r6 := @parameter5: java.util.LinkedHashMap;

        r7 := @parameter6: java.util.LinkedHashMap;

        r8 := @parameter7: java.util.LinkedHashMap;

        r9 := @parameter8: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r10 := @parameter9: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        $r17 = new com.opengamma.analytics.financial.provider.curve.inflation.GeneratorInflationProviderDiscount;

        specialinvoke $r17.<com.opengamma.analytics.financial.provider.curve.inflation.GeneratorInflationProviderDiscount: void <init>(com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap)>(r3, r4, r6, r7, r8);

        $r18 = new com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingData;

        specialinvoke $r18.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingData: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],com.opengamma.analytics.financial.provider.curve.inflation.GeneratorInflationProviderDiscount)>(r1, $r17);

        $r19 = new com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountFinderFunction;

        specialinvoke $r19.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountFinderFunction: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingData)>(r9, $r18);

        $r20 = new com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountFinderJacobian;

        $r21 = new com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationMatrixCalculator;

        specialinvoke $r21.<com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationMatrixCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r10);

        specialinvoke $r20.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountFinderJacobian: void <init>(com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationMatrixProviderAbstractCalculator,com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingData)>($r21, $r18);

        $r23 = r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder _rootFinder>;

        $r22 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r22.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r2);

        $r24 = virtualinvoke $r23.<com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder: com.opengamma.analytics.math.matrix.DoubleMatrix1D getRoot(com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.function.Function1D,com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r19, $r20, $r22);

        r15 = virtualinvoke $r24.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r25 = virtualinvoke $r18.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingData: com.opengamma.analytics.financial.provider.curve.inflation.GeneratorInflationProviderDiscount getGeneratorMarket()>();

        $r26 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r26.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r15);

        r16 = virtualinvoke $r25.<com.opengamma.analytics.financial.provider.curve.inflation.GeneratorInflationProviderDiscount: com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount evaluate(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r26);

        return r16;
    }

    private void updateBlockBundle(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[], com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount, java.util.List, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] r1;
        com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount r2;
        java.util.List r3;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r4;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r5;
        java.util.Set r8, r16;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42;
        int[] r12, r13, r85, r86;
        double[][] r15, r17, r80, r82, r83, r89, r101, r104;
        java.util.Iterator r18, r76, r78, r87, r90, r96, r98, r102;
        java.lang.String r19, r77, r79, r88, r91, r97, r99, r103;
        java.lang.Integer r20, $r38, $r39, $r51, $r52, $r62, $r64, $r73;
        com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationUnderlyingMatrixCalculator $r21;
        java.util.LinkedHashMap $r22;
        java.util.LinkedHashSet $r23, $r24, $r25, $r26;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z13;
        double[] $r27, $r33, $r34, $r35, $r36, $r60, $r61, $r65, $r66, $r67, $r68, $r71;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r28, $r32, $r42, $r47, $r58, r81, r84, r95;
        com.opengamma.analytics.math.matrix.MatrixAlgebra $r29, $r43, $r44, $r48;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock $r30, r93;
        java.lang.Object $r31, $r37, $r50, $r55, $r56, $r57, $r59, $r63, $r72, $r74;
        com.opengamma.util.tuple.ObjectsPair $r40, $r53;
        com.opengamma.analytics.math.matrix.Matrix $r45, $r46, $r49;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative $r69;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r70;
        java.util.Map $r75;
        com.opengamma.util.tuple.Pair r92;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[];

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount;

        r3 := @parameter2: java.util.List;

        r4 := @parameter3: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r5 := @parameter4: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        $r21 = new com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationUnderlyingMatrixCalculator;

        specialinvoke $r21.<com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationUnderlyingMatrixCalculator: void <init>(com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r5);

        $r22 = new java.util.LinkedHashMap;

        specialinvoke $r22.<java.util.LinkedHashMap: void <init>()>();

        r8 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount: java.util.Set getAllNames()>();

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r23 = new java.util.LinkedHashSet;

        specialinvoke $r23.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r3);

        $r24 = new java.util.LinkedHashSet;

        specialinvoke $r24.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r8);

        virtualinvoke $r24.<java.util.LinkedHashSet: boolean removeAll(java.util.Collection)>($r23);

        $r25 = new java.util.LinkedHashSet;

        specialinvoke $r25.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r24);

        virtualinvoke $r25.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>($r23);

        r76 = virtualinvoke $r24.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label03;

        $r74 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>();

        r77 = (java.lang.String) $r74;

        $r75 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: java.util.Map getData()>();

        $z11 = interfaceinvoke $r75.<java.util.Map: boolean containsKey(java.lang.Object)>(r77);

        if $z11 != 0 goto label02;

        interfaceinvoke r76.<java.util.Iterator: void remove()>();

     label02:
        goto label01;

     label03:
        i24 = virtualinvoke $r25.<java.util.LinkedHashSet: int size()>();

        i25 = i24 - i0;

        i26 = 0;

        r12 = newarray (int)[i0];

        r13 = newarray (int)[i0];

        i27 = 0;

        $r26 = new java.util.LinkedHashSet;

        specialinvoke $r26.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r24);

        r78 = virtualinvoke $r23.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r78.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r72 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        r79 = (java.lang.String) $r72;

        r13[i27] = i26;

        $r73 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount: java.lang.Integer getNumberOfIntrinsicParameters(java.lang.String,java.util.Set)>(r79, $r26);

        $i22 = virtualinvoke $r73.<java.lang.Integer: int intValue()>();

        r12[i27] = $i22;

        virtualinvoke $r26.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r79);

        $i23 = r12[i27];

        i26 = i26 + $i23;

        i27 = i27 + 1;

        goto label04;

     label05:
        i28 = lengthof r1;

        r80 = newarray (double[])[i26];

        i29 = 0;

     label06:
        if i29 >= i28 goto label07;

        $r69 = r1[i29];

        $r70 = virtualinvoke $r21.<com.opengamma.analytics.financial.provider.sensitivity.inflation.ParameterSensitivityInflationUnderlyingMatrixCalculator: com.opengamma.analytics.math.matrix.DoubleMatrix1D calculateSensitivity(com.opengamma.analytics.financial.interestrate.InstrumentDerivative,com.opengamma.analytics.financial.provider.description.inflation.InflationProviderInterface,java.util.Set)>($r69, r2, $r25);

        $r71 = virtualinvoke $r70.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        r80[i29] = $r71;

        i29 = i29 + 1;

        goto label06;

     label07:
        $r27 = r80[0];

        i30 = lengthof $r27;

        i1 = i30 - i26;

        r15 = newmultiarray (double)[i26][i26];

        i31 = 0;

     label08:
        if i31 >= i28 goto label09;

        $r68 = r80[i31];

        $r67 = r15[i31];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r68, i1, $r67, 0, i26);

        i31 = i31 + 1;

        goto label08;

     label09:
        $r29 = <com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r28 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r28.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r15);

        r81 = virtualinvoke $r29.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.DoubleMatrix2D getInverse(com.opengamma.analytics.math.matrix.Matrix)>($r28);

        r82 = newmultiarray (double)[0][0];

        if i1 <= 0 goto label21;

        r83 = newmultiarray (double)[i26][i1];

        i32 = 0;

     label10:
        if i32 >= i28 goto label11;

        $r66 = r80[i32];

        $r65 = r83[i32];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r66, 0, $r65, 0, i1);

        i32 = i32 + 1;

        goto label10;

     label11:
        $r43 = <com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r44 = <com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r42 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r42.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r83);

        $r45 = virtualinvoke $r44.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r81, $r42);

        $r46 = virtualinvoke $r43.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix scale(com.opengamma.analytics.math.matrix.Matrix,double)>($r45, -1.0);

        r84 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r46;

        r85 = newarray (int)[i25];

        r86 = newarray (int)[i25];

        i33 = 0;

        i34 = 0;

        r87 = virtualinvoke $r24.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label12:
        $z5 = interfaceinvoke r87.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label13;

        $r63 = interfaceinvoke r87.<java.util.Iterator: java.lang.Object next()>();

        r88 = (java.lang.String) $r63;

        $r64 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount: java.lang.Integer getNumberOfParameters(java.lang.String)>(r88);

        $i20 = virtualinvoke $r64.<java.lang.Integer: int intValue()>();

        r85[i34] = $i20;

        r86[i34] = i33;

        $i21 = r85[i34];

        i33 = i33 + $i21;

        i34 = i34 + 1;

        goto label12;

     label13:
        r89 = newmultiarray (double)[i1][i1];

        i35 = 0;

        r90 = virtualinvoke $r24.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label14:
        $z6 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label19;

        $r55 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();

        r91 = (java.lang.String) $r55;

        r92 = virtualinvoke r4.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: com.opengamma.util.tuple.Pair getBlock(java.lang.String)>(r91);

        $r56 = virtualinvoke r92.<com.opengamma.util.tuple.Pair: java.lang.Object getFirst()>();

        r93 = (com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock) $r56;

        r16 = virtualinvoke r93.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.util.Set getAllNames()>();

        $r57 = virtualinvoke r92.<com.opengamma.util.tuple.Pair: java.lang.Object getSecond()>();

        $r58 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r57;

        r17 = virtualinvoke $r58.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        i36 = 0;

        r18 = virtualinvoke $r24.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label15:
        $z8 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label18;

        $r59 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r59;

        $z9 = interfaceinvoke r16.<java.util.Set: boolean contains(java.lang.Object)>(r19);

        if $z9 == 0 goto label17;

        r20 = virtualinvoke r93.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.lang.Integer getStart(java.lang.String)>(r19);

        i37 = 0;

     label16:
        $i14 = r85[i35];

        if i37 >= $i14 goto label17;

        $r60 = r17[i37];

        $i15 = virtualinvoke r20.<java.lang.Integer: int intValue()>();

        $i16 = r86[i35];

        $i17 = $i16 + i37;

        $r61 = r89[$i17];

        $i18 = r86[i36];

        $r62 = virtualinvoke r93.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: java.lang.Integer getNbParameters(java.lang.String)>(r19);

        $i19 = virtualinvoke $r62.<java.lang.Integer: int intValue()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r60, $i15, $r61, $i18, $i19);

        i37 = i37 + 1;

        goto label16;

     label17:
        i36 = i36 + 1;

        goto label15;

     label18:
        i35 = i35 + 1;

        goto label14;

     label19:
        $r47 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r47.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r89);

        $r48 = <com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA>;

        $r49 = virtualinvoke $r48.<com.opengamma.analytics.math.matrix.MatrixAlgebra: com.opengamma.analytics.math.matrix.Matrix multiply(com.opengamma.analytics.math.matrix.Matrix,com.opengamma.analytics.math.matrix.Matrix)>(r84, $r47);

        r95 = (com.opengamma.analytics.math.matrix.DoubleMatrix2D) $r49;

        r82 = virtualinvoke r95.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        i38 = 0;

        r96 = virtualinvoke $r24.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label20:
        $z7 = interfaceinvoke r96.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label21;

        $r50 = interfaceinvoke r96.<java.util.Iterator: java.lang.Object next()>();

        r97 = (java.lang.String) $r50;

        $i12 = r86[i38];

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $i13 = r85[i38];

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r53 = staticinvoke <com.opengamma.util.tuple.ObjectsPair: com.opengamma.util.tuple.ObjectsPair of(java.lang.Object,java.lang.Object)>($r51, $r52);

        virtualinvoke $r22.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r97, $r53);

        i38 = i38 + 1;

        goto label20;

     label21:
        i39 = 0;

        r98 = virtualinvoke $r23.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label22:
        $z13 = interfaceinvoke r98.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label23;

        $r37 = interfaceinvoke r98.<java.util.Iterator: java.lang.Object next()>();

        r99 = (java.lang.String) $r37;

        $i9 = r13[i39];

        $i10 = i1 + $i9;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $i11 = r12[i39];

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r40 = staticinvoke <com.opengamma.util.tuple.ObjectsPair: com.opengamma.util.tuple.ObjectsPair of(java.lang.Object,java.lang.Object)>($r38, $r39);

        virtualinvoke $r22.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r99, $r40);

        i39 = i39 + 1;

        goto label22;

     label23:
        $r30 = new com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock;

        specialinvoke $r30.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock: void <init>(java.util.LinkedHashMap)>($r22);

        r101 = virtualinvoke r81.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: double[][] getData()>();

        i40 = 0;

        r102 = virtualinvoke $r23.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label24:
        $z4 = interfaceinvoke r102.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label29;

        $r31 = interfaceinvoke r102.<java.util.Iterator: java.lang.Object next()>();

        r103 = (java.lang.String) $r31;

        $i2 = r12[i40];

        r104 = newmultiarray (double)[$i2][i30];

        i41 = 0;

     label25:
        $i3 = r12[i40];

        if i41 >= $i3 goto label26;

        $i7 = r13[i40];

        $i8 = $i7 + i41;

        $r36 = r101[$i8];

        $r35 = r104[i41];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r36, 0, $r35, i1, i26);

        i41 = i41 + 1;

        goto label25;

     label26:
        if i1 <= 0 goto label28;

        i42 = 0;

     label27:
        $i4 = r12[i40];

        if i42 >= $i4 goto label28;

        $i5 = r13[i40];

        $i6 = $i5 + i42;

        $r34 = r82[$i6];

        $r33 = r104[i42];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r34, 0, $r33, 0, i1);

        i42 = i42 + 1;

        goto label27;

     label28:
        $r32 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r32.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r104);

        virtualinvoke r4.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: void add(java.lang.String,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlock,com.opengamma.analytics.math.matrix.DoubleMatrix2D)>(r103, $r30, $r32);

        i40 = i40 + 1;

        goto label24;

     label29:
        return;
    }

    public com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[], com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[] r1;
        com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount r2;
        java.util.LinkedHashMap r3, r4, r5, r6;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r7, r8;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle $r9;
        com.opengamma.util.tuple.Pair $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[];

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount;

        r3 := @parameter2: java.util.LinkedHashMap;

        r4 := @parameter3: java.util.LinkedHashMap;

        r5 := @parameter4: java.util.LinkedHashMap;

        r6 := @parameter5: java.util.LinkedHashMap;

        r7 := @parameter6: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r8 := @parameter7: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        $r9 = new com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        specialinvoke $r9.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: void <init>()>();

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[],com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1, r2, $r9, r3, r4, r5, r6, r7, r8);

        return $r10;
    }

    public com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[], com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle, java.util.LinkedHashMap, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[] r1;
        com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount r2;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r3;
        java.util.LinkedHashMap r4, $r7, $r8, $r9;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r5, r6;
        com.opengamma.util.tuple.Pair $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[];

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount;

        r3 := @parameter2: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r4 := @parameter3: java.util.LinkedHashMap;

        r5 := @parameter4: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r6 := @parameter5: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        $r9 = new java.util.LinkedHashMap;

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>();

        $r10 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[],com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r1, r2, r3, $r7, $r8, $r9, r4, r5, r6);

        return $r10;
    }

    public com.opengamma.util.tuple.Pair makeCurvesFromDerivatives(com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[], com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount, com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, java.util.LinkedHashMap, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor, com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)
    {
        com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository r0;
        com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[] r1;
        com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount r2, r38;
        com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle r3, $r26;
        java.util.LinkedHashMap r4, r5, r6, r7, $r28, $r30;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor r8, r9;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, i11, i12, i13;
        com.opengamma.analytics.financial.provider.curve.MultiCurveBundle r13;
        int[] r14, r16;
        com.opengamma.analytics.financial.provider.curve.SingleCurveBundle r17, r39;
        com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] r18, $r36, r40;
        com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorCurve r19, $r33;
        java.lang.String r20;
        java.util.ArrayList $r27, $r31;
        com.opengamma.util.tuple.Pair $r29;
        double[] $r32, r41;
        java.util.List $r37;

        r0 := @this: com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.curve.MultiCurveBundle[];

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount;

        r3 := @parameter2: com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        r4 := @parameter3: java.util.LinkedHashMap;

        r5 := @parameter4: java.util.LinkedHashMap;

        r6 := @parameter5: java.util.LinkedHashMap;

        r7 := @parameter6: java.util.LinkedHashMap;

        r8 := @parameter7: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        r9 := @parameter8: com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "curve bundles");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "known data");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r7, "inflation map");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r8, "calculator");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r9, "sensitivity calculator");

        i0 = lengthof r1;

        r38 = virtualinvoke r2.<com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount: com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount copy()>();

        $r26 = new com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle;

        specialinvoke $r26.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: void <init>()>();

        virtualinvoke $r26.<com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle: void addAll(com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle)>(r3);

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        $r28 = new java.util.LinkedHashMap;

        specialinvoke $r28.<java.util.LinkedHashMap: void <init>()>();

        i10 = 0;

     label1:
        if i10 >= i0 goto label6;

        r13 = r1[i10];

        i1 = virtualinvoke r13.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: int size()>();

        r14 = newarray (int)[i1];

        $r30 = new java.util.LinkedHashMap;

        specialinvoke $r30.<java.util.LinkedHashMap: void <init>()>();

        $i2 = virtualinvoke r13.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: int getNumberOfInstruments()>();

        r16 = newarray (int)[$i2];

        i11 = 0;

        i12 = 0;

     label2:
        if i12 >= i1 goto label3;

        r39 = virtualinvoke r13.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: com.opengamma.analytics.financial.provider.curve.SingleCurveBundle getCurveBundle(int)>(i12);

        r14[i12] = i11;

        $i7 = virtualinvoke r39.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: int size()>();

        r16[i12] = $i7;

        $i8 = r16[i12];

        i11 = i11 + $i8;

        $r36 = virtualinvoke r39.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] getDerivatives()>();

        $r37 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r36);

        interfaceinvoke $r27.<java.util.List: boolean addAll(java.util.Collection)>($r37);

        i12 = i12 + 1;

        goto label2;

     label3:
        r40 = newarray (com.opengamma.analytics.financial.interestrate.InstrumentDerivative)[i11];

        r41 = newarray (double)[i11];

        i13 = 0;

     label4:
        if i13 >= i1 goto label5;

        r17 = virtualinvoke r13.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: com.opengamma.analytics.financial.provider.curve.SingleCurveBundle getCurveBundle(int)>(i13);

        r18 = virtualinvoke r17.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: com.opengamma.analytics.financial.interestrate.InstrumentDerivative[] getDerivatives()>();

        $i4 = r14[i13];

        $i3 = r16[i13];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r18, 0, r40, $i4, $i3);

        $r32 = virtualinvoke r17.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: double[] getStartingPoint()>();

        $i6 = r14[i13];

        $i5 = r16[i13];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r32, 0, r41, $i6, $i5);

        $r33 = virtualinvoke r17.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorCurve getCurveGenerator()>();

        r19 = virtualinvoke $r33.<com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorCurve: com.opengamma.analytics.financial.curve.interestrate.generator.GeneratorCurve finalGenerator(java.lang.Object)>(r18);

        r20 = virtualinvoke r17.<com.opengamma.analytics.financial.provider.curve.SingleCurveBundle: java.lang.String getCurveName()>();

        virtualinvoke $r30.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, r19);

        virtualinvoke $r28.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, r19);

        i13 = i13 + 1;

        goto label4;

     label5:
        r38 = specialinvoke r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount makeUnit(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],double[],com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,java.util.LinkedHashMap,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r40, r41, r38, r4, r6, r5, r7, $r30, r8, r9);

        $r31 = virtualinvoke r13.<com.opengamma.analytics.financial.provider.curve.MultiCurveBundle: java.util.ArrayList getNames()>();

        specialinvoke r0.<com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: void updateBlockBundle(com.opengamma.analytics.financial.interestrate.InstrumentDerivative[],com.opengamma.analytics.financial.provider.description.inflation.InflationProviderDiscount,java.util.List,com.opengamma.analytics.financial.provider.curve.CurveBuildingBlockBundle,com.opengamma.analytics.financial.interestrate.InstrumentDerivativeVisitor)>(r40, r38, $r31, $r26, r9);

        i10 = i10 + 1;

        goto label1;

     label6:
        $r29 = staticinvoke <com.opengamma.util.tuple.Pairs: com.opengamma.util.tuple.Pair of(java.lang.Object,java.lang.Object)>(r38, $r26);

        return $r29;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra $r0;

        $r0 = new com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra;

        specialinvoke $r0.<com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra: void <init>()>();

        <com.opengamma.analytics.financial.provider.curve.inflation.InflationDiscountBuildingRepository: com.opengamma.analytics.math.matrix.MatrixAlgebra MATRIX_ALGEBRA> = $r0;

        return;
    }
}
