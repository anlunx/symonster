public class org.apache.commons.math3.linear.SingularValueDecomposition extends java.lang.Object
{
    private static final double EPS;
    private static final double TINY;
    private final double[] singularValues;
    private final int m;
    private final int n;
    private final boolean transposed;
    private final org.apache.commons.math3.linear.RealMatrix cachedU;
    private org.apache.commons.math3.linear.RealMatrix cachedUt;
    private org.apache.commons.math3.linear.RealMatrix cachedS;
    private final org.apache.commons.math3.linear.RealMatrix cachedV;
    private org.apache.commons.math3.linear.RealMatrix cachedVt;
    private final double tol;

    public void <init>(org.apache.commons.math3.linear.RealMatrix)
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        org.apache.commons.math3.linear.RealMatrix r1, $r8, $r9, $r10, $r11, $r130;
        double[][] r2, r3, r131;
        double[] r4, r5, $r6, $r7, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r132, $r133;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i61, $i62, $i63, $i64, $i65, $i66, $i68, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i83, $i84, $i85, $i86, $i89, $i90, $i91, $i92, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i105, $i106, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i116, $i117, $i119, $i120, $i121, $i124, $i125, i126, $i127, i128, i129, $i130, i131, $i132, i133, i134, i135, i136, i137, $i138, i139, i140, i141, i142, i143, i144, $i145, i146, i147, $i148, i149, i150, i151, i152, i153, i154, i155, i156, i157, i158, i159, i160, i161, $i162, i163, i164, i166, i168, $i169, $i170, i171, i172, $i173, i174, i175, i176, $i177, i178, $i179, i180, i181, i182, i183;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, $d93, $d94, $d95, $d96, $d97, $d98, $d99, $d100, $d101, $d102, $d103, $d104, $d105, $d106, $d107, $d108, $d109, $d110, $d111, $d112, $d113, $d114, $d115, $d116, $d117, $d118, $d119, $d120, $d121, $d122, $d123, $d124, $d125, $d126, $d127, $d128, $d129, $d130, $d131, $d132, $d133, $d134, $d135, $d136, $d137, $d138, $d139, $d140, $d141, $d142, $d143, $d144, $d145, $d146, $d147, $d148, $d149, $d150, $d151, $d152, $d153, $d154, $d155, $d156, $d157, $d158, $d159, $d160, $d161, $d162, $d163, $d164, $d165, $d166, $d167, $d168, $d169, $d170, $d171, $d172, $d173, $d174, $d175, $d176, $d177, $d178, $d179, $d180, $d181, $d182, $d183, $d184, $d185, $d186, $d187, $d188, $d189, $d190, $d191, $d192, $d193, $d194, $d195, $d196, $d197, $d198, $d199, $d200, $d201, $d202, $d203, $d204, $d205, $d206, $d207, $d208, $d209, $d210, $d211, $d212, $d213, $d214, $d215, $d216, $d217, d218, d219, $d220, d221, d222, d223, d224, d225, d226, $d228, $d229, d230, $d231, $d232, $d233, $d234, d235, d236, d237, d238, d239, d240, d241, d242, d243, d244, d245, d246, d247, d248, $d249, $d250, $d251, d252, d253, d254, d255, d256, d257, d258, d259, d260, d261, d262, d263, $d264, d265, d266, d267;
        boolean $z0;
        byte $b38, $b39, $b60, $b67, $b69, $b82, $b87, $b88, $b93, $b104, $b107, $b115, $b118, $b122, $b123, b165, $b167;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        r1 := @parameter0: org.apache.commons.math3.linear.RealMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        $i3 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        if $i2 >= $i3 goto label001;

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: boolean transposed> = 1;

        $r130 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: org.apache.commons.math3.linear.RealMatrix transpose()>();

        r131 = interfaceinvoke $r130.<org.apache.commons.math3.linear.RealMatrix: double[][] getData()>();

        $i124 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m> = $i124;

        $i125 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n> = $i125;

        goto label002;

     label001:
        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: boolean transposed> = 0;

        r131 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: double[][] getData()>();

        $i4 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getRowDimension()>();

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m> = $i4;

        $i5 = interfaceinvoke r1.<org.apache.commons.math3.linear.RealMatrix: int getColumnDimension()>();

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n> = $i5;

     label002:
        $i6 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        $r6 = newarray (double)[$i6];

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues> = $r6;

        $i8 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        $i7 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        r2 = newmultiarray (double)[$i8][$i7];

        $i10 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        $i9 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        r3 = newmultiarray (double)[$i10][$i9];

        $i11 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        r4 = newarray (double)[$i11];

        $i12 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        r5 = newarray (double)[$i12];

        $i13 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        $i15 = $i13 - 1;

        $i14 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        i0 = staticinvoke <org.apache.commons.math3.util.FastMath: int min(int,int)>($i15, $i14);

        $i16 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        $i17 = $i16 - 2;

        i1 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>(0, $i17);

        i126 = 0;

     label003:
        $i127 = staticinvoke <org.apache.commons.math3.util.FastMath: int max(int,int)>(i0, i1);

        if i126 >= $i127 goto label037;

        if i126 >= i0 goto label010;

        $r117 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r117[i126] = 0.0;

        i128 = i126;

     label004:
        $i121 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i128 >= $i121 goto label005;

        $r129 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r127 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d216 = $r127[i126];

        $r128 = r131[i128];

        $d215 = $r128[i126];

        $d217 = staticinvoke <org.apache.commons.math3.util.FastMath: double hypot(double,double)>($d216, $d215);

        $r129[i126] = $d217;

        i128 = i128 + 1;

        goto label004;

     label005:
        $r118 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d204 = $r118[i126];

        $b122 = $d204 cmpl 0.0;

        if $b122 == 0 goto label009;

        $r121 = r131[i126];

        $d207 = $r121[i126];

        $b123 = $d207 cmpg 0.0;

        if $b123 >= 0 goto label006;

        $r126 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r125 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d213 = $r125[i126];

        $d214 = neg $d213;

        $r126[i126] = $d214;

     label006:
        i129 = i126;

     label007:
        $i130 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i129 >= $i130 goto label008;

        $r123 = r131[i129];

        $d211 = $r123[i126];

        $r124 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d210 = $r124[i126];

        $d212 = $d211 / $d210;

        $r123[i126] = $d212;

        i129 = i129 + 1;

        goto label007;

     label008:
        $r122 = r131[i126];

        $d208 = $r122[i126];

        $d209 = $d208 + 1.0;

        $r122[i126] = $d209;

     label009:
        $r120 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r119 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d205 = $r119[i126];

        $d206 = neg $d205;

        $r120[i126] = $d206;

     label010:
        i131 = i126 + 1;

     label011:
        $i132 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i131 >= $i132 goto label016;

        if i126 >= i0 goto label015;

        $r111 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d194 = $r111[i126];

        $b118 = $d194 cmpl 0.0;

        if $b118 == 0 goto label015;

        d218 = 0.0;

        i133 = i126;

     label012:
        $i119 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i133 >= $i119 goto label013;

        $r115 = r131[i133];

        $d202 = $r115[i126];

        $r116 = r131[i133];

        $d201 = $r116[i131];

        $d203 = $d202 * $d201;

        d218 = d218 + $d203;

        i133 = i133 + 1;

        goto label012;

     label013:
        $d196 = neg d218;

        $r112 = r131[i126];

        $d195 = $r112[i126];

        d219 = $d196 / $d195;

        i134 = i126;

     label014:
        $i120 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i134 >= $i120 goto label015;

        $r113 = r131[i134];

        $d199 = $r113[i131];

        $r114 = r131[i134];

        $d197 = $r114[i126];

        $d198 = d219 * $d197;

        $d200 = $d199 + $d198;

        $r113[i131] = $d200;

        i134 = i134 + 1;

        goto label014;

     label015:
        $r132 = r131[i126];

        $d220 = $r132[i131];

        r4[i131] = $d220;

        i131 = i131 + 1;

        goto label011;

     label016:
        if i126 >= i0 goto label018;

        i135 = i126;

     label017:
        $i117 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i135 >= $i117 goto label018;

        $r110 = r2[i135];

        $r109 = r131[i135];

        $d193 = $r109[i126];

        $r110[i126] = $d193;

        i135 = i135 + 1;

        goto label017;

     label018:
        if i126 >= i1 goto label036;

        r4[i126] = 0.0;

        i136 = i126 + 1;

     label019:
        $i103 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i136 >= $i103 goto label020;

        $d191 = r4[i126];

        $d190 = r4[i136];

        $d192 = staticinvoke <org.apache.commons.math3.util.FastMath: double hypot(double,double)>($d191, $d190);

        r4[i126] = $d192;

        i136 = i136 + 1;

        goto label019;

     label020:
        $d165 = r4[i126];

        $b104 = $d165 cmpl 0.0;

        if $b104 == 0 goto label024;

        $i114 = i126 + 1;

        $d182 = r4[$i114];

        $b115 = $d182 cmpg 0.0;

        if $b115 >= 0 goto label021;

        $d188 = r4[i126];

        $d189 = neg $d188;

        r4[i126] = $d189;

     label021:
        i137 = i126 + 1;

     label022:
        $i138 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i137 >= $i138 goto label023;

        $d186 = r4[i137];

        $d185 = r4[i126];

        $d187 = $d186 / $d185;

        r4[i137] = $d187;

        i137 = i137 + 1;

        goto label022;

     label023:
        $i116 = i126 + 1;

        $d183 = r4[$i116];

        $d184 = $d183 + 1.0;

        r4[$i116] = $d184;

     label024:
        $d166 = r4[i126];

        $d167 = neg $d166;

        r4[i126] = $d167;

        $i106 = i126 + 1;

        $i105 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if $i106 >= $i105 goto label034;

        $d169 = r4[i126];

        $b107 = $d169 cmpl 0.0;

        if $b107 == 0 goto label034;

        i139 = i126 + 1;

     label025:
        $i108 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i139 >= $i108 goto label026;

        r5[i139] = 0.0;

        i139 = i139 + 1;

        goto label025;

     label026:
        i140 = i126 + 1;

     label027:
        $i109 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i140 >= $i109 goto label030;

        i141 = i126 + 1;

     label028:
        $i113 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i141 >= $i113 goto label029;

        $d180 = r5[i141];

        $d178 = r4[i140];

        $r108 = r131[i141];

        $d177 = $r108[i140];

        $d179 = $d178 * $d177;

        $d181 = $d180 + $d179;

        r5[i141] = $d181;

        i141 = i141 + 1;

        goto label028;

     label029:
        i140 = i140 + 1;

        goto label027;

     label030:
        i142 = i126 + 1;

     label031:
        $i110 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i142 >= $i110 goto label034;

        $d170 = r4[i142];

        $d172 = neg $d170;

        $i111 = i126 + 1;

        $d171 = r4[$i111];

        d221 = $d172 / $d171;

        i143 = i126 + 1;

     label032:
        $i112 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i143 >= $i112 goto label033;

        $r107 = r131[i143];

        $d175 = $r107[i142];

        $d173 = r5[i143];

        $d174 = d221 * $d173;

        $d176 = $d175 + $d174;

        $r107[i142] = $d176;

        i143 = i143 + 1;

        goto label032;

     label033:
        i142 = i142 + 1;

        goto label031;

     label034:
        i144 = i126 + 1;

     label035:
        $i145 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i144 >= $i145 goto label036;

        $r106 = r3[i144];

        $d168 = r4[i144];

        $r106[i126] = $d168;

        i144 = i144 + 1;

        goto label035;

     label036:
        i126 = i126 + 1;

        goto label003;

     label037:
        i146 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        $i18 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i0 >= $i18 goto label038;

        $r105 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r104 = r131[i0];

        $d164 = $r104[i0];

        $r105[i0] = $d164;

     label038:
        $i19 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if $i19 >= i146 goto label039;

        $r103 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i102 = i146 - 1;

        $r103[$i102] = 0.0;

     label039:
        $i20 = i1 + 1;

        if $i20 >= i146 goto label040;

        $r102 = r131[i1];

        $i101 = i146 - 1;

        $d163 = $r102[$i101];

        r4[i1] = $d163;

     label040:
        $i21 = i146 - 1;

        r4[$i21] = 0.0;

        i147 = i0;

     label041:
        $i148 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i147 >= $i148 goto label044;

        i149 = 0;

     label042:
        $i100 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i149 >= $i100 goto label043;

        $r101 = r2[i149];

        $r101[i147] = 0.0;

        i149 = i149 + 1;

        goto label042;

     label043:
        $r100 = r2[i147];

        $r100[i147] = 1.0;

        i147 = i147 + 1;

        goto label041;

     label044:
        i150 = i0 - 1;

     label045:
        if i150 < 0 goto label060;

        $r87 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d149 = $r87[i150];

        $b93 = $d149 cmpl 0.0;

        if $b93 == 0 goto label056;

        i151 = i150 + 1;

     label046:
        $i95 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i151 >= $i95 goto label051;

        d222 = 0.0;

        i152 = i150;

     label047:
        $i98 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i152 >= $i98 goto label048;

        $r98 = r2[i152];

        $d161 = $r98[i150];

        $r99 = r2[i152];

        $d160 = $r99[i151];

        $d162 = $d161 * $d160;

        d222 = d222 + $d162;

        i152 = i152 + 1;

        goto label047;

     label048:
        $d155 = neg d222;

        $r95 = r2[i150];

        $d154 = $r95[i150];

        d223 = $d155 / $d154;

        i153 = i150;

     label049:
        $i99 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i153 >= $i99 goto label050;

        $r96 = r2[i153];

        $d158 = $r96[i151];

        $r97 = r2[i153];

        $d156 = $r97[i150];

        $d157 = d223 * $d156;

        $d159 = $d158 + $d157;

        $r96[i151] = $d159;

        i153 = i153 + 1;

        goto label049;

     label050:
        i151 = i151 + 1;

        goto label046;

     label051:
        i154 = i150;

     label052:
        $i96 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i154 >= $i96 goto label053;

        $r94 = r2[i154];

        $r93 = r2[i154];

        $d152 = $r93[i150];

        $d153 = neg $d152;

        $r94[i150] = $d153;

        i154 = i154 + 1;

        goto label052;

     label053:
        $r91 = r2[i150];

        $r90 = r2[i150];

        $d150 = $r90[i150];

        $d151 = 1.0 + $d150;

        $r91[i150] = $d151;

        i155 = 0;

     label054:
        $i97 = i150 - 1;

        if i155 >= $i97 goto label055;

        $r92 = r2[i155];

        $r92[i150] = 0.0;

        i155 = i155 + 1;

        goto label054;

     label055:
        goto label059;

     label056:
        i156 = 0;

     label057:
        $i94 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i156 >= $i94 goto label058;

        $r89 = r2[i156];

        $r89[i150] = 0.0;

        i156 = i156 + 1;

        goto label057;

     label058:
        $r88 = r2[i150];

        $r88[i150] = 1.0;

     label059:
        i150 = i150 + -1;

        goto label045;

     label060:
        $i22 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        i157 = $i22 - 1;

     label061:
        if i157 < 0 goto label070;

        if i157 >= i1 goto label067;

        $d139 = r4[i157];

        $b88 = $d139 cmpl 0.0;

        if $b88 == 0 goto label067;

        i158 = i157 + 1;

     label062:
        $i89 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i158 >= $i89 goto label067;

        d224 = 0.0;

        i159 = i157 + 1;

     label063:
        $i90 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i159 >= $i90 goto label064;

        $r85 = r3[i159];

        $d147 = $r85[i157];

        $r86 = r3[i159];

        $d146 = $r86[i158];

        $d148 = $d147 * $d146;

        d224 = d224 + $d148;

        i159 = i159 + 1;

        goto label063;

     label064:
        $d141 = neg d224;

        $i91 = i157 + 1;

        $r82 = r3[$i91];

        $d140 = $r82[i157];

        d225 = $d141 / $d140;

        i160 = i157 + 1;

     label065:
        $i92 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i160 >= $i92 goto label066;

        $r83 = r3[i160];

        $d144 = $r83[i158];

        $r84 = r3[i160];

        $d142 = $r84[i157];

        $d143 = d225 * $d142;

        $d145 = $d144 + $d143;

        $r83[i158] = $d145;

        i160 = i160 + 1;

        goto label065;

     label066:
        i158 = i158 + 1;

        goto label062;

     label067:
        i161 = 0;

     label068:
        $i162 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i161 >= $i162 goto label069;

        $r81 = r3[i161];

        $r81[i157] = 0.0;

        i161 = i161 + 1;

        goto label068;

     label069:
        $r80 = r3[i157];

        $r80[i157] = 1.0;

        i157 = i157 + -1;

        goto label061;

     label070:
        i163 = i146 - 1;

     label071:
        if i146 <= 0 goto label121;

        i164 = i146 - 2;

     label072:
        if i164 < 0 goto label074;

        $r78 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d131 = $r78[i164];

        $d132 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d131);

        $r79 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i86 = i164 + 1;

        $d133 = $r79[$i86];

        $d134 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d133);

        $d135 = $d132 + $d134;

        $d136 = 2.220446049250313E-16 * $d135;

        d226 = 1.6033346880071782E-291 + $d136;

        $d137 = r4[i164];

        $d138 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d137);

        $b87 = $d138 cmpl d226;

        if $b87 > 0 goto label073;

        r4[i164] = 0.0;

        goto label074;

     label073:
        i164 = i164 + -1;

        goto label072;

     label074:
        $i24 = i146 - 2;

        if i164 != $i24 goto label075;

        b165 = 4;

        goto label086;

     label075:
        i166 = i146 - 1;

     label076:
        if i166 < i164 goto label083;

        if i166 != i164 goto label077;

        goto label083;

     label077:
        if i166 == i146 goto label078;

        $d129 = r4[i166];

        $d130 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d129);

        $d228 = $d130;

        goto label079;

     label078:
        $d228 = 0.0;

     label079:
        $i84 = i164 + 1;

        if i166 == $i84 goto label080;

        $i85 = i166 - 1;

        $d128 = r4[$i85];

        $d229 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d128);

        goto label081;

     label080:
        $d229 = 0.0;

     label081:
        d230 = $d228 + $d229;

        $r133 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d231 = $r133[i166];

        $d232 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d231);

        $d233 = 2.220446049250313E-16 * d230;

        $d234 = 1.6033346880071782E-291 + $d233;

        $b167 = $d232 cmpg $d234;

        if $b167 > 0 goto label082;

        $r77 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r77[i166] = 0.0;

        goto label083;

     label082:
        i166 = i166 + -1;

        goto label076;

     label083:
        if i166 != i164 goto label084;

        b165 = 3;

        goto label086;

     label084:
        $i25 = i146 - 1;

        if i166 != $i25 goto label085;

        b165 = 1;

        goto label086;

     label085:
        b165 = 2;

        i164 = i166;

     label086:
        i168 = i164 + 1;

        tableswitch(b165)
        {
            case 1: goto label087;
            case 2: goto label093;
            case 3: goto label098;
            default: goto label109;
        };

     label087:
        $i169 = i146 - 2;

        d235 = r4[$i169];

        $i170 = i146 - 2;

        r4[$i170] = 0.0;

        i171 = i146 - 2;

     label088:
        if i171 < i168 goto label092;

        $r12 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d14 = $r12[i171];

        d236 = staticinvoke <org.apache.commons.math3.util.FastMath: double hypot(double,double)>($d14, d235);

        $r13 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d15 = $r13[i171];

        d237 = $d15 / d236;

        d238 = d235 / d236;

        $r14 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r14[i171] = d236;

        if i171 == i168 goto label089;

        $d27 = neg d238;

        $i29 = i171 - 1;

        $d26 = r4[$i29];

        d235 = $d27 * $d26;

        $i31 = i171 - 1;

        $i30 = i171 - 1;

        $d28 = r4[$i30];

        $d29 = d237 * $d28;

        r4[$i31] = $d29;

     label089:
        i172 = 0;

     label090:
        $i173 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i172 >= $i173 goto label091;

        $r15 = r3[i172];

        $d16 = $r15[i171];

        $d19 = d237 * $d16;

        $r16 = r3[i172];

        $i26 = i146 - 1;

        $d17 = $r16[$i26];

        $d18 = d238 * $d17;

        d239 = $d19 + $d18;

        $r19 = r3[i172];

        $i28 = i146 - 1;

        $d21 = neg d238;

        $r17 = r3[i172];

        $d20 = $r17[i171];

        $d24 = $d21 * $d20;

        $r18 = r3[i172];

        $i27 = i146 - 1;

        $d22 = $r18[$i27];

        $d23 = d237 * $d22;

        $d25 = $d24 + $d23;

        $r19[$i28] = $d25;

        $r20 = r3[i172];

        $r20[i171] = d239;

        i172 = i172 + 1;

        goto label090;

     label091:
        i171 = i171 + -1;

        goto label088;

     label092:
        goto label120;

     label093:
        $i61 = i168 - 1;

        d240 = r4[$i61];

        $i62 = i168 - 1;

        r4[$i62] = 0.0;

        i174 = i168;

     label094:
        if i174 >= i146 goto label097;

        $r48 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d102 = $r48[i174];

        d241 = staticinvoke <org.apache.commons.math3.util.FastMath: double hypot(double,double)>($d102, d240);

        $r49 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d103 = $r49[i174];

        d242 = $d103 / d241;

        d243 = d240 / d241;

        $r50 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r50[i174] = d241;

        $d105 = neg d243;

        $d104 = r4[i174];

        d240 = $d105 * $d104;

        $d106 = r4[i174];

        $d107 = d242 * $d106;

        r4[i174] = $d107;

        i175 = 0;

     label095:
        $i63 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i175 >= $i63 goto label096;

        $r51 = r2[i175];

        $d108 = $r51[i174];

        $d111 = d242 * $d108;

        $r52 = r2[i175];

        $i64 = i168 - 1;

        $d109 = $r52[$i64];

        $d110 = d243 * $d109;

        d244 = $d111 + $d110;

        $r55 = r2[i175];

        $i66 = i168 - 1;

        $d113 = neg d243;

        $r53 = r2[i175];

        $d112 = $r53[i174];

        $d116 = $d113 * $d112;

        $r54 = r2[i175];

        $i65 = i168 - 1;

        $d114 = $r54[$i65];

        $d115 = d242 * $d114;

        $d117 = $d116 + $d115;

        $r55[$i66] = $d117;

        $r56 = r2[i175];

        $r56[i174] = d244;

        i175 = i175 + 1;

        goto label095;

     label096:
        i174 = i174 + 1;

        goto label094;

     label097:
        goto label120;

     label098:
        $r21 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i32 = i146 - 1;

        $d30 = $r21[$i32];

        $d31 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d30);

        $r22 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i33 = i146 - 2;

        $d32 = $r22[$i33];

        $d33 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d32);

        d245 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d31, $d33);

        $i34 = i146 - 2;

        $d34 = r4[$i34];

        $d35 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d34);

        $d36 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d245, $d35);

        $r23 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d37 = $r23[i168];

        $d38 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d37);

        $d39 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d36, $d38);

        $d40 = r4[i168];

        $d41 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d40);

        d246 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d39, $d41);

        $r24 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i35 = i146 - 1;

        $d42 = $r24[$i35];

        d0 = $d42 / d246;

        $r25 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i36 = i146 - 2;

        $d43 = $r25[$i36];

        d1 = $d43 / d246;

        $i37 = i146 - 2;

        $d44 = r4[$i37];

        d2 = $d44 / d246;

        $r26 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d45 = $r26[i168];

        d3 = $d45 / d246;

        $d46 = r4[i168];

        d4 = $d46 / d246;

        $d48 = d1 + d0;

        $d47 = d1 - d0;

        $d50 = $d48 * $d47;

        $d49 = d2 * d2;

        $d51 = $d50 + $d49;

        d5 = $d51 / 2.0;

        $d53 = d0 * d2;

        $d52 = d0 * d2;

        d6 = $d53 * $d52;

        d247 = 0.0;

        $b38 = d5 cmpl 0.0;

        if $b38 != 0 goto label099;

        $b60 = d6 cmpl 0.0;

        if $b60 == 0 goto label101;

     label099:
        $d54 = d5 * d5;

        $d55 = $d54 + d6;

        d248 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d55);

        $b39 = d5 cmpg 0.0;

        if $b39 >= 0 goto label100;

        d248 = neg d248;

     label100:
        $d56 = d5 + d248;

        d247 = d6 / $d56;

     label101:
        $d249 = d3 + d0;

        $d250 = d3 - d0;

        $d251 = $d249 * $d250;

        d252 = $d251 + d247;

        d253 = d3 * d4;

        i176 = i168;

     label102:
        $i177 = i146 - 1;

        if i176 >= $i177 goto label108;

        d254 = staticinvoke <org.apache.commons.math3.util.FastMath: double hypot(double,double)>(d252, d253);

        d255 = d252 / d254;

        d256 = d253 / d254;

        if i176 == i168 goto label103;

        $i59 = i176 - 1;

        r4[$i59] = d254;

     label103:
        $r27 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d57 = $r27[i176];

        $d60 = d255 * $d57;

        $d58 = r4[i176];

        $d59 = d256 * $d58;

        d257 = $d60 + $d59;

        $d61 = r4[i176];

        $d64 = d255 * $d61;

        $r28 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d62 = $r28[i176];

        $d63 = d256 * $d62;

        $d65 = $d64 - $d63;

        r4[i176] = $d65;

        $r29 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i41 = i176 + 1;

        $d66 = $r29[$i41];

        d258 = d256 * $d66;

        $r31 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i43 = i176 + 1;

        $r30 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i42 = i176 + 1;

        $d67 = $r30[$i42];

        $d68 = d255 * $d67;

        $r31[$i43] = $d68;

        i178 = 0;

     label104:
        $i179 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i178 >= $i179 goto label105;

        $r42 = r3[i178];

        $d92 = $r42[i176];

        $d95 = d255 * $d92;

        $r43 = r3[i178];

        $i56 = i176 + 1;

        $d93 = $r43[$i56];

        $d94 = d256 * $d93;

        d259 = $d95 + $d94;

        $r46 = r3[i178];

        $i58 = i176 + 1;

        $d97 = neg d256;

        $r44 = r3[i178];

        $d96 = $r44[i176];

        $d100 = $d97 * $d96;

        $r45 = r3[i178];

        $i57 = i176 + 1;

        $d98 = $r45[$i57];

        $d99 = d255 * $d98;

        $d101 = $d100 + $d99;

        $r46[$i58] = $d101;

        $r47 = r3[i178];

        $r47[i176] = d259;

        i178 = i178 + 1;

        goto label104;

     label105:
        d260 = staticinvoke <org.apache.commons.math3.util.FastMath: double hypot(double,double)>(d257, d258);

        d261 = d257 / d260;

        d262 = d258 / d260;

        $r32 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r32[i176] = d260;

        $d69 = r4[i176];

        $d72 = d261 * $d69;

        $r33 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i44 = i176 + 1;

        $d70 = $r33[$i44];

        $d71 = d262 * $d70;

        d252 = $d72 + $d71;

        $r35 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i46 = i176 + 1;

        $d74 = neg d262;

        $d73 = r4[i176];

        $d77 = $d74 * $d73;

        $r34 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i45 = i176 + 1;

        $d75 = $r34[$i45];

        $d76 = d261 * $d75;

        $d78 = $d77 + $d76;

        $r35[$i46] = $d78;

        $i47 = i176 + 1;

        $d79 = r4[$i47];

        d253 = d262 * $d79;

        $i49 = i176 + 1;

        $i48 = i176 + 1;

        $d80 = r4[$i48];

        $d81 = d261 * $d80;

        r4[$i49] = $d81;

        $i50 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        $i51 = $i50 - 1;

        if i176 >= $i51 goto label107;

        i180 = 0;

     label106:
        $i52 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i180 >= $i52 goto label107;

        $r36 = r2[i180];

        $d82 = $r36[i176];

        $d85 = d261 * $d82;

        $r37 = r2[i180];

        $i53 = i176 + 1;

        $d83 = $r37[$i53];

        $d84 = d262 * $d83;

        d263 = $d85 + $d84;

        $r40 = r2[i180];

        $i55 = i176 + 1;

        $d87 = neg d262;

        $r38 = r2[i180];

        $d86 = $r38[i176];

        $d90 = $d87 * $d86;

        $r39 = r2[i180];

        $i54 = i176 + 1;

        $d88 = $r39[$i54];

        $d89 = d261 * $d88;

        $d91 = $d90 + $d89;

        $r40[$i55] = $d91;

        $r41 = r2[i180];

        $r41[i176] = d263;

        i180 = i180 + 1;

        goto label106;

     label107:
        i176 = i176 + 1;

        goto label102;

     label108:
        $i40 = i146 - 2;

        r4[$i40] = d252;

        goto label120;

     label109:
        $r57 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d118 = $r57[i168];

        $b67 = $d118 cmpg 0.0;

        if $b67 > 0 goto label113;

        $r73 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i83 = i168;

        $r72 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d124 = $r72[i168];

        $b82 = $d124 cmpg 0.0;

        if $b82 >= 0 goto label110;

        $r76 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d127 = $r76[i168];

        $d264 = neg $d127;

        goto label111;

     label110:
        $d264 = 0.0;

     label111:
        $r73[$i83] = $d264;

        i181 = 0;

     label112:
        if i181 > i163 goto label113;

        $r75 = r3[i181];

        $r74 = r3[i181];

        $d125 = $r74[i168];

        $d126 = neg $d125;

        $r75[i168] = $d126;

        i181 = i181 + 1;

        goto label112;

     label113:
        if i168 >= i163 goto label119;

        $r58 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d120 = $r58[i168];

        $r59 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i68 = i168 + 1;

        $d119 = $r59[$i68];

        $b69 = $d120 cmpl $d119;

        if $b69 < 0 goto label114;

        goto label119;

     label114:
        $r60 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        d265 = $r60[i168];

        $r62 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r61 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i70 = i168 + 1;

        $d121 = $r61[$i70];

        $r62[i168] = $d121;

        $r63 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i71 = i168 + 1;

        $r63[$i71] = d265;

        $i72 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        $i73 = $i72 - 1;

        if i168 >= $i73 goto label116;

        i182 = 0;

     label115:
        $i79 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        if i182 >= $i79 goto label116;

        $r68 = r3[i182];

        $i80 = i168 + 1;

        d266 = $r68[$i80];

        $r70 = r3[i182];

        $i81 = i168 + 1;

        $r69 = r3[i182];

        $d123 = $r69[i168];

        $r70[$i81] = $d123;

        $r71 = r3[i182];

        $r71[i168] = d266;

        i182 = i182 + 1;

        goto label115;

     label116:
        $i74 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        $i75 = $i74 - 1;

        if i168 >= $i75 goto label118;

        i183 = 0;

     label117:
        $i76 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if i183 >= $i76 goto label118;

        $r64 = r2[i183];

        $i77 = i168 + 1;

        d267 = $r64[$i77];

        $r66 = r2[i183];

        $i78 = i168 + 1;

        $r65 = r2[i183];

        $d122 = $r65[i168];

        $r66[$i78] = $d122;

        $r67 = r2[i183];

        $r67[i168] = d267;

        i183 = i183 + 1;

        goto label117;

     label118:
        i168 = i168 + 1;

        goto label113;

     label119:
        i146 = i146 + -1;

     label120:
        goto label071;

     label121:
        $i23 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        $d8 = (double) $i23;

        $r7 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d7 = $r7[0];

        $d9 = $d8 * $d7;

        $d11 = $d9 * 2.220446049250313E-16;

        $d10 = <org.apache.commons.math3.util.Precision: double SAFE_MIN>;

        $d12 = staticinvoke <org.apache.commons.math3.util.FastMath: double sqrt(double)>($d10);

        $d13 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d11, $d12);

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double tol> = $d13;

        $z0 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: boolean transposed>;

        if $z0 != 0 goto label122;

        $r10 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[][])>(r2);

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedU> = $r10;

        $r11 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[][])>(r3);

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedV> = $r11;

        goto label123;

     label122:
        $r8 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[][])>(r3);

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedU> = $r8;

        $r9 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[][])>(r2);

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedV> = $r9;

     label123:
        return;
    }

    public org.apache.commons.math3.linear.RealMatrix getU()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedU>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealMatrix getUT()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        org.apache.commons.math3.linear.RealMatrix $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedUt>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix getU()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.linear.RealMatrix: org.apache.commons.math3.linear.RealMatrix transpose()>();

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedUt> = $r4;

     label1:
        $r2 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedUt>;

        return $r2;
    }

    public org.apache.commons.math3.linear.RealMatrix getS()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        org.apache.commons.math3.linear.RealMatrix $r1, $r2, $r4;
        double[] $r3;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedS>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r4 = staticinvoke <org.apache.commons.math3.linear.MatrixUtils: org.apache.commons.math3.linear.RealMatrix createRealDiagonalMatrix(double[])>($r3);

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedS> = $r4;

     label1:
        $r2 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedS>;

        return $r2;
    }

    public double[] getSingularValues()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        double[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (double[]) $r2;

        return $r3;
    }

    public org.apache.commons.math3.linear.RealMatrix getV()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        org.apache.commons.math3.linear.RealMatrix $r1;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedV>;

        return $r1;
    }

    public org.apache.commons.math3.linear.RealMatrix getVT()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        org.apache.commons.math3.linear.RealMatrix $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedVt>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix getV()>();

        $r4 = interfaceinvoke $r3.<org.apache.commons.math3.linear.RealMatrix: org.apache.commons.math3.linear.RealMatrix transpose()>();

        r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedVt> = $r4;

     label1:
        $r2 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix cachedVt>;

        return $r2;
    }

    public org.apache.commons.math3.linear.RealMatrix getCovariance(double)
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        double d0, $d2, $d3;
        int i0, $i1, $i2, i4;
        double[][] r1;
        double[] $r3, $r12, $r14;
        org.apache.commons.math3.linear.RealMatrix $r4, $r7, $r8;
        org.apache.commons.math3.linear.SingularValueDecomposition$1 $r5;
        org.apache.commons.math3.linear.Array2DRowRealMatrix $r6;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r9;
        org.apache.commons.math3.exception.util.LocalizedFormats $r10;
        java.lang.Double $r11, $r13;
        byte $b3;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        d0 := @parameter0: double;

        $r3 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        i0 = lengthof $r3;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r14 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d3 = $r14[i4];

        $b3 = $d3 cmpl d0;

        if $b3 < 0 goto label2;

        i4 = i4 + 1;

        goto label1;

     label2:
        if i4 != 0 goto label3;

        $r9 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r10 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats TOO_LARGE_CUTOFF_SINGULAR_VALUE>;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r12 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d2 = $r12[0];

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        specialinvoke $r9.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>($r10, $r11, $r13, 1);

        throw $r9;

     label3:
        r1 = newmultiarray (double)[i4][i0];

        $r4 = virtualinvoke r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix getVT()>();

        $r5 = new org.apache.commons.math3.linear.SingularValueDecomposition$1;

        specialinvoke $r5.<org.apache.commons.math3.linear.SingularValueDecomposition$1: void <init>(org.apache.commons.math3.linear.SingularValueDecomposition,double[][])>(r0, r1);

        $i2 = i4 - 1;

        $i1 = i0 - 1;

        interfaceinvoke $r4.<org.apache.commons.math3.linear.RealMatrix: double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)>($r5, 0, $i2, 0, $i1);

        $r6 = new org.apache.commons.math3.linear.Array2DRowRealMatrix;

        specialinvoke $r6.<org.apache.commons.math3.linear.Array2DRowRealMatrix: void <init>(double[][],boolean)>(r1, 0);

        $r7 = interfaceinvoke $r6.<org.apache.commons.math3.linear.RealMatrix: org.apache.commons.math3.linear.RealMatrix transpose()>();

        $r8 = interfaceinvoke $r7.<org.apache.commons.math3.linear.RealMatrix: org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix)>($r6);

        return $r8;
    }

    public double getNorm()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        double[] $r1;
        double $d0;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d0 = $r1[0];

        return $d0;
    }

    public double getConditionNumber()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        double[] $r1, $r2;
        int $i0, $i1;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d1 = $r1[0];

        $r2 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i0 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        $i1 = $i0 - 1;

        $d0 = $r2[$i1];

        $d2 = $d1 / $d0;

        return $d2;
    }

    public double getInverseConditionNumber()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        int $i0, $i1;
        double[] $r1, $r2;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i0 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int n>;

        $i1 = $i0 - 1;

        $d1 = $r1[$i1];

        $r2 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d0 = $r2[0];

        $d2 = $d1 / $d0;

        return $d2;
    }

    public int getRank()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        double[] $r1, $r2;
        int $i0, i2, i3;
        double $d0, $d1;
        byte $b1;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        i2 = 0;

        i3 = 0;

     label1:
        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label3;

        $r2 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $d1 = $r2[i3];

        $d0 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double tol>;

        $b1 = $d1 cmpl $d0;

        if $b1 <= 0 goto label2;

        i2 = i2 + 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return i2;
    }

    public org.apache.commons.math3.linear.DecompositionSolver getSolver()
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        org.apache.commons.math3.linear.SingularValueDecomposition$Solver $r1;
        double[] $r2;
        org.apache.commons.math3.linear.RealMatrix $r3, $r4;
        int $i0, $i1;
        double $d0;
        boolean $z0;

        r0 := @this: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = new org.apache.commons.math3.linear.SingularValueDecomposition$Solver;

        $r2 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        $r3 = virtualinvoke r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix getUT()>();

        $r4 = virtualinvoke r0.<org.apache.commons.math3.linear.SingularValueDecomposition: org.apache.commons.math3.linear.RealMatrix getV()>();

        $i0 = virtualinvoke r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int getRank()>();

        $i1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: int m>;

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $d0 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double tol>;

        specialinvoke $r1.<org.apache.commons.math3.linear.SingularValueDecomposition$Solver: void <init>(double[],org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,boolean,double,org.apache.commons.math3.linear.SingularValueDecomposition$1)>($r2, $r3, $r4, $z0, $d0, null);

        return $r1;
    }

    static double[] access$000(org.apache.commons.math3.linear.SingularValueDecomposition)
    {
        org.apache.commons.math3.linear.SingularValueDecomposition r0;
        double[] $r1;

        r0 := @parameter0: org.apache.commons.math3.linear.SingularValueDecomposition;

        $r1 = r0.<org.apache.commons.math3.linear.SingularValueDecomposition: double[] singularValues>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.linear.SingularValueDecomposition: double TINY> = 1.6033346880071782E-291;

        <org.apache.commons.math3.linear.SingularValueDecomposition: double EPS> = 2.220446049250313E-16;

        return;
    }
}
