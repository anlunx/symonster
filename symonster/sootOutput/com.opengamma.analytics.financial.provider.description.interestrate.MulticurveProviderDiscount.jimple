public class com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount extends java.lang.Object implements com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface
{
    private static final org.slf4j.Logger s_logger;
    private final java.util.Map _discountingCurves;
    private final java.util.Map _forwardONCurves;
    private final java.util.Map _forwardIborCurves;
    private com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix;
    private java.util.Map _allCurves;
    private com.google.common.collect.ListMultimap _namesToCurrency;
    private com.google.common.collect.ListMultimap _namesToIborIndex;
    private com.google.common.collect.ListMultimap _namesToONIndex;

    public void <init>()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.LinkedHashMap $r1, $r2, $r3;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves> = $r3;

        $r4 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke $r4.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r4;

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1;
        java.util.LinkedHashMap $r3, $r4, $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "FX matrix");

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves> = $r4;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves> = $r5;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = r1;

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void <init>(java.util.Map, java.util.Map, java.util.Map, com.opengamma.analytics.financial.forex.method.FXMatrix)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Map r1, r2, r3;
        com.opengamma.analytics.financial.forex.method.FXMatrix r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: com.opengamma.analytics.financial.forex.method.FXMatrix;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "discounting curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "forward ibor curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r3, "forward overnight curve");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, "FX matrix");

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves> = r1;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves> = r2;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves> = r3;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = r4;

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void <init>(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0, r1;
        java.util.Map $r3, $r4, $r5;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r6;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "market");

        $r3 = r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves> = $r3;

        $r4 = r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves> = $r4;

        $r5 = r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves> = $r5;

        $r6 = r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = $r6;

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface getMulticurveProvider()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        return r0;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount copy()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0, $r13;
        java.util.LinkedHashMap $r5, $r7, $r9;
        java.util.Map $r6, $r8, $r10;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r11, $r12;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r5 = new java.util.LinkedHashMap;

        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r6);

        $r7 = new java.util.LinkedHashMap;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r8);

        $r9 = new java.util.LinkedHashMap;

        $r10 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r10);

        $r11 = new com.opengamma.analytics.financial.forex.method.FXMatrix;

        $r12 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        specialinvoke $r11.<com.opengamma.analytics.financial.forex.method.FXMatrix: void <init>(com.opengamma.analytics.financial.forex.method.FXMatrix)>($r12);

        $r13 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        specialinvoke $r13.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(java.util.Map,java.util.Map,java.util.Map,com.opengamma.analytics.financial.forex.method.FXMatrix)>($r5, $r7, $r9, $r11);

        return $r13;
    }

    private void setAllCurves()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Set r1, r40, r44;
        java.lang.String r2, r39, r43;
        java.util.LinkedHashMap $r3;
        com.google.common.collect.ArrayListMultimap $r4, $r5, $r6;
        java.util.Map $r7, $r8, $r9, $r11, $r14, $r15, $r20, $r23, $r24, $r29, $r32, $r33;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10, $r12, $r16, $r19, $r21, $r25, $r28, $r30, $r34;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r13, $r22, $r31;
        com.google.common.collect.ListMultimap $r18, $r27, $r36;
        java.util.Iterator r37, r41, r45;
        com.opengamma.util.money.Currency r38;
        com.opengamma.analytics.financial.instrument.index.IborIndex r42;
        com.opengamma.analytics.financial.instrument.index.IndexON r46;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves> = $r3;

        $r4 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.google.common.collect.ListMultimap _namesToCurrency> = $r4;

        $r5 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.google.common.collect.ListMultimap _namesToIborIndex> = $r5;

        $r6 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>();

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.google.common.collect.ListMultimap _namesToONIndex> = $r6;

        $r7 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        r1 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        r37 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r28 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (com.opengamma.util.money.Currency) $r28;

        $r29 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r30 = interfaceinvoke $r29.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38);

        $r31 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r30;

        r39 = virtualinvoke $r31.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        $r33 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r32 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r34 = interfaceinvoke $r32.<java.util.Map: java.lang.Object get(java.lang.Object)>(r38);

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r39, $r34);

        $r36 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.google.common.collect.ListMultimap _namesToCurrency>;

        interfaceinvoke $r36.<com.google.common.collect.ListMultimap: boolean put(java.lang.Object,java.lang.Object)>(r39, r38);

        goto label1;

     label2:
        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        r40 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        r41 = interfaceinvoke r40.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r19 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (com.opengamma.analytics.financial.instrument.index.IborIndex) $r19;

        $r20 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r42);

        $r22 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r21;

        r43 = virtualinvoke $r22.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        $r24 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r23 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r25 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r42);

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r43, $r25);

        $r27 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.google.common.collect.ListMultimap _namesToIborIndex>;

        interfaceinvoke $r27.<com.google.common.collect.ListMultimap: boolean put(java.lang.Object,java.lang.Object)>(r43, r42);

        goto label3;

     label4:
        $r9 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        r44 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>();

        r45 = interfaceinvoke r44.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r10 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r46 = (com.opengamma.analytics.financial.instrument.index.IndexON) $r10;

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r46);

        $r13 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r12;

        r2 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        $r15 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r14 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r16 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r46);

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r16);

        $r18 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.google.common.collect.ListMultimap _namesToONIndex>;

        interfaceinvoke $r18.<com.google.common.collect.ListMultimap: boolean put(java.lang.Object,java.lang.Object)>(r2, r46);

        goto label5;

     label6:
        return;
    }

    public double[] parameterSensitivity(java.lang.String, java.util.List)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.lang.String r1, $r17;
        java.util.List r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r3;
        int i0, $i1, i2;
        double[] r4, r7;
        java.util.Iterator r5;
        com.opengamma.util.tuple.DoublesPair r6;
        java.util.Map $r8;
        java.lang.Object $r9, $r10;
        boolean $z0;
        java.lang.Double $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.UnsupportedOperationException $r13;
        java.lang.StringBuilder $r14, $r15, $r16;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        if r3 != null goto label1;

        $r13 = new java.lang.UnsupportedOperationException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get sensitivities for curve called ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label1:
        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: int getNumberOfParameters()>();

        r4 = newarray (double)[i0];

        if r2 == null goto label5;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 <= 0 goto label5;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.opengamma.util.tuple.DoublesPair) $r10;

        $r11 = virtualinvoke r6.<com.opengamma.util.tuple.DoublesPair: java.lang.Double getFirst()>();

        $d0 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        r7 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double[] getInterestRateParameterSensitivity(double)>($d0);

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $d1 = r4[i2];

        $r12 = virtualinvoke r6.<com.opengamma.util.tuple.DoublesPair: java.lang.Double getSecond()>();

        $d2 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $d3 = r7[i2];

        $d4 = $d2 * $d3;

        $d5 = $d1 + $d4;

        r4[i2] = $d5;

        i2 = i2 + 1;

        goto label3;

     label4:
        goto label2;

     label5:
        return r4;
    }

    public double[] parameterForwardSensitivity(java.lang.String, java.util.List)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.lang.String r1, $r16;
        java.util.List r2;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r3;
        int i0, $i1, i2;
        double[] r4, r7, r8;
        java.util.Iterator r5;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity r6;
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        java.util.Map $r9;
        java.lang.Object $r10, $r11;
        boolean $z0;
        java.lang.UnsupportedOperationException $r12;
        java.lang.StringBuilder $r13, $r14, $r15;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r9 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r10;

        if r3 != null goto label1;

        $r12 = new java.lang.UnsupportedOperationException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get sensitivities for curve called ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label1:
        i0 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: int getNumberOfParameters()>();

        r4 = newarray (double)[i0];

        if r2 == null goto label5;

        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i1 <= 0 goto label5;

        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity) $r11;

        d0 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double getStartTime()>();

        d1 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double getEndTime()>();

        d2 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double getValue()>();

        d3 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        d4 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        d5 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double derivativeToYieldStart(double,double)>(d3, d4);

        d6 = virtualinvoke r6.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: double derivativeToYieldEnd(double,double)>(d3, d4);

        r7 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double[] getInterestRateParameterSensitivity(double)>(d0);

        r8 = virtualinvoke r3.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double[] getInterestRateParameterSensitivity(double)>(d1);

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $d10 = r4[i2];

        $d7 = r7[i2];

        $d8 = d5 * $d7;

        $d9 = $d8 * d2;

        $d11 = $d10 + $d9;

        r4[i2] = $d11;

        $d15 = r4[i2];

        $d12 = r8[i2];

        $d13 = d6 * $d12;

        $d14 = $d13 * d2;

        $d16 = $d15 + $d14;

        r4[i2] = $d16;

        i2 = i2 + 1;

        goto label3;

     label4:
        goto label2;

     label5:
        return r4;
    }

    public java.lang.Integer getNumberOfParameters(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4;
        int $i0;
        java.lang.Integer $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r3;

        $i0 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: int getNumberOfParameters()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r5;
    }

    public java.util.List getUnderlyingCurvesNames(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4;
        java.util.List $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r3;

        $r5 = virtualinvoke $r4.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.util.List getUnderlyingCurvesNames()>();

        return $r5;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r3;

        return $r4;
    }

    public java.util.List getCurrencyForName(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.lang.String r1;
        com.google.common.collect.ListMultimap $r2;
        java.util.List $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.google.common.collect.ListMultimap _namesToCurrency>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.util.List getIborIndexForName(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.lang.String r1;
        com.google.common.collect.ListMultimap $r2;
        java.util.List $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.google.common.collect.ListMultimap _namesToIborIndex>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.util.List getOvernightIndexForName(java.lang.String)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.lang.String r1;
        com.google.common.collect.ListMultimap $r2;
        java.util.List $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.google.common.collect.ListMultimap _namesToONIndex>;

        $r3 = interfaceinvoke $r2.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(r1);

        return $r3;
    }

    public double getDiscountFactor(com.opengamma.util.money.Currency, java.lang.Double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.util.money.Currency r1;
        java.lang.Double r2;
        java.util.Map $r3, $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.Object $r10;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r11;
        double $d0, $d1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: java.lang.Double;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r9 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r11 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r10;

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke $r11.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>($d0);

        return $d1;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currency discounting curve not found: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    public java.lang.String getName(com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.util.money.Currency r1;
        java.util.Map $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7, $r11;
        java.lang.Object $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        return $r11;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currency discounting curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public java.util.Set getCurrencies()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public double getInvestmentFactor(com.opengamma.analytics.financial.instrument.index.IborIndex, double, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        double d0, d1, d2, $d3, $d4, $d5;
        java.util.Map $r2, $r8, $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r13;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        $d3 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r12;

        $d4 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d5 = $d3 / $d4;

        return $d5;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex, double, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7;
        java.util.Map $r2, $r8, $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r13;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        $d3 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r12;

        $d4 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d5 = $d3 / $d4;

        $d6 = $d5 - 1.0;

        $d7 = $d6 / d2;

        return $d7;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        double d0, d1, d2, $d3;
        byte $b0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $b0 = d0 cmpl d1;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "Start time should be different from end time");

        d2 = d1 - d0;

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>(r1, d0, d1, d2);

        return $d3;
    }

    public double getAnnuallyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex, double, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8;
        byte $b0;
        java.util.Map $r2, $r8, $r11;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r13;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $b0 = d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "The accrual factor can\'t be null");

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        $d3 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r12;

        $d4 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d6 = $d3 / $d4;

        $d5 = 1.0 / d2;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, $d5);

        $d8 = $d7 - 1.0;

        return $d8;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public double getAnnuallyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        double d0, d1, d2, $d3;
        byte $b0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $b0 = d0 cmpl d1;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "Start time should be different from end time");

        d2 = d1 - d0;

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: double getAnnuallyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IborIndex,double,double,double)>(r1, d0, d1, d2);

        return $d3;
    }

    public java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IborIndex)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        java.util.Map $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7, $r11;
        java.lang.Object $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        return $r11;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public java.util.Set getIndexesIbor()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public double getInvestmentFactor(com.opengamma.analytics.financial.instrument.index.IndexON, double, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        double d0, d1, d2, $d3, $d4, $d5;
        java.util.Map $r2, $r8, $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r13;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        $d3 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r12;

        $d4 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d5 = $d3 / $d4;

        return $d5;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward ON curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON, double, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7;
        java.util.Map $r2, $r8, $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r13;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        $d3 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r12;

        $d4 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d5 = $d3 / $d4;

        $d6 = $d5 - 1.0;

        $d7 = $d6 / d2;

        return $d7;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward ON curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        double d0, d1, d2, $d3;
        byte $b0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $b0 = d0 cmpl d1;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "Start time should be different from end time");

        d2 = d1 - d0;

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: double getSimplyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>(r1, d0, d1, d2);

        return $d3;
    }

    public double getAnnuallyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON, double, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8;
        byte $b0;
        java.util.Map $r2, $r8, $r11;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9, $r12;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10, $r13;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $b0 = d2 cmpl 0.0;

        if $b0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z1, "The accrual factor can\'t be null");

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        $d3 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d0);

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r12;

        $d4 = virtualinvoke $r13.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: double getDiscountFactor(double)>(d1);

        $d6 = $d3 / $d4;

        $d5 = 1.0 / d2;

        $d7 = staticinvoke <java.lang.Math: double pow(double,double)>($d6, $d5);

        $d8 = $d7 - 1.0;

        return $d8;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward ON curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public double getAnnuallyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON, double, double)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        double d0, d1, d2, $d3;
        byte $b0;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $b0 = d0 cmpl d1;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isFalse(boolean,java.lang.String)>($z0, "Start time should be different from end time");

        d2 = d1 - d0;

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: double getAnnuallyCompoundForwardRate(com.opengamma.analytics.financial.instrument.index.IndexON,double,double,double)>(r1, d0, d1, d2);

        return $d3;
    }

    public java.lang.String getName(com.opengamma.analytics.financial.instrument.index.IndexON)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        java.util.Map $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7, $r11;
        java.lang.Object $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        $r11 = virtualinvoke $r10.<com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve: java.lang.String getName()>();

        return $r11;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public java.util.Set getIndexesON()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.util.money.Currency r1;
        java.util.Map $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        return $r10;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currency discounting curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IborIndex)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        java.util.Map $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        return $r10;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve getCurve(com.opengamma.analytics.financial.instrument.index.IndexON)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        java.util.Map $r2, $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.Object $r9;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r9;

        return $r10;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward curve not found: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public java.util.Set getAllNames()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Set $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Set getAllCurveNames()>();

        return $r1;
    }

    public void setCurve(com.opengamma.util.money.Currency, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.util.money.Currency r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2, $r8;
        boolean z0, $z1;
        java.util.Map $r5, $r6, $r13, $r22, $r28;
        java.lang.Object $r7, $r14, $r23;
        java.lang.Object[] $r9;
        org.slf4j.Logger $r10;
        java.lang.String $r12, $r18, $r27, $r30;
        java.lang.IllegalArgumentException $r15;
        java.lang.StringBuilder $r16, $r17, $r19, $r20, $r21, $r24, $r25, $r26;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "currency");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r28 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        goto label4;

     label1:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r7;

        z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        $r10 = <com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: org.slf4j.Logger s_logger>;

        $r9 = newarray (java.lang.Object)[4];

        if z0 == 0 goto label2;

        $r30 = "equal";

        goto label3;

     label2:
        $r30 = "unequal";

     label3:
        $r9[0] = $r30;

        $r12 = virtualinvoke r1.<com.opengamma.util.money.Currency: java.lang.String getCode()>();

        $r9[1] = $r12;

        $r9[2] = r2;

        $r13 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r9[3] = $r14;

        interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Two {} discounting curves for {}: {} {}", $r9);

        if z0 != 0 goto label4;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to replace ");

        $r18 = virtualinvoke r1.<com.opengamma.util.money.Currency: java.lang.String getCode()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" discounting curve with ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("different curve. existing: ");

        $r22 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r15;

     label4:
        return;
    }

    public void setCurve(com.opengamma.analytics.financial.instrument.index.IborIndex, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2, $r8;
        java.util.Map $r5, $r6, $r15;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r12, $r14;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "index");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r15 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        goto label2;

     label1:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ibor index forward curve already set: ");

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.index.IborIndex: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label2:
        return;
    }

    public void setCurve(com.opengamma.analytics.financial.instrument.index.IndexON, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2, $r8;
        java.util.Map $r5, $r6, $r15;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r12, $r14;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "index");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r15 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        goto label2;

     label1:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ON index forward curve already set: ");

        $r12 = virtualinvoke r1.<com.opengamma.analytics.financial.instrument.index.IndexON: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label2:
        return;
    }

    public void setAll(com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0, r1;
        java.util.Map $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Market bundle");

        $r4 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r3 = r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r3);

        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r5 = r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        interfaceinvoke $r6.<java.util.Map: void putAll(java.util.Map)>($r5);

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r7 = r1.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        interfaceinvoke $r8.<java.util.Map: void putAll(java.util.Map)>($r7);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void setForexMatrix(com.opengamma.analytics.financial.forex.method.FXMatrix)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.forex.method.FXMatrix;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "FX matrix");

        r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix> = r1;

        return;
    }

    public void replaceCurve(com.opengamma.util.money.Currency, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.util.money.Currency r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.Map $r5, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Currency");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currency discounting curve not in set: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void replaceCurve(com.opengamma.analytics.financial.instrument.index.IborIndex, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.Map $r5, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Index");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward curve not in set: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void replaceCurve(com.opengamma.analytics.financial.instrument.index.IndexON, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.Map $r5, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Index");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forward curve not in set: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void setOrReplaceCurve(com.opengamma.util.money.Currency, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.util.money.Currency r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.Map $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Currency");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void setOrReplaceCurve(com.opengamma.analytics.financial.instrument.index.IborIndex, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.Map $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Index");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void setOrReplaceCurve(com.opengamma.analytics.financial.instrument.index.IndexON, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.Map $r5;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Index");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "curve");

        $r5 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public void removeCurve(com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.util.money.Currency r1;
        java.util.Map $r3, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Currency");

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currency discounting curve not in set: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r4 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        specialinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void setAllCurves()>();

        return;
    }

    public double getFxRate(com.opengamma.util.money.Currency, com.opengamma.util.money.Currency)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.util.money.Currency r1, r2;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r3;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.util.money.Currency;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        $d0 = virtualinvoke $r3.<com.opengamma.analytics.financial.forex.method.FXMatrix: double getFxRate(com.opengamma.util.money.Currency,com.opengamma.util.money.Currency)>(r1, r2);

        return $d0;
    }

    public com.opengamma.analytics.financial.forex.method.FXMatrix getFxRates()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        return $r1;
    }

    public java.util.Map getDiscountingCurves()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Map $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.util.Map getForwardIborCurves()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Map $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.util.Map getForwardONCurves()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Map $r1, $r2;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.util.Set getAllCurveNames()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.TreeSet $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.SortedSet $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = new java.util.TreeSet;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r1.<java.util.TreeSet: void <init>(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>($r1);

        return $r4;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.lang.String $r3;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _allCurves>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withDiscountFactor(com.opengamma.util.money.Currency, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0, $r10;
        com.opengamma.util.money.Currency r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.LinkedHashMap $r7;
        java.util.Map $r8, $r12, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r11;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.util.money.Currency;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "currency");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "replacement");

        $r7 = new java.util.LinkedHashMap;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r8);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r10 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r13 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r12 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        specialinvoke $r10.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(java.util.Map,java.util.Map,java.util.Map,com.opengamma.analytics.financial.forex.method.FXMatrix)>($r7, $r13, $r12, $r11);

        return $r10;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IborIndex, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0, $r10;
        com.opengamma.analytics.financial.instrument.index.IborIndex r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.LinkedHashMap $r7;
        java.util.Map $r8, $r12, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r11;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IborIndex;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "index");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "replacement");

        $r7 = new java.util.LinkedHashMap;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r8);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r10 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r13 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r12 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        specialinvoke $r10.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(java.util.Map,java.util.Map,java.util.Map,com.opengamma.analytics.financial.forex.method.FXMatrix)>($r13, $r7, $r12, $r11);

        return $r10;
    }

    public com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount withForward(com.opengamma.analytics.financial.instrument.index.IndexON, com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0, $r10;
        com.opengamma.analytics.financial.instrument.index.IndexON r1;
        com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve r2;
        java.util.LinkedHashMap $r7;
        java.util.Map $r8, $r12, $r13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r11;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: com.opengamma.analytics.financial.instrument.index.IndexON;

        r2 := @parameter1: com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "index");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "replacement");

        $r7 = new java.util.LinkedHashMap;

        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r8);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r10 = new com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r13 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r12 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r11 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        specialinvoke $r10.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: void <init>(java.util.Map,java.util.Map,java.util.Map,com.opengamma.analytics.financial.forex.method.FXMatrix)>($r13, $r12, $r7, $r11);

        return $r10;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0;
        java.util.Map $r1, $r2, $r3;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, i11, i12, i13;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r4;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $i1 = 31 * 1;

        $r1 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $i2 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        i10 = $i1 + $i2;

        $i3 = 31 * i10;

        $r2 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $i4 = interfaceinvoke $r2.<java.util.Map: int hashCode()>();

        i11 = $i3 + $i4;

        $i5 = 31 * i11;

        $r3 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $i6 = interfaceinvoke $r3.<java.util.Map: int hashCode()>();

        i12 = $i5 + $i6;

        $i7 = 31 * i12;

        $r4 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        $i8 = virtualinvoke $r4.<com.opengamma.analytics.financial.forex.method.FXMatrix: int hashCode()>();

        i13 = $i7 + $i8;

        return i13;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Map $r3, $r4, $r5, $r6, $r7, $r8;
        com.opengamma.analytics.financial.forex.method.FXMatrix $r9, $r10;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount) r1;

        $r4 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $r3 = r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _discountingCurves>;

        $z1 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r6 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $r5 = r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardIborCurves>;

        $z2 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        $r8 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $r7 = r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: java.util.Map _forwardONCurves>;

        $z3 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 != 0 goto label5;

        return 0;

     label5:
        $r10 = r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        $r9 = r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.forex.method.FXMatrix _fxMatrix>;

        $z4 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public volatile com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface copy()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0, $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount copy()>();

        return $r1;
    }

    public volatile com.opengamma.analytics.financial.provider.description.interestrate.ParameterProviderInterface copy()
    {
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount r0, $r1;

        r0 := @this: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount;

        $r1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount copy()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/opengamma/analytics/financial/provider/description/interestrate/MulticurveProviderDiscount");

        <com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderDiscount: org.slf4j.Logger s_logger> = $r0;

        return;
    }
}
