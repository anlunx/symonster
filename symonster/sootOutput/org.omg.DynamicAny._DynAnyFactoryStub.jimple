public class org.omg.DynamicAny._DynAnyFactoryStub extends org.omg.CORBA.portable.ObjectImpl implements org.omg.DynamicAny.DynAnyFactory
{
    public static final java.lang.Class _opsClass;
    private static java.lang.String[] __ids;

    public void <init>()
    {
        org.omg.DynamicAny._DynAnyFactoryStub r0;

        r0 := @this: org.omg.DynamicAny._DynAnyFactoryStub;

        specialinvoke r0.<org.omg.CORBA.portable.ObjectImpl: void <init>()>();

        return;
    }

    public org.omg.DynamicAny.DynAny create_dyn_any(org.omg.CORBA.Any) throws org.omg.DynamicAny.DynAnyFactoryPackage.InconsistentTypeCode
    {
        org.omg.DynamicAny._DynAnyFactoryStub r0;
        org.omg.CORBA.Any r1;
        org.omg.CORBA.portable.ServantObject r2;
        org.omg.DynamicAny.DynAnyFactoryOperations r3;
        org.omg.DynamicAny.DynAny r4;
        java.lang.Class $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.omg.DynamicAny._DynAnyFactoryStub;

        r1 := @parameter0: org.omg.CORBA.Any;

        $r6 = <org.omg.DynamicAny._DynAnyFactoryStub: java.lang.Class _opsClass>;

        r2 = virtualinvoke r0.<org.omg.DynamicAny._DynAnyFactoryStub: org.omg.CORBA.portable.ServantObject _servant_preinvoke(java.lang.String,java.lang.Class)>("create_dyn_any", $r6);

        $r7 = r2.<org.omg.CORBA.portable.ServantObject: java.lang.Object servant>;

        r3 = (org.omg.DynamicAny.DynAnyFactoryOperations) $r7;

     label1:
        r4 = interfaceinvoke r3.<org.omg.DynamicAny.DynAnyFactoryOperations: org.omg.DynamicAny.DynAny create_dyn_any(org.omg.CORBA.Any)>(r1);

     label2:
        virtualinvoke r0.<org.omg.DynamicAny._DynAnyFactoryStub: void _servant_postinvoke(org.omg.CORBA.portable.ServantObject)>(r2);

        return r4;

     label3:
        $r8 := @caughtexception;

     label4:
        virtualinvoke r0.<org.omg.DynamicAny._DynAnyFactoryStub: void _servant_postinvoke(org.omg.CORBA.portable.ServantObject)>(r2);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.omg.DynamicAny.DynAny create_dyn_any_from_type_code(org.omg.CORBA.TypeCode) throws org.omg.DynamicAny.DynAnyFactoryPackage.InconsistentTypeCode
    {
        org.omg.DynamicAny._DynAnyFactoryStub r0;
        org.omg.CORBA.TypeCode r1;
        org.omg.CORBA.portable.ServantObject r2;
        org.omg.DynamicAny.DynAnyFactoryOperations r3;
        org.omg.DynamicAny.DynAny r4;
        java.lang.Class $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.omg.DynamicAny._DynAnyFactoryStub;

        r1 := @parameter0: org.omg.CORBA.TypeCode;

        $r6 = <org.omg.DynamicAny._DynAnyFactoryStub: java.lang.Class _opsClass>;

        r2 = virtualinvoke r0.<org.omg.DynamicAny._DynAnyFactoryStub: org.omg.CORBA.portable.ServantObject _servant_preinvoke(java.lang.String,java.lang.Class)>("create_dyn_any_from_type_code", $r6);

        $r7 = r2.<org.omg.CORBA.portable.ServantObject: java.lang.Object servant>;

        r3 = (org.omg.DynamicAny.DynAnyFactoryOperations) $r7;

     label1:
        r4 = interfaceinvoke r3.<org.omg.DynamicAny.DynAnyFactoryOperations: org.omg.DynamicAny.DynAny create_dyn_any_from_type_code(org.omg.CORBA.TypeCode)>(r1);

     label2:
        virtualinvoke r0.<org.omg.DynamicAny._DynAnyFactoryStub: void _servant_postinvoke(org.omg.CORBA.portable.ServantObject)>(r2);

        return r4;

     label3:
        $r8 := @caughtexception;

     label4:
        virtualinvoke r0.<org.omg.DynamicAny._DynAnyFactoryStub: void _servant_postinvoke(org.omg.CORBA.portable.ServantObject)>(r2);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String[] _ids()
    {
        org.omg.DynamicAny._DynAnyFactoryStub r0;
        java.lang.String[] $r1, $r3, $r4;
        java.lang.Object $r2;

        r0 := @this: org.omg.DynamicAny._DynAnyFactoryStub;

        $r1 = <org.omg.DynamicAny._DynAnyFactoryStub: java.lang.String[] __ids>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException
    {
        org.omg.DynamicAny._DynAnyFactoryStub r0;
        java.io.ObjectInputStream r1;
        java.lang.String r2;
        org.omg.CORBA.Object r3;
        org.omg.CORBA.portable.Delegate r4;
        org.omg.CORBA.ORB $r5;
        org.omg.CORBA.portable.ObjectImpl $r6;

        r0 := @this: org.omg.DynamicAny._DynAnyFactoryStub;

        r1 := @parameter0: java.io.ObjectInputStream;

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.String readUTF()>();

        $r5 = staticinvoke <org.omg.CORBA.ORB: org.omg.CORBA.ORB init(java.lang.String[],java.util.Properties)>(null, null);

        r3 = virtualinvoke $r5.<org.omg.CORBA.ORB: org.omg.CORBA.Object string_to_object(java.lang.String)>(r2);

        $r6 = (org.omg.CORBA.portable.ObjectImpl) r3;

        r4 = virtualinvoke $r6.<org.omg.CORBA.portable.ObjectImpl: org.omg.CORBA.portable.Delegate _get_delegate()>();

        virtualinvoke r0.<org.omg.DynamicAny._DynAnyFactoryStub: void _set_delegate(org.omg.CORBA.portable.Delegate)>(r4);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.omg.DynamicAny._DynAnyFactoryStub r0;
        java.io.ObjectOutputStream r1;
        java.lang.String r2;
        org.omg.CORBA.ORB $r3;

        r0 := @this: org.omg.DynamicAny._DynAnyFactoryStub;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r3 = staticinvoke <org.omg.CORBA.ORB: org.omg.CORBA.ORB init(java.lang.String[],java.util.Properties)>(null, null);

        r2 = virtualinvoke $r3.<org.omg.CORBA.ORB: java.lang.String object_to_string(org.omg.CORBA.Object)>(r0);

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>(r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <org.omg.DynamicAny._DynAnyFactoryStub: java.lang.Class _opsClass> = class "org/omg/DynamicAny/DynAnyFactoryOperations";

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "IDL:omg.org/DynamicAny/DynAnyFactory:1.0";

        <org.omg.DynamicAny._DynAnyFactoryStub: java.lang.String[] __ids> = $r0;

        return;
    }
}
