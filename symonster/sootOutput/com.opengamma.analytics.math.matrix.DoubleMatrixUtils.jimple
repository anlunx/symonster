public final class com.opengamma.analytics.math.matrix.DoubleMatrixUtils extends java.lang.Object
{

    private void <init>()
    {
        com.opengamma.analytics.math.matrix.DoubleMatrixUtils r0;

        r0 := @this: com.opengamma.analytics.math.matrix.DoubleMatrixUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.opengamma.analytics.math.matrix.DoubleMatrix2D getTranspose(com.opengamma.analytics.math.matrix.DoubleMatrix2D)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix2D r0, $r2;
        int i0, i1, i2, i3;
        double[][] r1;
        int[] $r3;
        double[] $r4;
        java.lang.Double $r5;
        double $d0;

        r0 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        i0 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>();

        i1 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>();

        r1 = newmultiarray (double)[i1][i0];

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $r4 = r1[i2];

        $r3 = newarray (int)[2];

        $r3[0] = i3;

        $r3[1] = i2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: java.lang.Double getEntry(int[])>($r3);

        $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $r4[i3] = $d0;

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r2 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r1);

        return $r2;
    }

    public static com.opengamma.analytics.math.matrix.DoubleMatrix2D getIdentityMatrix2D(int)
    {
        int i0, i1;
        double[][] r0, $r4;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r1, $r3, $r6;
        double[] $r2, $r5;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z0, "dimension must be >= 0");

        if i0 != 0 goto label3;

        $r6 = <com.opengamma.analytics.math.matrix.DoubleMatrix2D: com.opengamma.analytics.math.matrix.DoubleMatrix2D EMPTY_MATRIX>;

        return $r6;

     label3:
        if i0 != 1 goto label4;

        $r3 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        $r4 = newarray (double[])[1];

        $r5 = newarray (double)[1];

        $r5[0] = 1.0;

        $r4[0] = $r5;

        specialinvoke $r3.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>($r4);

        return $r3;

     label4:
        r0 = newmultiarray (double)[i0][i0];

        i1 = 0;

     label5:
        if i1 >= i0 goto label6;

        $r2 = r0[i1];

        $r2[i1] = 1.0;

        i1 = i1 + 1;

        goto label5;

     label6:
        $r1 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r1.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r0);

        return $r1;
    }

    public static com.opengamma.analytics.math.matrix.DoubleMatrix2D getTwoDimensionalDiagonalMatrix(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r0;
        int i0, i1;
        double[][] r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r2, $r6;
        int[] $r3;
        double[] $r4;
        java.lang.Double $r5;
        double $d0;

        r0 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r0);

        i0 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: int getNumberOfElements()>();

        if i0 != 0 goto label1;

        $r6 = <com.opengamma.analytics.math.matrix.DoubleMatrix2D: com.opengamma.analytics.math.matrix.DoubleMatrix2D EMPTY_MATRIX>;

        return $r6;

     label1:
        r1 = newmultiarray (double)[i0][i0];

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r4 = r1[i1];

        $r3 = newarray (int)[1];

        $r3[0] = i1;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: java.lang.Double getEntry(int[])>($r3);

        $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $r4[i1] = $d0;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r2 = new com.opengamma.analytics.math.matrix.DoubleMatrix2D;

        specialinvoke $r2.<com.opengamma.analytics.math.matrix.DoubleMatrix2D: void <init>(double[][])>(r1);

        return $r2;
    }

    public static com.opengamma.analytics.math.matrix.DoubleMatrix2D getTwoDimensionalDiagonalMatrix(double[])
    {
        double[] r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D $r1;
        com.opengamma.analytics.math.matrix.DoubleMatrix2D $r2;

        r0 := @parameter0: double[];

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object)>(r0);

        $r1 = new com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        specialinvoke $r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: void <init>(double[])>(r0);

        $r2 = staticinvoke <com.opengamma.analytics.math.matrix.DoubleMatrixUtils: com.opengamma.analytics.math.matrix.DoubleMatrix2D getTwoDimensionalDiagonalMatrix(com.opengamma.analytics.math.matrix.DoubleMatrix1D)>($r1);

        return $r2;
    }
}
