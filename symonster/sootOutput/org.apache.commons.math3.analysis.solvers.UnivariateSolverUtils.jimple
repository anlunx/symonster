public class org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils r0;

        r0 := @this: org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double solve(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction r0;
        double d0, d1, $d2;
        org.apache.commons.math3.analysis.solvers.BrentSolver $r2;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        java.lang.Object[] $r4;
        org.apache.commons.math3.exception.util.LocalizedFormats $r5;

        r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        if r0 != null goto label1;

        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        $r5 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r5, $r4);

        throw $r3;

     label1:
        $r2 = new org.apache.commons.math3.analysis.solvers.BrentSolver;

        specialinvoke $r2.<org.apache.commons.math3.analysis.solvers.BrentSolver: void <init>()>();

        $d2 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.solvers.UnivariateSolver: double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)>(2147483647, r0, d0, d1);

        return $d2;
    }

    public static double solve(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction r0;
        double d0, d1, d2, $d3;
        org.apache.commons.math3.analysis.solvers.BrentSolver $r2;
        org.apache.commons.math3.exception.NullArgumentException $r3;
        java.lang.Object[] $r4;
        org.apache.commons.math3.exception.util.LocalizedFormats $r5;

        r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        if r0 != null goto label1;

        $r3 = new org.apache.commons.math3.exception.NullArgumentException;

        $r5 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r4 = newarray (java.lang.Object)[0];

        specialinvoke $r3.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r5, $r4);

        throw $r3;

     label1:
        $r2 = new org.apache.commons.math3.analysis.solvers.BrentSolver;

        specialinvoke $r2.<org.apache.commons.math3.analysis.solvers.BrentSolver: void <init>(double)>(d2);

        $d3 = interfaceinvoke $r2.<org.apache.commons.math3.analysis.solvers.UnivariateSolver: double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)>(2147483647, r0, d0, d1);

        return $d3;
    }

    public static double forceSide(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver, double, double, double, org.apache.commons.math3.analysis.solvers.AllowedSolution) throws org.apache.commons.math3.exception.NoBracketingException
    {
        int i0, $i1, i10;
        org.apache.commons.math3.analysis.UnivariateFunction r0;
        org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, d14, d15, d16;
        org.apache.commons.math3.analysis.solvers.AllowedSolution r2, $r3;
        org.apache.commons.math3.exception.NoBracketingException $r4;
        java.lang.Object[] $r5;
        org.apache.commons.math3.exception.util.LocalizedFormats $r6;
        java.lang.Integer $r7, $r8;
        java.lang.Double $r9, $r10, $r11;
        byte $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9;
        boolean z0, z1;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.commons.math3.analysis.UnivariateFunction;

        r1 := @parameter2: org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        r2 := @parameter6: org.apache.commons.math3.analysis.solvers.AllowedSolution;

        $r3 = <org.apache.commons.math3.analysis.solvers.AllowedSolution: org.apache.commons.math3.analysis.solvers.AllowedSolution ANY_SIDE>;

        if r2 != $r3 goto label01;

        return d0;

     label01:
        $d4 = interfaceinvoke r1.<org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver: double getAbsoluteAccuracy()>();

        $d5 = interfaceinvoke r1.<org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver: double getRelativeAccuracy()>();

        $d6 = d0 * $d5;

        $d7 = staticinvoke <org.apache.commons.math3.util.FastMath: double abs(double)>($d6);

        d3 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d4, $d7);

        $d8 = d0 - d3;

        d13 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d1, $d8);

        d14 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d13);

        $d9 = d0 + d3;

        d15 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d2, $d9);

        d16 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d15);

        i10 = i0 - 2;

     label02:
        if i10 <= 0 goto label13;

        $b2 = d14 cmpl 0.0;

        if $b2 < 0 goto label03;

        $b9 = d16 cmpg 0.0;

        if $b9 <= 0 goto label04;

     label03:
        $b3 = d14 cmpg 0.0;

        if $b3 > 0 goto label05;

        $b8 = d16 cmpl 0.0;

        if $b8 < 0 goto label05;

     label04:
        $d12 = interfaceinvoke r1.<org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver: double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)>(i10, r0, d13, d15, d0, r2);

        return $d12;

     label05:
        z0 = 0;

        z1 = 0;

        $b4 = d14 cmpg d16;

        if $b4 >= 0 goto label07;

        $b7 = d14 cmpl 0.0;

        if $b7 < 0 goto label06;

        z0 = 1;

        goto label10;

     label06:
        z1 = 1;

        goto label10;

     label07:
        $b5 = d14 cmpl d16;

        if $b5 <= 0 goto label09;

        $b6 = d14 cmpg 0.0;

        if $b6 > 0 goto label08;

        z0 = 1;

        goto label10;

     label08:
        z1 = 1;

        goto label10;

     label09:
        z0 = 1;

        z1 = 1;

     label10:
        if z0 == 0 goto label11;

        $d11 = d13 - d3;

        d13 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>(d1, $d11);

        d14 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d13);

        i10 = i10 + -1;

     label11:
        if z1 == 0 goto label12;

        $d10 = d15 + d3;

        d15 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>(d2, $d10);

        d16 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d15);

        i10 = i10 + -1;

     label12:
        goto label02;

     label13:
        $r4 = new org.apache.commons.math3.exception.NoBracketingException;

        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FAILED_BRACKETING>;

        $r5 = newarray (java.lang.Object)[5];

        $i1 = i0 - i10;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[1] = $r8;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r5[2] = $r9;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r5[3] = $r10;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r5[4] = $r11;

        specialinvoke $r4.<org.apache.commons.math3.exception.NoBracketingException: void <init>(org.apache.commons.math3.exception.util.Localizable,double,double,double,double,java.lang.Object[])>($r6, d13, d15, d14, d16, $r5);

        throw $r4;
    }

    public static double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction r0;
        double d0, d1, d2;
        double[] $r1;

        r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r1 = staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,double,double,int)>(r0, d0, d1, d2, 1.0, 1.0, 2147483647);

        return $r1;
    }

    public static double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double, int) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NotStrictlyPositiveException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction r0;
        double d0, d1, d2;
        int i0;
        double[] $r1;

        r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        i0 := @parameter4: int;

        $r1 = staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,double,double,int)>(r0, d0, d1, d2, 1.0, 1.0, i0);

        return $r1;
    }

    public static double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction, double, double, double, double, double, int) throws org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction r0;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17, d18, d19;
        int i0, i7;
        byte $b1, $b2, $b3, $b4, $b5, $b6;
        org.apache.commons.math3.exception.NoBracketingException $r1;
        double[] $r2, $r3, $r4;
        org.apache.commons.math3.exception.NotStrictlyPositiveException $r5, $r8;
        org.apache.commons.math3.exception.util.LocalizedFormats $r6, $r12;
        java.lang.Integer $r7;
        java.lang.Double $r9;
        org.apache.commons.math3.exception.NullArgumentException $r10;
        java.lang.Object[] $r11;

        r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        d4 := @parameter5: double;

        i0 := @parameter6: int;

        if r0 != null goto label1;

        $r10 = new org.apache.commons.math3.exception.NullArgumentException;

        $r12 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r11 = newarray (java.lang.Object)[0];

        specialinvoke $r10.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r12, $r11);

        throw $r10;

     label1:
        $b1 = d3 cmpg 0.0;

        if $b1 > 0 goto label2;

        $r8 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        specialinvoke $r8.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(java.lang.Number)>($r9);

        throw $r8;

     label2:
        if i0 > 0 goto label3;

        $r5 = new org.apache.commons.math3.exception.NotStrictlyPositiveException;

        $r6 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats INVALID_MAX_ITERATIONS>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r5.<org.apache.commons.math3.exception.NotStrictlyPositiveException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)>($r6, $r7);

        throw $r5;

     label3:
        staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: void verifySequence(double,double,double)>(d1, d0, d2);

        d15 = d0;

        d16 = d0;

        d17 = #NaN;

        d18 = #NaN;

        d19 = 0.0;

        i7 = 0;

     label4:
        if i7 >= i0 goto label9;

        $b2 = d15 cmpl d1;

        if $b2 > 0 goto label5;

        $b6 = d16 cmpg d2;

        if $b6 >= 0 goto label9;

     label5:
        d5 = d15;

        d6 = d17;

        d7 = d16;

        d8 = d18;

        $d9 = d4 * d19;

        d19 = $d9 + d3;

        $d10 = d0 - d19;

        d15 = staticinvoke <org.apache.commons.math3.util.FastMath: double max(double,double)>($d10, d1);

        $d11 = d0 + d19;

        d16 = staticinvoke <org.apache.commons.math3.util.FastMath: double min(double,double)>($d11, d2);

        d17 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d15);

        d18 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d16);

        if i7 != 0 goto label6;

        $d14 = d17 * d18;

        $b5 = $d14 cmpg 0.0;

        if $b5 > 0 goto label8;

        $r4 = newarray (double)[2];

        $r4[0] = d15;

        $r4[1] = d16;

        return $r4;

     label6:
        $d12 = d17 * d6;

        $b3 = $d12 cmpg 0.0;

        if $b3 > 0 goto label7;

        $r3 = newarray (double)[2];

        $r3[0] = d15;

        $r3[1] = d5;

        return $r3;

     label7:
        $d13 = d18 * d8;

        $b4 = $d13 cmpg 0.0;

        if $b4 > 0 goto label8;

        $r2 = newarray (double)[2];

        $r2[0] = d7;

        $r2[1] = d16;

        return $r2;

     label8:
        i7 = i7 + 1;

        goto label4;

     label9:
        $r1 = new org.apache.commons.math3.exception.NoBracketingException;

        specialinvoke $r1.<org.apache.commons.math3.exception.NoBracketingException: void <init>(double,double,double,double)>(d15, d16, d17, d18);

        throw $r1;
    }

    public static double midpoint(double, double)
    {
        double d0, d1, $d2, $d3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = d0 + d1;

        $d3 = $d2 * 0.5;

        return $d3;
    }

    public static boolean isBracketing(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException
    {
        org.apache.commons.math3.analysis.UnivariateFunction r0;
        double d0, d1, d2, d3;
        byte $b0, $b1, $b2, $b3;
        org.apache.commons.math3.exception.NullArgumentException $r1;
        java.lang.Object[] $r2;
        org.apache.commons.math3.exception.util.LocalizedFormats $r3;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        if r0 != null goto label1;

        $r1 = new org.apache.commons.math3.exception.NullArgumentException;

        $r3 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r2 = newarray (java.lang.Object)[0];

        specialinvoke $r1.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r3, $r2);

        throw $r1;

     label1:
        d2 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d0);

        d3 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d1);

        $b0 = d2 cmpl 0.0;

        if $b0 < 0 goto label2;

        $b3 = d3 cmpg 0.0;

        if $b3 <= 0 goto label3;

     label2:
        $b1 = d2 cmpg 0.0;

        if $b1 > 0 goto label4;

        $b2 = d3 cmpl 0.0;

        if $b2 < 0 goto label4;

     label3:
        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public static boolean isSequence(double, double, double)
    {
        double d0, d1, d2;
        byte $b0, $b1;
        boolean $z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $b0 = d0 cmpg d1;

        if $b0 >= 0 goto label1;

        $b1 = d1 cmpg d2;

        if $b1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void verifyInterval(double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException
    {
        double d0, d1;
        byte $b0;
        org.apache.commons.math3.exception.NumberIsTooLargeException $r0;
        org.apache.commons.math3.exception.util.LocalizedFormats $r1;
        java.lang.Double $r2, $r3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $b0 = d0 cmpl d1;

        if $b0 < 0 goto label1;

        $r0 = new org.apache.commons.math3.exception.NumberIsTooLargeException;

        $r1 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats ENDPOINTS_NOT_AN_INTERVAL>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        specialinvoke $r0.<org.apache.commons.math3.exception.NumberIsTooLargeException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)>($r1, $r2, $r3, 0);

        throw $r0;

     label1:
        return;
    }

    public static void verifySequence(double, double, double) throws org.apache.commons.math3.exception.NumberIsTooLargeException
    {
        double d0, d1, d2;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: void verifyInterval(double,double)>(d0, d1);

        staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: void verifyInterval(double,double)>(d1, d2);

        return;
    }

    public static void verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction, double, double) throws org.apache.commons.math3.exception.NullArgumentException, org.apache.commons.math3.exception.NoBracketingException
    {
        org.apache.commons.math3.analysis.UnivariateFunction r0;
        double d0, d1, $d2, $d3;
        boolean $z0;
        org.apache.commons.math3.exception.NoBracketingException $r1;
        org.apache.commons.math3.exception.NullArgumentException $r2;
        java.lang.Object[] $r3;
        org.apache.commons.math3.exception.util.LocalizedFormats $r4;

        r0 := @parameter0: org.apache.commons.math3.analysis.UnivariateFunction;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        if r0 != null goto label1;

        $r2 = new org.apache.commons.math3.exception.NullArgumentException;

        $r4 = <org.apache.commons.math3.exception.util.LocalizedFormats: org.apache.commons.math3.exception.util.LocalizedFormats FUNCTION>;

        $r3 = newarray (java.lang.Object)[0];

        specialinvoke $r2.<org.apache.commons.math3.exception.NullArgumentException: void <init>(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])>($r4, $r3);

        throw $r2;

     label1:
        staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: void verifyInterval(double,double)>(d0, d1);

        $z0 = staticinvoke <org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils: boolean isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)>(r0, d0, d1);

        if $z0 != 0 goto label2;

        $r1 = new org.apache.commons.math3.exception.NoBracketingException;

        $d2 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d0);

        $d3 = interfaceinvoke r0.<org.apache.commons.math3.analysis.UnivariateFunction: double value(double)>(d1);

        specialinvoke $r1.<org.apache.commons.math3.exception.NoBracketingException: void <init>(double,double,double,double)>(d0, d1, $d2, $d3);

        throw $r1;

     label2:
        return;
    }
}
