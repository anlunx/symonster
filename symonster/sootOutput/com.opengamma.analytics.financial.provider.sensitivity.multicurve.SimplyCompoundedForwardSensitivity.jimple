public class com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity extends com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity
{

    public void <init>(double, double, double, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity r0;
        double d0, d1, d2, d3;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.ForwardSensitivity: void <init>(double,double,double,double)>(d0, d1, d2, d3);

        return;
    }

    public double derivativeToYieldStart(double, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: double getStartTime()>();

        $d3 = neg $d2;

        $d4 = $d3 * d0;

        $d5 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: double getAccrualFactor()>();

        $d6 = d1 * $d5;

        $d7 = $d4 / $d6;

        return $d7;
    }

    public double derivativeToYieldEnd(double, double)
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: double getEndTime()>();

        $d3 = $d2 * d0;

        $d4 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: double getAccrualFactor()>();

        $d5 = d1 * $d4;

        $d6 = $d3 / $d5;

        return $d6;
    }

    public java.lang.String toString()
    {
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        double $d0, $d1, $d2, $d3;
        java.lang.String $r11;

        r0 := @this: com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ForwardSensitivity[start=");

        $d0 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: double getStartTime()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", end=");

        $d1 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: double getEndTime()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", af=");

        $d2 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: double getAccrualFactor()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value=");

        $d3 = virtualinvoke r0.<com.opengamma.analytics.financial.provider.sensitivity.multicurve.SimplyCompoundedForwardSensitivity: double getValue()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
