public class com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder extends com.opengamma.analytics.math.rootfinding.RealSingleRootFinder
{
    private static final int MAX_ITER;
    private final org.apache.commons.math.analysis.solvers.RiddersSolver _ridder;

    public void <init>()
    {
        com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder r0;

        r0 := @this: com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder;

        specialinvoke r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: void <init>(double)>(1.0E-15);

        return;
    }

    public void <init>(double)
    {
        com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder r0;
        double d0;
        org.apache.commons.math.analysis.solvers.RiddersSolver $r1, $r2, $r3;

        r0 := @this: com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder;

        d0 := @parameter0: double;

        specialinvoke r0.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: void <init>()>();

        $r1 = new org.apache.commons.math.analysis.solvers.RiddersSolver;

        specialinvoke $r1.<org.apache.commons.math.analysis.solvers.RiddersSolver: void <init>()>();

        r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: org.apache.commons.math.analysis.solvers.RiddersSolver _ridder> = $r1;

        $r2 = r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: org.apache.commons.math.analysis.solvers.RiddersSolver _ridder>;

        virtualinvoke $r2.<org.apache.commons.math.analysis.solvers.RiddersSolver: void setFunctionValueAccuracy(double)>(d0);

        $r3 = r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: org.apache.commons.math.analysis.solvers.RiddersSolver _ridder>;

        virtualinvoke $r3.<org.apache.commons.math.analysis.solvers.RiddersSolver: void setMaximalIterationCount(int)>(10000);

        return;
    }

    public void <init>(double, double)
    {
        com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder r0;
        double d0, d1;
        org.apache.commons.math.analysis.solvers.RiddersSolver $r1, $r2, $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<com.opengamma.analytics.math.rootfinding.RealSingleRootFinder: void <init>()>();

        $r1 = new org.apache.commons.math.analysis.solvers.RiddersSolver;

        specialinvoke $r1.<org.apache.commons.math.analysis.solvers.RiddersSolver: void <init>()>();

        r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: org.apache.commons.math.analysis.solvers.RiddersSolver _ridder> = $r1;

        $r2 = r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: org.apache.commons.math.analysis.solvers.RiddersSolver _ridder>;

        virtualinvoke $r2.<org.apache.commons.math.analysis.solvers.RiddersSolver: void setAbsoluteAccuracy(double)>(d1);

        $r3 = r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: org.apache.commons.math.analysis.solvers.RiddersSolver _ridder>;

        virtualinvoke $r3.<org.apache.commons.math.analysis.solvers.RiddersSolver: void setFunctionValueAccuracy(double)>(d0);

        $r4 = r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: org.apache.commons.math.analysis.solvers.RiddersSolver _ridder>;

        virtualinvoke $r4.<org.apache.commons.math.analysis.solvers.RiddersSolver: void setMaximalIterationCount(int)>(10000);

        return;
    }

    public java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D, java.lang.Double, java.lang.Double)
    {
        com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Double r2, r3, $r6;
        org.apache.commons.math.analysis.UnivariateRealFunction r4;
        org.apache.commons.math.analysis.solvers.RiddersSolver $r5;
        double $d0, $d1, $d2;
        org.apache.commons.math.MaxIterationsExceededException $r7;
        com.opengamma.analytics.math.MathException $r8, $r10;
        org.apache.commons.math.FunctionEvaluationException $r9;

        r0 := @this: com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Double;

        r3 := @parameter2: java.lang.Double;

        virtualinvoke r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: void checkInputs(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>(r1, r2, r3);

        r4 = staticinvoke <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.analysis.UnivariateRealFunction wrapUnivariate(com.opengamma.analytics.math.function.Function1D)>(r1);

     label1:
        $r5 = r0.<com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: org.apache.commons.math.analysis.solvers.RiddersSolver _ridder>;

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke r3.<java.lang.Double: double doubleValue()>();

        $d2 = virtualinvoke $r5.<org.apache.commons.math.analysis.solvers.RiddersSolver: double solve(org.apache.commons.math.analysis.UnivariateRealFunction,double,double)>(r4, $d0, $d1);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r8.<com.opengamma.analytics.math.MathException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        $r9 := @caughtexception;

        $r10 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r10.<com.opengamma.analytics.math.MathException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch org.apache.commons.math.MaxIterationsExceededException from label1 to label2 with label3;
        catch org.apache.commons.math.FunctionEvaluationException from label1 to label2 with label4;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder: int MAX_ITER> = 10000;

        return;
    }
}
