public class com.opengamma.analytics.math.minimization.BrentMinimizer1D extends java.lang.Object implements com.opengamma.analytics.math.minimization.ScalarMinimizer
{
    private static final org.apache.commons.math.optimization.GoalType MINIMIZE;
    private static final org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer OPTIMIZER;

    public void <init>()
    {
        com.opengamma.analytics.math.minimization.BrentMinimizer1D r0;

        r0 := @this: com.opengamma.analytics.math.minimization.BrentMinimizer1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double minimize(com.opengamma.analytics.math.function.Function1D, double, double, double)
    {
        com.opengamma.analytics.math.minimization.BrentMinimizer1D r0;
        com.opengamma.analytics.math.function.Function1D r1;
        double d0, d1, d2, $d3;
        org.apache.commons.math.analysis.UnivariateRealFunction r2;
        org.apache.commons.math.optimization.GoalType $r3;
        org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer $r4;
        org.apache.commons.math.FunctionEvaluationException $r5;
        com.opengamma.analytics.math.MathException $r6, $r8;
        org.apache.commons.math.ConvergenceException $r7;

        r0 := @this: com.opengamma.analytics.math.minimization.BrentMinimizer1D;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        r2 = staticinvoke <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.analysis.UnivariateRealFunction wrapUnivariate(com.opengamma.analytics.math.function.Function1D)>(r1);

     label1:
        $r4 = <com.opengamma.analytics.math.minimization.BrentMinimizer1D: org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer OPTIMIZER>;

        $r3 = <com.opengamma.analytics.math.minimization.BrentMinimizer1D: org.apache.commons.math.optimization.GoalType MINIMIZE>;

        $d3 = virtualinvoke $r4.<org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer: double optimize(org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.optimization.GoalType,double,double,double)>(r2, $r3, d1, d2, d0);

     label2:
        return $d3;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r6.<com.opengamma.analytics.math.MathException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label4:
        $r7 := @caughtexception;

        $r8 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r8.<com.opengamma.analytics.math.MathException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch org.apache.commons.math.FunctionEvaluationException from label1 to label2 with label3;
        catch org.apache.commons.math.ConvergenceException from label1 to label2 with label4;
    }

    public java.lang.Double minimize(com.opengamma.analytics.math.function.Function1D, java.lang.Double)
    {
        com.opengamma.analytics.math.minimization.BrentMinimizer1D r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Double r2, $r6;
        org.apache.commons.math.analysis.UnivariateRealFunction r3;
        org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer $r4;
        org.apache.commons.math.optimization.GoalType $r5;
        double $d0, $d1;
        org.apache.commons.math.ConvergenceException $r7;
        com.opengamma.analytics.math.MathException $r8, $r10;
        org.apache.commons.math.FunctionEvaluationException $r9;

        r0 := @this: com.opengamma.analytics.math.minimization.BrentMinimizer1D;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "function");

        r3 = staticinvoke <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.analysis.UnivariateRealFunction wrapUnivariate(com.opengamma.analytics.math.function.Function1D)>(r1);

     label1:
        $r4 = <com.opengamma.analytics.math.minimization.BrentMinimizer1D: org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer OPTIMIZER>;

        $r5 = <com.opengamma.analytics.math.minimization.BrentMinimizer1D: org.apache.commons.math.optimization.GoalType MINIMIZE>;

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke $r4.<org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer: double optimize(org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.optimization.GoalType,double,double,double)>(r3, $r5, -1.7976931348623157E308, 1.7976931348623157E308, $d0);

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

     label2:
        return $r6;

     label3:
        $r9 := @caughtexception;

        $r10 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r10.<com.opengamma.analytics.math.MathException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

        $r8 = new com.opengamma.analytics.math.MathException;

        specialinvoke $r8.<com.opengamma.analytics.math.MathException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch org.apache.commons.math.FunctionEvaluationException from label1 to label2 with label3;
        catch org.apache.commons.math.ConvergenceException from label1 to label2 with label4;
    }

    public volatile java.lang.Object minimize(com.opengamma.analytics.math.function.Function1D, java.lang.Object)
    {
        com.opengamma.analytics.math.minimization.BrentMinimizer1D r0;
        com.opengamma.analytics.math.function.Function1D r1;
        java.lang.Object r2;
        java.lang.Double $r3, $r4;

        r0 := @this: com.opengamma.analytics.math.minimization.BrentMinimizer1D;

        r1 := @parameter0: com.opengamma.analytics.math.function.Function1D;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Double) r2;

        $r4 = virtualinvoke r0.<com.opengamma.analytics.math.minimization.BrentMinimizer1D: java.lang.Double minimize(com.opengamma.analytics.math.function.Function1D,java.lang.Double)>(r1, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.commons.math.optimization.GoalType $r0;
        org.apache.commons.math.optimization.univariate.BrentOptimizer $r1;

        $r0 = <org.apache.commons.math.optimization.GoalType: org.apache.commons.math.optimization.GoalType MINIMIZE>;

        <com.opengamma.analytics.math.minimization.BrentMinimizer1D: org.apache.commons.math.optimization.GoalType MINIMIZE> = $r0;

        $r1 = new org.apache.commons.math.optimization.univariate.BrentOptimizer;

        specialinvoke $r1.<org.apache.commons.math.optimization.univariate.BrentOptimizer: void <init>()>();

        <com.opengamma.analytics.math.minimization.BrentMinimizer1D: org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer OPTIMIZER> = $r1;

        return;
    }
}
