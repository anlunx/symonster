public class com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D extends com.opengamma.analytics.math.interpolation.Interpolator1D
{
    private static final long serialVersionUID;
    private final com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D _interpolator;
    private final com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D _func;
    private static final double SMALL;

    public void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D)
    {
        com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D r1;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r2;

        r0 := @this: com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.Interpolator1D;

        $r2 = new com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D;

        specialinvoke $r2.<com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D: void <init>()>();

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D,com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D)>(r1, $r2);

        return;
    }

    public void <init>(com.opengamma.analytics.math.interpolation.Interpolator1D, com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D)
    {
        com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D r0;
        com.opengamma.analytics.math.interpolation.Interpolator1D r1;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D r2;
        boolean $z0;
        com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D $r5;

        r0 := @this: com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.Interpolator1D;

        r2 := @parameter1: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D;

        specialinvoke r0.<com.opengamma.analytics.math.interpolation.Interpolator1D: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "interpolator");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "func");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "This interpolator should be used with ProductPiecewisePolynomialInterpolator1D");

        $r5 = (com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D) r1;

        r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D _interpolator> = $r5;

        r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D _func> = r2;

        return;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D _interpolator>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundle(double[],double[])>(r1, r2);

        return $r4;
    }

    public com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[], double[])
    {
        com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D r0;
        double[] r1, r2;
        com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D $r3;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D _interpolator>;

        $r4 = virtualinvoke $r3.<com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle getDataBundleFromSortedArrays(double[],double[])>(r1, r2);

        return $r4;
    }

    public java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r4, $r7, $r8;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r3;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;
        boolean $z0, $z1;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r5;
        com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D $r6;

        r0 := @this: com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r4 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstKey()>();

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpg $d1;

        if $b0 < 0 goto label1;

        $d2 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r8 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastKey()>();

        $d3 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $b1 = $d2 cmpl $d3;

        if $b1 <= 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "value was within data range");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle) r1;

        $r6 = r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D _interpolator>;

        $r5 = r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D _func>;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle,java.lang.Double,com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D,double)>(r3, r2, $r5, 1.0E-14);

        return $r7;
    }

    public double firstDerivative(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r4, $r7;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r3;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b0, $b1;
        boolean $z0, $z1;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r5;
        com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D $r6;

        r0 := @this: com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r4 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstKey()>();

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpg $d1;

        if $b0 < 0 goto label1;

        $d3 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r7 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastKey()>();

        $d4 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $b1 = $d3 cmpl $d4;

        if $b1 <= 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "value was within data range");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle) r1;

        $r6 = r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D _interpolator>;

        $r5 = r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D _func>;

        $d2 = virtualinvoke $r6.<com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D: double firstDerivative(com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle,java.lang.Double,com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D,double)>(r3, r2, $r5, 1.0E-14);

        return $d2;
    }

    public double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2, $r4, $r8;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle r3;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;
        boolean $z0, $z1;
        com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D $r5;
        com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D $r6;
        double[] $r7;

        r0 := @this: com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r1, "data");

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>(r2, "value");

        $d0 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r4 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double firstKey()>();

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpg $d1;

        if $b0 < 0 goto label1;

        $d2 = virtualinvoke r2.<java.lang.Double: double doubleValue()>();

        $r8 = interfaceinvoke r1.<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle: java.lang.Double lastKey()>();

        $d3 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $b1 = $d2 cmpl $d3;

        if $b1 <= 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z1, "value was within data range");

        $z0 = r1 instanceof com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle;

        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean)>($z0);

        r3 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle) r1;

        $r6 = r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D _interpolator>;

        $r5 = r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D _func>;

        $r7 = virtualinvoke $r6.<com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D: double[] getNodeSensitivitiesForValue(com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle,java.lang.Double,com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D,double)>(r3, r2, $r5, 1.0E-14);

        return $r7;
    }

    protected double[] getFiniteDifferenceSensitivities(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle, java.lang.Double)
    {
        com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D r0;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle r1;
        java.lang.Double r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        r1 := @parameter0: com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle;

        r2 := @parameter1: java.lang.Double;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Use the method, getNodeSensitivitiesForValue");

        throw $r3;
    }

    public volatile java.lang.Double interpolate(java.lang.Object, java.lang.Object)
    {
        com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D r0;
        java.lang.Object r1, r2;
        java.lang.Double $r3, $r5;
        com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle $r4;

        r0 := @this: com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle) r1;

        $r3 = (java.lang.Double) r2;

        $r5 = virtualinvoke r0.<com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: java.lang.Double interpolate(com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,java.lang.Double)>($r4, $r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: double SMALL> = 1.0E-14;

        <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D: long serialVersionUID> = 1L;

        return;
    }
}
