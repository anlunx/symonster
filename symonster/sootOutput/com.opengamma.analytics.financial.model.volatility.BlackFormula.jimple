public class com.opengamma.analytics.financial.model.volatility.BlackFormula extends java.lang.Object
{
    private double _forward;
    private double _strike;
    private double _expiry;
    private java.lang.Double _lognormalVol;
    private java.lang.Double _fwdMtm;
    private boolean _isCall;

    public void <init>(double, double, double, java.lang.Double, java.lang.Double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        double d0, d1, d2;
        java.lang.Double r1, r2;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r1 := @parameter3: java.lang.Double;

        r2 := @parameter4: java.lang.Double;

        z0 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward> = d0;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike> = d1;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry> = d2;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol> = r1;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm> = r2;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: boolean _isCall> = z0;

        return;
    }

    public final double computePrice()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        java.lang.Double $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r1, "Black Volatility parameter, _vol, has not been set.");

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $d3 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: boolean _isCall>;

        $d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double price(double,double,double,double,boolean)>($d0, $d1, $d2, $d3, $z0);

        return $d4;
    }

    public final double computeForwardDelta()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        java.lang.Double $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r1, "Black Volatility parameter, _vol, has not been set.");

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $d3 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: boolean _isCall>;

        $d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double delta(double,double,double,double,boolean)>($d0, $d1, $d2, $d3, $z0);

        return $d4;
    }

    public final java.lang.Double computeStrikeImpliedByForwardDelta(double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        double d0, $d1, $d2, $d3, $d4;
        boolean z0;
        java.lang.Double $r1, $r2, $r3;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        d0 := @parameter0: double;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r1, "Black Volatility parameter, _vol, has not been set.");

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $d3 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double strikeForDelta(double,double,double,double,boolean)>($d1, d0, $d2, $d3, z0);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        return $r3;
    }

    public final double computeStrikeSensitivity()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        java.lang.Double $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r1, "Black Volatility parameter, _vol, has not been set.");

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $d3 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: boolean _isCall>;

        $d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double dualDelta(double,double,double,double,boolean)>($d0, $d1, $d2, $d3, $z0);

        return $d4;
    }

    public final double computeImpliedVolatility()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        java.lang.Double $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm>;

        staticinvoke <org.apache.commons.lang.Validate: void notNull(java.lang.Object,java.lang.String)>($r1, "price is not set. Cannot compute implied volatility. call setMtm first");

        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm>;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: boolean _isCall>;

        $d4 = staticinvoke <com.opengamma.analytics.financial.model.volatility.BlackFormulaRepository: double impliedVolatility(double,double,double,double,boolean)>($d0, $d3, $d2, $d1, $z0);

        return $d4;
    }

    public final java.lang.Double computeStrikeImpliedByDeltaViaRootFinding(double, boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0, $r13;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        boolean z0, $z1;
        byte $b0, $b1, $b2, $b3;
        java.lang.Double $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r14, $r15;
        com.opengamma.analytics.math.MathException $r10;
        java.io.PrintStream $r11, $r12;
        com.opengamma.analytics.financial.model.volatility.BlackFormula$1 $r17;
        com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder $r18;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        d0 := @parameter0: double;

        z0 := @parameter1: boolean;

     label1:
        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label2;

        $b3 = d0 cmpg 1.0;

        if $b3 > 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "Delta must be between 0.0 and 1.0");

        $r13 = new com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $d11 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        $d12 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        $d13 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        $r14 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $r15 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm>;

        specialinvoke $r13.<com.opengamma.analytics.financial.model.volatility.BlackFormula: void <init>(double,double,double,java.lang.Double,java.lang.Double,boolean)>($d11, $d12, $d13, $r14, $r15, z0);

        $r17 = new com.opengamma.analytics.financial.model.volatility.BlackFormula$1;

        specialinvoke $r17.<com.opengamma.analytics.financial.model.volatility.BlackFormula$1: void <init>(com.opengamma.analytics.financial.model.volatility.BlackFormula,com.opengamma.analytics.financial.model.volatility.BlackFormula,double,boolean)>(r0, $r13, d0, z0);

        $r18 = new com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder;

        specialinvoke $r18.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: void <init>()>();

        if z0 == 0 goto label4;

        $b2 = d0 cmpl 0.5;

        if $b2 >= 0 goto label5;

     label4:
        if z0 != 0 goto label7;

        $b1 = d0 cmpg 0.5;

        if $b1 > 0 goto label7;

     label5:
        $d3 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        $r5 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $d4 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $d5 = 0.5 * $d4;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $d6 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        $d8 = $d5 * $d6;

        $d7 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        $d9 = $d8 * $d7;

        $d10 = staticinvoke <java.lang.Math: double exp(double)>($d9);

        d1 = $d3 * $d10;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r9 = virtualinvoke $r18.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double,java.lang.Double)>($r17, $r7, $r8);

     label6:
        return $r9;

     label7:
        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r4 = virtualinvoke $r18.<com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder: java.lang.Double getRoot(com.opengamma.analytics.math.function.Function1D,java.lang.Double)>($r17, $r3);

     label8:
        return $r4;

     label9:
        $r10 := @caughtexception;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.Object)>($r10);

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Failed to compute ImpliedVolatility");

        return null;

        catch com.opengamma.analytics.math.MathException from label1 to label6 with label9;
        catch com.opengamma.analytics.math.MathException from label7 to label8 with label9;
    }

    public final double getForward()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        return $d0;
    }

    public final void setForward(double)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        d0 := @parameter0: double;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward> = d0;

        return;
    }

    public final double getStrike()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        return $d0;
    }

    public final void setStrike(double)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        d0 := @parameter0: double;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike> = d0;

        return;
    }

    public final double getExpiry()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        double $d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        return $d0;
    }

    public final void setExpiry(double)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        double d0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        d0 := @parameter0: double;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry> = d0;

        return;
    }

    public final java.lang.Double getLognormalVol()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        java.lang.Double $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        return $r1;
    }

    public final void setLognormalVol(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        java.lang.Double r1;
        double $d0, $d1;
        byte $b0;
        boolean $z0, $z1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        r1 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 > 0 goto label1;

        $d1 = virtualinvoke r1.<java.lang.Double: double doubleValue()>();

        $z0 = staticinvoke <com.opengamma.util.CompareUtils: boolean closeEquals(double,double)>($d1, 0.0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z1, "Cannot set vol to be negative.");

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol> = r1;

        return;
    }

    public final java.lang.Double getFwdMtm()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        java.lang.Double $r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm>;

        return $r1;
    }

    public final void setMtm(java.lang.Double)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        java.lang.Double r1;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        r1 := @parameter0: java.lang.Double;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm> = r1;

        return;
    }

    public final void setIsCall(boolean)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        boolean z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        z0 := @parameter0: boolean;

        r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: boolean _isCall> = z0;

        return;
    }

    public int hashCode()
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0;
        double $d0, $d1, $d2;
        long $l1, $l2, $l5, $l6, $l12, $l13, l17, l19, l27;
        int $i3, $i4, $i7, $i8, $i9, $i10, $i11, $i14, $i15, i18, i20, $i21, i22, i24, $i25, i26, i28;
        java.lang.Double $r1, $r2, $r3, $r4;
        boolean $z0;
        short $s23;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        l17 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i4 = 31 * 1;

        $l1 = l17 >>> 32;

        $l2 = l17 ^ $l1;

        $i3 = (int) $l2;

        i18 = $i4 + $i3;

        $d1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        l19 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $i8 = 31 * i18;

        $l5 = l19 >>> 32;

        $l6 = l19 ^ $l5;

        $i7 = (int) $l6;

        i20 = $i8 + $i7;

        $i9 = 31 * i20;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm>;

        if $r1 != null goto label1;

        $i21 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm>;

        $i21 = virtualinvoke $r2.<java.lang.Double: int hashCode()>();

     label2:
        i22 = $i9 + $i21;

        $i10 = 31 * i22;

        $z0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: boolean _isCall>;

        if $z0 == 0 goto label3;

        $s23 = 1231;

        goto label4;

     label3:
        $s23 = 1237;

     label4:
        i24 = $i10 + $s23;

        $i11 = 31 * i24;

        $r3 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        if $r3 != null goto label5;

        $i25 = 0;

        goto label6;

     label5:
        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $i25 = virtualinvoke $r4.<java.lang.Double: int hashCode()>();

     label6:
        i26 = $i11 + $i25;

        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        l27 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $i15 = 31 * i26;

        $l12 = l27 >>> 32;

        $l13 = l27 ^ $l12;

        $i14 = (int) $l13;

        i28 = $i15 + $i14;

        return i28;
    }

    public boolean equals(java.lang.Object)
    {
        com.opengamma.analytics.financial.model.volatility.BlackFormula r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        long $l0, $l1, $l3, $l4, $l6, $l7;
        byte $b2, $b5, $b8;
        java.lang.Double $r3, $r4, $r5, $r6;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.BlackFormula;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.opengamma.analytics.financial.model.volatility.BlackFormula;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.opengamma.analytics.financial.model.volatility.BlackFormula) r1;

        $d0 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d1 = r2.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _expiry>;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d1);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label3;

        return 0;

     label3:
        $d2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        $d3 = r2.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _forward>;

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label4;

        return 0;

     label4:
        $d4 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        $l6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d4);

        $d5 = r2.<com.opengamma.analytics.financial.model.volatility.BlackFormula: double _strike>;

        $l7 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d5);

        $b8 = $l6 cmp $l7;

        if $b8 == 0 goto label5;

        return 0;

     label5:
        $z2 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: boolean _isCall>;

        $z1 = r2.<com.opengamma.analytics.financial.model.volatility.BlackFormula: boolean _isCall>;

        if $z2 == $z1 goto label6;

        return 0;

     label6:
        $r4 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm>;

        $r3 = r2.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _fwdMtm>;

        $z3 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z3 != 0 goto label7;

        return 0;

     label7:
        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $r5 = r2.<com.opengamma.analytics.financial.model.volatility.BlackFormula: java.lang.Double _lognormalVol>;

        $z4 = staticinvoke <org.apache.commons.lang.ObjectUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z4 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }
}
