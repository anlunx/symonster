public class org.apache.commons.math3.analysis.interpolation.NevilleInterpolator extends java.lang.Object implements org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator, java.io.Serializable
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.math3.analysis.interpolation.NevilleInterpolator r0;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.NevilleInterpolator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm interpolate(double[], double[]) throws org.apache.commons.math3.exception.DimensionMismatchException, org.apache.commons.math3.exception.NumberIsTooSmallException, org.apache.commons.math3.exception.NonMonotonicSequenceException
    {
        org.apache.commons.math3.analysis.interpolation.NevilleInterpolator r0;
        double[] r1, r2;
        org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm $r3;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.NevilleInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = new org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm;

        specialinvoke $r3.<org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm: void <init>(double[],double[])>(r1, r2);

        return $r3;
    }

    public volatile org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[], double[]) throws org.apache.commons.math3.exception.MathIllegalArgumentException, org.apache.commons.math3.exception.DimensionMismatchException
    {
        org.apache.commons.math3.analysis.interpolation.NevilleInterpolator r0;
        double[] r1, r2;
        org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm $r3;

        r0 := @this: org.apache.commons.math3.analysis.interpolation.NevilleInterpolator;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $r3 = virtualinvoke r0.<org.apache.commons.math3.analysis.interpolation.NevilleInterpolator: org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm interpolate(double[],double[])>(r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.math3.analysis.interpolation.NevilleInterpolator: long serialVersionUID> = 3003707660147873733L;

        return;
    }
}
