public final class com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod extends java.lang.Object
{
    private static final com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod INSTANCE;

    public static com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod getInstance()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod $r0;

        $r0 = <com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod INSTANCE>;

        return $r0;
    }

    private void <init>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod r0;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.opengamma.util.money.MultipleCurrencyAmount presentValue(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d1, $d2, $d3, $d4, $d5;
        com.opengamma.util.money.Currency $r5, $r7;
        java.lang.Double $r6;
        com.opengamma.util.money.MultipleCurrencyAmount $r8;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: com.opengamma.util.money.Currency getCurrency()>();

        $d2 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: double getPaymentTime()>();

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r5, $r6);

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: double getNotionalAccrued()>();

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: double getNotional()>();

        $d5 = $d3 - $d4;

        d1 = $d5 * d0;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: com.opengamma.util.money.Currency getCurrency()>();

        $r8 = staticinvoke <com.opengamma.util.money.MultipleCurrencyAmount: com.opengamma.util.money.MultipleCurrencyAmount of(com.opengamma.util.money.Currency,double)>($r7, d1);

        return $r8;
    }

    public com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity presentValueCurveSensitivity(com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding, com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface)
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod r0;
        com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding r1;
        com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface r2;
        double d0, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.opengamma.util.money.Currency $r8, $r13, $r17;
        java.lang.Double $r9;
        java.util.HashMap $r10, $r16;
        java.util.ArrayList $r11;
        com.opengamma.util.tuple.DoublesPair $r12;
        java.lang.String $r14;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity $r18;
        com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity $r19;

        r0 := @this: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod;

        r1 := @parameter0: com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding;

        r2 := @parameter1: com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "Coupon");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "Multi-curves provider");

        $r8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: com.opengamma.util.money.Currency getCurrency()>();

        $d3 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: double getPaymentTime()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        d0 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: double getDiscountFactor(com.opengamma.util.money.Currency,java.lang.Double)>($r8, $r9);

        $d4 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: double getNotionalAccrued()>();

        $d5 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: double getNotional()>();

        $d6 = $d4 - $d5;

        d2 = $d6 * 1.0;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        $d7 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: double getPaymentTime()>();

        $d8 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: double getPaymentTime()>();

        $d9 = neg $d8;

        $d10 = $d9 * d0;

        $d11 = $d10 * d2;

        $r12 = staticinvoke <com.opengamma.util.tuple.DoublesPair: com.opengamma.util.tuple.DoublesPair of(double,double)>($d7, $d11);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: com.opengamma.util.money.Currency getCurrency()>();

        $r14 = interfaceinvoke r2.<com.opengamma.analytics.financial.provider.description.interestrate.MulticurveProviderInterface: java.lang.String getName(com.opengamma.util.money.Currency)>($r13);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r11);

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        $r17 = virtualinvoke r1.<com.opengamma.analytics.financial.interestrate.payments.derivative.CouponFixedCompounding: com.opengamma.util.money.Currency getCurrency()>();

        $r18 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity of(java.util.Map,java.util.Map)>($r10, $r16);

        $r19 = staticinvoke <com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity: com.opengamma.analytics.financial.provider.sensitivity.multicurve.MultipleCurrencyMulticurveSensitivity of(com.opengamma.util.money.Currency,com.opengamma.analytics.financial.provider.sensitivity.multicurve.MulticurveSensitivity)>($r17, $r18);

        return $r19;
    }

    static void <clinit>()
    {
        com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod $r0;

        $r0 = new com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod;

        specialinvoke $r0.<com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod: void <init>()>();

        <com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod: com.opengamma.analytics.financial.interestrate.payments.provider.CouponFixedCompoundingDiscountingMethod INSTANCE> = $r0;

        return;
    }
}
