public class com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider extends java.lang.Object implements com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurfaceProvider
{
    private final double[] _knots;
    private final com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator;

    public void <init>(double[], com.opengamma.analytics.math.interpolation.Interpolator1D)
    {
        com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider r0;
        double[] r1, $r6;
        com.opengamma.analytics.math.interpolation.Interpolator1D r2;
        int i0, $i1, i3;
        java.lang.Object $r5;
        double $d0, $d1;
        byte $b2;
        boolean $z0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider;

        r1 := @parameter0: double[];

        r2 := @parameter1: com.opengamma.analytics.math.interpolation.Interpolator1D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.opengamma.util.ArgumentChecker: double[] notEmpty(double[],java.lang.String)>(r1, "null or empty knotPoints");

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, "null interpolator");

        i0 = lengthof r1;

        i3 = 1;

     label1:
        if i3 >= i0 goto label4;

        $d1 = r1[i3];

        $i1 = i3 - 1;

        $d0 = r1[$i1];

        $b2 = $d1 cmpl $d0;

        if $b2 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.opengamma.util.ArgumentChecker: void isTrue(boolean,java.lang.String)>($z0, "knot points must be strictly ascending");

        i3 = i3 + 1;

        goto label1;

     label4:
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (double[]) $r5;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider: double[] _knots> = $r6;

        r0.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator> = r2;

        return;
    }

    public com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface getVolSurface(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r6;
        double[] $r7, $r8;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r9;
        com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider$1 $r10;
        com.opengamma.analytics.math.surface.FunctionalDoublesSurface $r11;
        com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface $r12;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "modelParameters");

        $r6 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r7 = r0.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider: double[] _knots>;

        $r8 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r9 = r0.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator>;

        specialinvoke $r6.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r7, $r8, $r9, 1);

        $r10 = new com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider$1;

        specialinvoke $r10.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider$1: void <init>(com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider,com.opengamma.analytics.math.curve.InterpolatedDoublesCurve)>(r0, $r6);

        $r11 = new com.opengamma.analytics.math.surface.FunctionalDoublesSurface;

        specialinvoke $r11.<com.opengamma.analytics.math.surface.FunctionalDoublesSurface: void <init>(com.opengamma.analytics.math.function.Function)>($r10);

        $r12 = new com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface;

        specialinvoke $r12.<com.opengamma.analytics.financial.model.volatility.surface.VolatilitySurface: void <init>(com.opengamma.analytics.math.surface.Surface)>($r11);

        return $r12;
    }

    public com.opengamma.analytics.math.surface.Surface getParameterSensitivitySurface(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r5;
        double[] $r6, $r7;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r8;
        com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider$2 $r9;
        com.opengamma.analytics.math.surface.FunctionalSurface $r10;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "modelParameters");

        $r5 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider: double[] _knots>;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator>;

        specialinvoke $r5.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r6, $r7, $r8, 1);

        $r9 = new com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider$2;

        specialinvoke $r9.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider$2: void <init>(com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider,com.opengamma.analytics.math.curve.InterpolatedDoublesCurve)>(r0, $r5);

        $r10 = new com.opengamma.analytics.math.surface.FunctionalSurface;

        specialinvoke $r10.<com.opengamma.analytics.math.surface.FunctionalSurface: void <init>(com.opengamma.analytics.math.function.Function2D)>($r9);

        return $r10;
    }

    public com.opengamma.analytics.math.surface.Surface getVolAndParameterSensitivitySurface(com.opengamma.analytics.math.matrix.DoubleMatrix1D)
    {
        com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider r0;
        com.opengamma.analytics.math.matrix.DoubleMatrix1D r1;
        com.opengamma.analytics.math.curve.InterpolatedDoublesCurve $r5;
        double[] $r6, $r7;
        com.opengamma.analytics.math.interpolation.Interpolator1D $r8;
        com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider$3 $r9;
        com.opengamma.analytics.math.surface.FunctionalSurface $r10;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider;

        r1 := @parameter0: com.opengamma.analytics.math.matrix.DoubleMatrix1D;

        staticinvoke <com.opengamma.util.ArgumentChecker: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, "modelParameters");

        $r5 = new com.opengamma.analytics.math.curve.InterpolatedDoublesCurve;

        $r6 = r0.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider: double[] _knots>;

        $r7 = virtualinvoke r1.<com.opengamma.analytics.math.matrix.DoubleMatrix1D: double[] getData()>();

        $r8 = r0.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider: com.opengamma.analytics.math.interpolation.Interpolator1D _interpolator>;

        specialinvoke $r5.<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve: void <init>(double[],double[],com.opengamma.analytics.math.interpolation.Interpolator1D,boolean)>($r6, $r7, $r8, 1);

        $r9 = new com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider$3;

        specialinvoke $r9.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider$3: void <init>(com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider,com.opengamma.analytics.math.curve.InterpolatedDoublesCurve)>(r0, $r5);

        $r10 = new com.opengamma.analytics.math.surface.FunctionalSurface;

        specialinvoke $r10.<com.opengamma.analytics.math.surface.FunctionalSurface: void <init>(com.opengamma.analytics.math.function.Function2D)>($r9);

        return $r10;
    }

    public int getNumModelParameters()
    {
        com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider r0;
        double[] $r1;
        int $i0;

        r0 := @this: com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider;

        $r1 = r0.<com.opengamma.analytics.financial.model.volatility.surface.InterpolatedVolatilityTermStructureProvider: double[] _knots>;

        $i0 = lengthof $r1;

        return $i0;
    }
}
