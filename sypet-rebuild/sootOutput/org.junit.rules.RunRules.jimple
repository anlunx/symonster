public class org.junit.rules.RunRules extends org.junit.runners.model.Statement
{
    private final org.junit.runners.model.Statement statement;

    public void <init>(org.junit.runners.model.Statement, java.lang.Iterable, org.junit.runner.Description)
    {
        org.junit.rules.RunRules r0;
        org.junit.runners.model.Statement r1, $r4;
        java.lang.Iterable r2;
        org.junit.runner.Description r3;

        r0 := @this: org.junit.rules.RunRules;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.junit.runner.Description;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        $r4 = staticinvoke <org.junit.rules.RunRules: org.junit.runners.model.Statement applyAll(org.junit.runners.model.Statement,java.lang.Iterable,org.junit.runner.Description)>(r1, r2, r3);

        r0.<org.junit.rules.RunRules: org.junit.runners.model.Statement statement> = $r4;

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        org.junit.rules.RunRules r0;
        org.junit.runners.model.Statement $r1;

        r0 := @this: org.junit.rules.RunRules;

        $r1 = r0.<org.junit.rules.RunRules: org.junit.runners.model.Statement statement>;

        virtualinvoke $r1.<org.junit.runners.model.Statement: void evaluate()>();

        return;
    }

    private static org.junit.runners.model.Statement applyAll(org.junit.runners.model.Statement, java.lang.Iterable, org.junit.runner.Description)
    {
        java.lang.Iterable r0;
        org.junit.runner.Description r1;
        java.util.Iterator r2;
        org.junit.rules.TestRule r3;
        boolean $z0;
        java.lang.Object $r4;
        org.junit.runners.model.Statement r5;

        r5 := @parameter0: org.junit.runners.model.Statement;

        r0 := @parameter1: java.lang.Iterable;

        r1 := @parameter2: org.junit.runner.Description;

        r2 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.junit.rules.TestRule) $r4;

        r5 = interfaceinvoke r3.<org.junit.rules.TestRule: org.junit.runners.model.Statement apply(org.junit.runners.model.Statement,org.junit.runner.Description)>(r5, r1);

        goto label1;

     label2:
        return r5;
    }
}
