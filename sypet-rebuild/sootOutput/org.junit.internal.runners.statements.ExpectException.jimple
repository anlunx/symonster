public class org.junit.internal.runners.statements.ExpectException extends org.junit.runners.model.Statement
{
    private org.junit.runners.model.Statement fNext;
    private final java.lang.Class fExpected;

    public void <init>(org.junit.runners.model.Statement, java.lang.Class)
    {
        org.junit.internal.runners.statements.ExpectException r0;
        org.junit.runners.model.Statement r1;
        java.lang.Class r2;

        r0 := @this: org.junit.internal.runners.statements.ExpectException;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        r0.<org.junit.internal.runners.statements.ExpectException: org.junit.runners.model.Statement fNext> = r1;

        r0.<org.junit.internal.runners.statements.ExpectException: java.lang.Class fExpected> = r2;

        return;
    }

    public void evaluate() throws java.lang.Exception
    {
        org.junit.internal.runners.statements.ExpectException r0;
        java.lang.String r1, $r7, $r9, $r16, $r20;
        org.junit.runners.model.Statement $r2;
        java.lang.AssertionError $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r13, $r14, $r17, $r18, $r21, $r22;
        java.lang.Class $r6, $r11, $r12, $r15, $r19;
        java.lang.Throwable $r10;
        boolean $z0, z1;
        java.lang.Exception $r23;
        org.junit.internal.AssumptionViolatedException $r24;

        r0 := @this: org.junit.internal.runners.statements.ExpectException;

        z1 = 0;

     label1:
        $r2 = r0.<org.junit.internal.runners.statements.ExpectException: org.junit.runners.model.Statement fNext>;

        virtualinvoke $r2.<org.junit.runners.model.Statement: void evaluate()>();

        z1 = 1;

     label2:
        goto label5;

     label3:
        $r24 := @caughtexception;

        throw $r24;

     label4:
        $r10 := @caughtexception;

        $r11 = r0.<org.junit.internal.runners.statements.ExpectException: java.lang.Class fExpected>;

        $r12 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r12);

        if $z0 != 0 goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected exception, expected<");

        $r15 = r0.<org.junit.internal.runners.statements.ExpectException: java.lang.Class fExpected>;

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> but was<");

        $r19 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r1 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = new java.lang.Exception;

        specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, $r10);

        throw $r23;

     label5:
        if z1 == 0 goto label6;

        $r3 = new java.lang.AssertionError;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected exception: ");

        $r6 = r0.<org.junit.internal.runners.statements.ExpectException: java.lang.Class fExpected>;

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r3;

     label6:
        return;

        catch org.junit.internal.AssumptionViolatedException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
