public class org.junit.internal.MethodSorter extends java.lang.Object
{
    public static java.util.Comparator DEFAULT;
    public static java.util.Comparator NAME_ASCENDING;

    public static java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.Comparator r1;
        java.lang.reflect.Method[] r2;
        java.lang.'annotation'.Annotation $r3;
        org.junit.FixMethodOrder $r4;

        r0 := @parameter0: java.lang.Class;

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "org/junit/FixMethodOrder");

        $r4 = (org.junit.FixMethodOrder) $r3;

        r1 = staticinvoke <org.junit.internal.MethodSorter: java.util.Comparator getSorter(org.junit.FixMethodOrder)>($r4);

        r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        if r1 == null goto label1;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r2, r1);

     label1:
        return r2;
    }

    private void <init>()
    {
        org.junit.internal.MethodSorter r0;

        r0 := @this: org.junit.internal.MethodSorter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.util.Comparator getSorter(org.junit.FixMethodOrder)
    {
        org.junit.FixMethodOrder r0;
        org.junit.runners.MethodSorters $r1;
        java.util.Comparator $r2, $r3;

        r0 := @parameter0: org.junit.FixMethodOrder;

        if r0 != null goto label1;

        $r3 = <org.junit.internal.MethodSorter: java.util.Comparator DEFAULT>;

        return $r3;

     label1:
        $r1 = interfaceinvoke r0.<org.junit.FixMethodOrder: org.junit.runners.MethodSorters value()>();

        $r2 = virtualinvoke $r1.<org.junit.runners.MethodSorters: java.util.Comparator getComparator()>();

        return $r2;
    }

    static void <clinit>()
    {
        org.junit.internal.MethodSorter$1 $r0;
        org.junit.internal.MethodSorter$2 $r1;

        $r0 = new org.junit.internal.MethodSorter$1;

        specialinvoke $r0.<org.junit.internal.MethodSorter$1: void <init>()>();

        <org.junit.internal.MethodSorter: java.util.Comparator DEFAULT> = $r0;

        $r1 = new org.junit.internal.MethodSorter$2;

        specialinvoke $r1.<org.junit.internal.MethodSorter$2: void <init>()>();

        <org.junit.internal.MethodSorter: java.util.Comparator NAME_ASCENDING> = $r1;

        return;
    }
}
