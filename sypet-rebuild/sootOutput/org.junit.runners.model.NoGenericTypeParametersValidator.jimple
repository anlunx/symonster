class org.junit.runners.model.NoGenericTypeParametersValidator extends java.lang.Object
{
    private final java.lang.reflect.Method fMethod;

    void <init>(java.lang.reflect.Method)
    {
        org.junit.runners.model.NoGenericTypeParametersValidator r0;
        java.lang.reflect.Method r1;

        r0 := @this: org.junit.runners.model.NoGenericTypeParametersValidator;

        r1 := @parameter0: java.lang.reflect.Method;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.junit.runners.model.NoGenericTypeParametersValidator: java.lang.reflect.Method fMethod> = r1;

        return;
    }

    void validate(java.util.List)
    {
        org.junit.runners.model.NoGenericTypeParametersValidator r0;
        java.util.List r1;
        java.lang.reflect.Type[] r2;
        int i0, i1;
        java.lang.reflect.Type r3;
        java.lang.reflect.Method $r4;

        r0 := @this: org.junit.runners.model.NoGenericTypeParametersValidator;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<org.junit.runners.model.NoGenericTypeParametersValidator: java.lang.reflect.Method fMethod>;

        r2 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        specialinvoke r0.<org.junit.runners.model.NoGenericTypeParametersValidator: void validateNoTypeParameterOnType(java.lang.reflect.Type,java.util.List)>(r3, r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void validateNoTypeParameterOnType(java.lang.reflect.Type, java.util.List)
    {
        org.junit.runners.model.NoGenericTypeParametersValidator r0;
        java.lang.reflect.Type r1;
        java.util.List r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.reflect.GenericArrayType $r3;
        java.lang.reflect.WildcardType $r4;
        java.lang.reflect.ParameterizedType $r5;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r13;
        java.lang.reflect.Method $r9;
        java.lang.String $r10, $r14;

        r0 := @this: org.junit.runners.model.NoGenericTypeParametersValidator;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.util.List;

        $z0 = r1 instanceof java.lang.reflect.TypeVariable;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.Exception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r9 = r0.<org.junit.runners.model.NoGenericTypeParametersValidator: java.lang.reflect.Method fMethod>;

        $r10 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() contains unresolved type variable ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>($r14);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label4;

     label1:
        $z1 = r1 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label2;

        $r5 = (java.lang.reflect.ParameterizedType) r1;

        specialinvoke r0.<org.junit.runners.model.NoGenericTypeParametersValidator: void validateNoTypeParameterOnParameterizedType(java.lang.reflect.ParameterizedType,java.util.List)>($r5, r2);

        goto label4;

     label2:
        $z2 = r1 instanceof java.lang.reflect.WildcardType;

        if $z2 == 0 goto label3;

        $r4 = (java.lang.reflect.WildcardType) r1;

        specialinvoke r0.<org.junit.runners.model.NoGenericTypeParametersValidator: void validateNoTypeParameterOnWildcardType(java.lang.reflect.WildcardType,java.util.List)>($r4, r2);

        goto label4;

     label3:
        $z3 = r1 instanceof java.lang.reflect.GenericArrayType;

        if $z3 == 0 goto label4;

        $r3 = (java.lang.reflect.GenericArrayType) r1;

        specialinvoke r0.<org.junit.runners.model.NoGenericTypeParametersValidator: void validateNoTypeParameterOnGenericArrayType(java.lang.reflect.GenericArrayType,java.util.List)>($r3, r2);

     label4:
        return;
    }

    private void validateNoTypeParameterOnParameterizedType(java.lang.reflect.ParameterizedType, java.util.List)
    {
        org.junit.runners.model.NoGenericTypeParametersValidator r0;
        java.lang.reflect.ParameterizedType r1;
        java.util.List r2;
        java.lang.reflect.Type[] r3;
        int i0, i1;
        java.lang.reflect.Type r4;

        r0 := @this: org.junit.runners.model.NoGenericTypeParametersValidator;

        r1 := @parameter0: java.lang.reflect.ParameterizedType;

        r2 := @parameter1: java.util.List;

        r3 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        specialinvoke r0.<org.junit.runners.model.NoGenericTypeParametersValidator: void validateNoTypeParameterOnType(java.lang.reflect.Type,java.util.List)>(r4, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void validateNoTypeParameterOnWildcardType(java.lang.reflect.WildcardType, java.util.List)
    {
        org.junit.runners.model.NoGenericTypeParametersValidator r0;
        java.lang.reflect.WildcardType r1;
        java.util.List r2;
        java.lang.reflect.Type[] r3, r5;
        int i0, i1, i2, i3;
        java.lang.reflect.Type r4, r6;

        r0 := @this: org.junit.runners.model.NoGenericTypeParametersValidator;

        r1 := @parameter0: java.lang.reflect.WildcardType;

        r2 := @parameter1: java.util.List;

        r3 = interfaceinvoke r1.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        specialinvoke r0.<org.junit.runners.model.NoGenericTypeParametersValidator: void validateNoTypeParameterOnType(java.lang.reflect.Type,java.util.List)>(r4, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        r5 = interfaceinvoke r1.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        i2 = lengthof r5;

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        r6 = r5[i3];

        specialinvoke r0.<org.junit.runners.model.NoGenericTypeParametersValidator: void validateNoTypeParameterOnType(java.lang.reflect.Type,java.util.List)>(r6, r2);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }

    private void validateNoTypeParameterOnGenericArrayType(java.lang.reflect.GenericArrayType, java.util.List)
    {
        org.junit.runners.model.NoGenericTypeParametersValidator r0;
        java.lang.reflect.GenericArrayType r1;
        java.util.List r2;
        java.lang.reflect.Type $r3;

        r0 := @this: org.junit.runners.model.NoGenericTypeParametersValidator;

        r1 := @parameter0: java.lang.reflect.GenericArrayType;

        r2 := @parameter1: java.util.List;

        $r3 = interfaceinvoke r1.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        specialinvoke r0.<org.junit.runners.model.NoGenericTypeParametersValidator: void validateNoTypeParameterOnType(java.lang.reflect.Type,java.util.List)>($r3, r2);

        return;
    }
}
