public class junit.framework.JUnit4TestAdapterCache extends java.util.HashMap
{
    private static final long serialVersionUID;
    private static final junit.framework.JUnit4TestAdapterCache fInstance;

    public void <init>()
    {
        junit.framework.JUnit4TestAdapterCache r0;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        specialinvoke r0.<java.util.HashMap: void <init>()>();

        return;
    }

    public static junit.framework.JUnit4TestAdapterCache getDefault()
    {
        junit.framework.JUnit4TestAdapterCache $r0;

        $r0 = <junit.framework.JUnit4TestAdapterCache: junit.framework.JUnit4TestAdapterCache fInstance>;

        return $r0;
    }

    public junit.framework.Test asTest(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapterCache r0;
        org.junit.runner.Description r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        junit.framework.Test $r3, $r4, $r6;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        r1 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke r1.<org.junit.runner.Description: boolean isSuite()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test createTest(org.junit.runner.Description)>(r1);

        return $r6;

     label1:
        $z1 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r4 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test createTest(org.junit.runner.Description)>(r1);

        virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label2:
        $r2 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (junit.framework.Test) $r2;

        return $r3;
    }

    junit.framework.Test createTest(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapterCache r0;
        org.junit.runner.Description r1, r4;
        java.util.Iterator r3;
        boolean $z0, $z1;
        junit.framework.TestSuite $r5;
        java.lang.String $r6;
        java.util.ArrayList $r7;
        java.lang.Object $r8;
        junit.framework.Test $r9;
        junit.framework.JUnit4TestCaseFacade $r10;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        r1 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke r1.<org.junit.runner.Description: boolean isTest()>();

        if $z0 == 0 goto label1;

        $r10 = new junit.framework.JUnit4TestCaseFacade;

        specialinvoke $r10.<junit.framework.JUnit4TestCaseFacade: void <init>(org.junit.runner.Description)>(r1);

        return $r10;

     label1:
        $r5 = new junit.framework.TestSuite;

        $r6 = virtualinvoke r1.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        specialinvoke $r5.<junit.framework.TestSuite: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke r1.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        r3 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.junit.runner.Description) $r8;

        $r9 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>(r4);

        virtualinvoke $r5.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r9);

        goto label2;

     label3:
        return $r5;
    }

    public org.junit.runner.notification.RunNotifier getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)
    {
        junit.framework.JUnit4TestAdapterCache r0;
        junit.framework.TestResult r1;
        junit.framework.JUnit4TestAdapter r2;
        org.junit.runner.notification.RunNotifier $r4;
        junit.framework.JUnit4TestAdapterCache$1 $r5;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        r1 := @parameter0: junit.framework.TestResult;

        r2 := @parameter1: junit.framework.JUnit4TestAdapter;

        $r4 = new org.junit.runner.notification.RunNotifier;

        specialinvoke $r4.<org.junit.runner.notification.RunNotifier: void <init>()>();

        $r5 = new junit.framework.JUnit4TestAdapterCache$1;

        specialinvoke $r5.<junit.framework.JUnit4TestAdapterCache$1: void <init>(junit.framework.JUnit4TestAdapterCache,junit.framework.TestResult)>(r0, r1);

        virtualinvoke $r4.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>($r5);

        return $r4;
    }

    public java.util.List asTestList(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapterCache r0;
        org.junit.runner.Description r1, r4;
        java.util.Iterator r3;
        boolean $z0, $z1;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r7;
        junit.framework.Test $r8, $r10;
        junit.framework.Test[] $r9;
        java.util.List $r11;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        r1 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke r1.<org.junit.runner.Description: boolean isTest()>();

        if $z0 == 0 goto label1;

        $r9 = newarray (junit.framework.Test)[1];

        $r10 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>(r1);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        return $r11;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = virtualinvoke r1.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        r3 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.junit.runner.Description) $r7;

        $r8 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>(r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        return $r5;
    }

    static void <clinit>()
    {
        junit.framework.JUnit4TestAdapterCache $r0;

        <junit.framework.JUnit4TestAdapterCache: long serialVersionUID> = 1L;

        $r0 = new junit.framework.JUnit4TestAdapterCache;

        specialinvoke $r0.<junit.framework.JUnit4TestAdapterCache: void <init>()>();

        <junit.framework.JUnit4TestAdapterCache: junit.framework.JUnit4TestAdapterCache fInstance> = $r0;

        return;
    }
}
