public final enum class org.junit.internal.runners.rules.RuleFieldValidator extends java.lang.Enum
{
    public static final enum org.junit.internal.runners.rules.RuleFieldValidator CLASS_RULE_VALIDATOR;
    public static final enum org.junit.internal.runners.rules.RuleFieldValidator RULE_VALIDATOR;
    public static final enum org.junit.internal.runners.rules.RuleFieldValidator CLASS_RULE_METHOD_VALIDATOR;
    public static final enum org.junit.internal.runners.rules.RuleFieldValidator RULE_METHOD_VALIDATOR;
    private final java.lang.Class fAnnotation;
    private final boolean fStaticMembers;
    private final boolean fMethods;
    private static final org.junit.internal.runners.rules.RuleFieldValidator[] $VALUES;

    public static org.junit.internal.runners.rules.RuleFieldValidator[] values()
    {
        org.junit.internal.runners.rules.RuleFieldValidator[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.junit.internal.runners.rules.RuleFieldValidator[]) $r1;

        return $r2;
    }

    public static org.junit.internal.runners.rules.RuleFieldValidator valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.junit.internal.runners.rules.RuleFieldValidator $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/junit/internal/runners/rules/RuleFieldValidator", r0);

        $r2 = (org.junit.internal.runners.rules.RuleFieldValidator) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.Class, boolean, boolean)
    {
        org.junit.internal.runners.rules.RuleFieldValidator r0;
        java.lang.String r1;
        int i0;
        java.lang.Class r2;
        boolean z0, z1;

        r0 := @this: org.junit.internal.runners.rules.RuleFieldValidator;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Class;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.junit.internal.runners.rules.RuleFieldValidator: java.lang.Class fAnnotation> = r2;

        r0.<org.junit.internal.runners.rules.RuleFieldValidator: boolean fStaticMembers> = z1;

        r0.<org.junit.internal.runners.rules.RuleFieldValidator: boolean fMethods> = z0;

        return;
    }

    public void validate(org.junit.runners.model.TestClass, java.util.List)
    {
        org.junit.internal.runners.rules.RuleFieldValidator r0;
        org.junit.runners.model.TestClass r1;
        java.util.List r2, $r9;
        java.util.Iterator r4;
        org.junit.runners.model.FrameworkMember r5;
        boolean $z0, $z1;
        java.lang.Class $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: org.junit.internal.runners.rules.RuleFieldValidator;

        r1 := @parameter0: org.junit.runners.model.TestClass;

        r2 := @parameter1: java.util.List;

        $z0 = r0.<org.junit.internal.runners.rules.RuleFieldValidator: boolean fMethods>;

        if $z0 == 0 goto label1;

        $r8 = r0.<org.junit.internal.runners.rules.RuleFieldValidator: java.lang.Class fAnnotation>;

        $r9 = virtualinvoke r1.<org.junit.runners.model.TestClass: java.util.List getAnnotatedMethods(java.lang.Class)>($r8);

        goto label2;

     label1:
        $r6 = r0.<org.junit.internal.runners.rules.RuleFieldValidator: java.lang.Class fAnnotation>;

        $r9 = virtualinvoke r1.<org.junit.runners.model.TestClass: java.util.List getAnnotatedFields(java.lang.Class)>($r6);

     label2:
        r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.junit.runners.model.FrameworkMember) $r7;

        specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: void validateMember(org.junit.runners.model.FrameworkMember,java.util.List)>(r5, r2);

        goto label3;

     label4:
        return;
    }

    private void validateMember(org.junit.runners.model.FrameworkMember, java.util.List)
    {
        org.junit.internal.runners.rules.RuleFieldValidator r0;
        org.junit.runners.model.FrameworkMember r1;
        java.util.List r2;

        r0 := @this: org.junit.internal.runners.rules.RuleFieldValidator;

        r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: void validateStatic(org.junit.runners.model.FrameworkMember,java.util.List)>(r1, r2);

        specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: void validatePublic(org.junit.runners.model.FrameworkMember,java.util.List)>(r1, r2);

        specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: void validateTestRuleOrMethodRule(org.junit.runners.model.FrameworkMember,java.util.List)>(r1, r2);

        return;
    }

    private void validateStatic(org.junit.runners.model.FrameworkMember, java.util.List)
    {
        org.junit.internal.runners.rules.RuleFieldValidator r0;
        org.junit.runners.model.FrameworkMember r1;
        java.util.List r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.junit.internal.runners.rules.RuleFieldValidator;

        r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        r2 := @parameter1: java.util.List;

        $z0 = r0.<org.junit.internal.runners.rules.RuleFieldValidator: boolean fStaticMembers>;

        if $z0 == 0 goto label1;

        $z2 = virtualinvoke r1.<org.junit.runners.model.FrameworkMember: boolean isStatic()>();

        if $z2 != 0 goto label1;

        specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: void addError(java.util.List,org.junit.runners.model.FrameworkMember,java.lang.String)>(r2, r1, "must be static.");

     label1:
        $z3 = r0.<org.junit.internal.runners.rules.RuleFieldValidator: boolean fStaticMembers>;

        if $z3 != 0 goto label2;

        $z1 = virtualinvoke r1.<org.junit.runners.model.FrameworkMember: boolean isStatic()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: void addError(java.util.List,org.junit.runners.model.FrameworkMember,java.lang.String)>(r2, r1, "must not be static.");

     label2:
        return;
    }

    private void validatePublic(org.junit.runners.model.FrameworkMember, java.util.List)
    {
        org.junit.internal.runners.rules.RuleFieldValidator r0;
        org.junit.runners.model.FrameworkMember r1;
        java.util.List r2;
        boolean $z0;

        r0 := @this: org.junit.internal.runners.rules.RuleFieldValidator;

        r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        r2 := @parameter1: java.util.List;

        $z0 = virtualinvoke r1.<org.junit.runners.model.FrameworkMember: boolean isPublic()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: void addError(java.util.List,org.junit.runners.model.FrameworkMember,java.lang.String)>(r2, r1, "must be public.");

     label1:
        return;
    }

    private void validateTestRuleOrMethodRule(org.junit.runners.model.FrameworkMember, java.util.List)
    {
        org.junit.internal.runners.rules.RuleFieldValidator r0;
        org.junit.runners.model.FrameworkMember r1;
        java.util.List r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r6;

        r0 := @this: org.junit.internal.runners.rules.RuleFieldValidator;

        r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        r2 := @parameter1: java.util.List;

        $z0 = specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: boolean isMethodRule(org.junit.runners.model.FrameworkMember)>(r1);

        if $z0 != 0 goto label3;

        $z1 = specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: boolean isTestRule(org.junit.runners.model.FrameworkMember)>(r1);

        if $z1 != 0 goto label3;

        $z2 = r0.<org.junit.internal.runners.rules.RuleFieldValidator: boolean fMethods>;

        if $z2 == 0 goto label1;

        $r6 = "must return an implementation of MethodRule or TestRule.";

        goto label2;

     label1:
        $r6 = "must implement MethodRule or TestRule.";

     label2:
        specialinvoke r0.<org.junit.internal.runners.rules.RuleFieldValidator: void addError(java.util.List,org.junit.runners.model.FrameworkMember,java.lang.String)>(r2, r1, $r6);

     label3:
        return;
    }

    private boolean isTestRule(org.junit.runners.model.FrameworkMember)
    {
        org.junit.internal.runners.rules.RuleFieldValidator r0;
        org.junit.runners.model.FrameworkMember r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: org.junit.internal.runners.rules.RuleFieldValidator;

        r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 = class "org/junit/rules/TestRule";

        $r3 = virtualinvoke r1.<org.junit.runners.model.FrameworkMember: java.lang.Class getType()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        return $z0;
    }

    private boolean isMethodRule(org.junit.runners.model.FrameworkMember)
    {
        org.junit.internal.runners.rules.RuleFieldValidator r0;
        org.junit.runners.model.FrameworkMember r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: org.junit.internal.runners.rules.RuleFieldValidator;

        r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 = class "org/junit/rules/MethodRule";

        $r3 = virtualinvoke r1.<org.junit.runners.model.FrameworkMember: java.lang.Class getType()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        return $z0;
    }

    private void addError(java.util.List, org.junit.runners.model.FrameworkMember, java.lang.String)
    {
        org.junit.internal.runners.rules.RuleFieldValidator r0;
        java.util.List r1;
        org.junit.runners.model.FrameworkMember r2;
        java.lang.String r3, r4, $r8, $r11;
        java.lang.StringBuilder $r5, $r6, $r9, $r10, $r12, $r13, $r14;
        java.lang.Class $r7;
        java.lang.Exception $r15;

        r0 := @this: org.junit.internal.runners.rules.RuleFieldValidator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.junit.runners.model.FrameworkMember;

        r3 := @parameter2: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The @");

        $r7 = r0.<org.junit.internal.runners.rules.RuleFieldValidator: java.lang.Class fAnnotation>;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r11 = virtualinvoke r2.<org.junit.runners.model.FrameworkMember: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.Exception;

        specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>(r4);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r15);

        return;
    }

    static void <clinit>()
    {
        org.junit.internal.runners.rules.RuleFieldValidator $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        org.junit.internal.runners.rules.RuleFieldValidator[] $r4;

        $r0 = new org.junit.internal.runners.rules.RuleFieldValidator;

        specialinvoke $r0.<org.junit.internal.runners.rules.RuleFieldValidator: void <init>(java.lang.String,int,java.lang.Class,boolean,boolean)>("CLASS_RULE_VALIDATOR", 0, class "org/junit/ClassRule", 0, 1);

        <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator CLASS_RULE_VALIDATOR> = $r0;

        $r1 = new org.junit.internal.runners.rules.RuleFieldValidator;

        specialinvoke $r1.<org.junit.internal.runners.rules.RuleFieldValidator: void <init>(java.lang.String,int,java.lang.Class,boolean,boolean)>("RULE_VALIDATOR", 1, class "org/junit/Rule", 0, 0);

        <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator RULE_VALIDATOR> = $r1;

        $r2 = new org.junit.internal.runners.rules.RuleFieldValidator;

        specialinvoke $r2.<org.junit.internal.runners.rules.RuleFieldValidator: void <init>(java.lang.String,int,java.lang.Class,boolean,boolean)>("CLASS_RULE_METHOD_VALIDATOR", 2, class "org/junit/ClassRule", 1, 1);

        <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator CLASS_RULE_METHOD_VALIDATOR> = $r2;

        $r3 = new org.junit.internal.runners.rules.RuleFieldValidator;

        specialinvoke $r3.<org.junit.internal.runners.rules.RuleFieldValidator: void <init>(java.lang.String,int,java.lang.Class,boolean,boolean)>("RULE_METHOD_VALIDATOR", 3, class "org/junit/Rule", 1, 0);

        <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator RULE_METHOD_VALIDATOR> = $r3;

        $r4 = newarray (org.junit.internal.runners.rules.RuleFieldValidator)[4];

        $r5 = <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator CLASS_RULE_VALIDATOR>;

        $r4[0] = $r5;

        $r6 = <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator RULE_VALIDATOR>;

        $r4[1] = $r6;

        $r7 = <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator CLASS_RULE_METHOD_VALIDATOR>;

        $r4[2] = $r7;

        $r8 = <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator RULE_METHOD_VALIDATOR>;

        $r4[3] = $r8;

        <org.junit.internal.runners.rules.RuleFieldValidator: org.junit.internal.runners.rules.RuleFieldValidator[] $VALUES> = $r4;

        return;
    }
}
