public class org.junit.internal.runners.statements.RunAfters extends org.junit.runners.model.Statement
{
    private final org.junit.runners.model.Statement fNext;
    private final java.lang.Object fTarget;
    private final java.util.List fAfters;

    public void <init>(org.junit.runners.model.Statement, java.util.List, java.lang.Object)
    {
        org.junit.internal.runners.statements.RunAfters r0;
        org.junit.runners.model.Statement r1;
        java.util.List r2;
        java.lang.Object r3;

        r0 := @this: org.junit.internal.runners.statements.RunAfters;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        r0.<org.junit.internal.runners.statements.RunAfters: org.junit.runners.model.Statement fNext> = r1;

        r0.<org.junit.internal.runners.statements.RunAfters: java.util.List fAfters> = r2;

        r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object fTarget> = r3;

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        org.junit.internal.runners.statements.RunAfters r0;
        java.util.Iterator r3, r28, r32;
        org.junit.runners.model.FrameworkMethod r4, r29, r33;
        java.util.ArrayList $r6;
        org.junit.runners.model.Statement $r7;
        java.util.List $r8, $r15, $r22;
        boolean $z0, $z3, $z5;
        java.lang.Object $r9, $r11, $r16, $r18, $r23, $r25;
        java.lang.Object[] $r10, $r17, $r24;
        java.lang.Throwable $r13, $r14, $r20, $r21, $r27;

        r0 := @this: org.junit.internal.runners.statements.RunAfters;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

     label01:
        $r7 = r0.<org.junit.internal.runners.statements.RunAfters: org.junit.runners.model.Statement fNext>;

        virtualinvoke $r7.<org.junit.runners.model.Statement: void evaluate()>();

     label02:
        $r8 = r0.<org.junit.internal.runners.statements.RunAfters: java.util.List fAfters>;

        r28 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r9 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.junit.runners.model.FrameworkMethod) $r9;

     label04:
        $r11 = r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object fTarget>;

        $r10 = newarray (java.lang.Object)[0];

        virtualinvoke r29.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r11, $r10);

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r13);

     label07:
        goto label03;

     label08:
        goto label25;

     label09:
        $r14 := @caughtexception;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r14);

     label10:
        $r15 = r0.<org.junit.internal.runners.statements.RunAfters: java.util.List fAfters>;

        r32 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $r16 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.junit.runners.model.FrameworkMethod) $r16;

     label12:
        $r18 = r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object fTarget>;

        $r17 = newarray (java.lang.Object)[0];

        virtualinvoke r33.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r18, $r17);

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r20);

     label15:
        goto label11;

     label16:
        goto label25;

     label17:
        $r21 := @caughtexception;

     label18:
        $r22 = r0.<org.junit.internal.runners.statements.RunAfters: java.util.List fAfters>;

        r3 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z5 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label24;

        $r23 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.junit.runners.model.FrameworkMethod) $r23;

     label20:
        $r25 = r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object fTarget>;

        $r24 = newarray (java.lang.Object)[0];

        virtualinvoke r4.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r25, $r24);

     label21:
        goto label23;

     label22:
        $r27 := @caughtexception;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r27);

     label23:
        goto label19;

     label24:
        throw $r21;

     label25:
        staticinvoke <org.junit.runners.model.MultipleFailureException: void assertEmpty(java.util.List)>($r6);

        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label17 to label18 with label17;
    }
}
