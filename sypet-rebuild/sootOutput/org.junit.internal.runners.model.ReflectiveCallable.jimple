public abstract class org.junit.internal.runners.model.ReflectiveCallable extends java.lang.Object
{

    public void <init>()
    {
        org.junit.internal.runners.model.ReflectiveCallable r0;

        r0 := @this: org.junit.internal.runners.model.ReflectiveCallable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object run() throws java.lang.Throwable
    {
        org.junit.internal.runners.model.ReflectiveCallable r0;
        java.lang.Object $r2;
        java.lang.reflect.InvocationTargetException $r3;
        java.lang.Throwable $r4;

        r0 := @this: org.junit.internal.runners.model.ReflectiveCallable;

     label1:
        $r2 = virtualinvoke r0.<org.junit.internal.runners.model.ReflectiveCallable: java.lang.Object runReflectiveCall()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        throw $r4;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    protected abstract java.lang.Object runReflectiveCall() throws java.lang.Throwable;
}
